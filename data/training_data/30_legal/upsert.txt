<t>CREATE TABLE LegalDocuments (document_id INT PRIMARY KEY, document_name VARCHAR(255), document_type VARCHAR(50), document_content TEXT, created_date TIMESTAMP)</t><stat>UPSERT INTO LegalDocuments (document_id, document_name, document_type, document_content, created_date) VALUES (1, 'Document 1', 'Type A', 'Content A', '2022-01-01')</stat><divider><t>CREATE TABLE LegalDocuments (document_id INT PRIMARY KEY, document_name VARCHAR(255), document_type VARCHAR(50), document_content TEXT, created_date TIMESTAMP)</t><stat>upsert into legaldocuments (document_id, document_name, document_type, document_content, created_date) values (1, 'document 1', 'type a', 'content a', '2022-01-01')</stat><divider><t>CREATE TABLE LegalDocuments (document_id INT PRIMARY KEY, document_name VARCHAR(255), document_type VARCHAR(50), document_content TEXT, created_date TIMESTAMP)</t><stat>UPSERT INTO LegalDocuments (document_id, document_name, document_type, document_content, created_date) VALUES (2, 'Document 2', 'Type B', 'Content B', '2022-01-02')</stat><divider><t>CREATE TABLE LegalDocuments (document_id INT PRIMARY KEY, document_name VARCHAR(255), document_type VARCHAR(50), document_content TEXT, created_date TIMESTAMP)</t><stat>upsert into legaldocuments (document_id, document_name, document_type, document_content, created_date) values (2, 'document 2', 'type b', 'content b', '2022-01-02')</stat><divider><t>CREATE TABLE LegalDocuments (document_id INT PRIMARY KEY, document_name VARCHAR(255), document_type VARCHAR(50), document_content TEXT, created_date TIMESTAMP)</t><stat>UPSERT INTO LegalDocuments (document_id, document_name, document_type, document_content, created_date) VALUES (3, 'Document 3', 'Type C', 'Content C', '2022-01-03')</stat><divider><t>CREATE TABLE LegalDocuments (document_id INT PRIMARY KEY, document_name VARCHAR(255), document_type VARCHAR(50), document_content TEXT, created_date TIMESTAMP)</t><stat>upsert into legaldocuments (document_id, document_name, document_type, document_content, created_date) values (3, 'document 3', 'type c', 'content c', '2022-01-03')</stat><divider><t>CREATE TABLE LegalCases (case_id INT PRIMARY KEY, case_name TEXT, case_description TEXT)

CREATE TABLE Lawyers (lawyer_id INT PRIMARY KEY, lawyer_name TEXT, specialization TEXT)</t><stat>UPSERT INTO LegalCases (case_id, case_name, case_description) VALUES (1, 'Case 1', 'Description 1')</stat><divider><t>CREATE TABLE LegalCases (case_id INT PRIMARY KEY, case_name TEXT, case_description TEXT)

CREATE TABLE Lawyers (lawyer_id INT PRIMARY KEY, lawyer_name TEXT, specialization TEXT)</t><stat>upsert into legalcases (case_id, case_name, case_description) values (1, 'case 1', 'description 1')</stat><divider><t>CREATE TABLE Lawyers (lawyer_id INT PRIMARY KEY, lawyer_name TEXT, specialization TEXT)

CREATE TABLE LegalCases (case_id INT PRIMARY KEY, case_name TEXT, case_description TEXT)</t><stat>UPSERT INTO LegalCases (case_id, case_name, case_description) VALUES (1, 'Case 1', 'Description 1')</stat><divider><t>CREATE TABLE Lawyers (lawyer_id INT PRIMARY KEY, lawyer_name TEXT, specialization TEXT)

CREATE TABLE LegalCases (case_id INT PRIMARY KEY, case_name TEXT, case_description TEXT)</t><stat>upsert into legalcases (case_id, case_name, case_description) values (1, 'case 1', 'description 1')</stat><divider><t>CREATE TABLE LegalCases (case_id INT PRIMARY KEY, case_name TEXT, case_description TEXT)

CREATE TABLE Lawyers (lawyer_id INT PRIMARY KEY, lawyer_name TEXT, specialization TEXT)</t><stat>UPSERT INTO Lawyers (lawyer_id, lawyer_name, specialization) VALUES (1, 'Lawyer 1', 'Specialization 1')</stat><divider><t>CREATE TABLE LegalCases (case_id INT PRIMARY KEY, case_name TEXT, case_description TEXT)

CREATE TABLE Lawyers (lawyer_id INT PRIMARY KEY, lawyer_name TEXT, specialization TEXT)</t><stat>upsert into lawyers (lawyer_id, lawyer_name, specialization) values (1, 'lawyer 1', 'specialization 1')</stat><divider><t>CREATE TABLE Lawyers (lawyer_id INT PRIMARY KEY, lawyer_name TEXT, specialization TEXT)

CREATE TABLE LegalCases (case_id INT PRIMARY KEY, case_name TEXT, case_description TEXT)</t><stat>UPSERT INTO Lawyers (lawyer_id, lawyer_name, specialization) VALUES (1, 'Lawyer 1', 'Specialization 1')</stat><divider><t>CREATE TABLE Lawyers (lawyer_id INT PRIMARY KEY, lawyer_name TEXT, specialization TEXT)

CREATE TABLE LegalCases (case_id INT PRIMARY KEY, case_name TEXT, case_description TEXT)</t><stat>upsert into lawyers (lawyer_id, lawyer_name, specialization) values (1, 'lawyer 1', 'specialization 1')</stat><divider><t>CREATE TABLE LegalCases (case_id INT PRIMARY KEY, case_name TEXT, case_description TEXT)

CREATE TABLE Lawyers (lawyer_id INT PRIMARY KEY, lawyer_name TEXT, specialization TEXT)</t><stat>UPSERT INTO LegalCases (case_id, case_name, case_description) VALUES (2, 'Case 2', 'Description 2')</stat><divider><t>CREATE TABLE LegalCases (case_id INT PRIMARY KEY, case_name TEXT, case_description TEXT)

CREATE TABLE Lawyers (lawyer_id INT PRIMARY KEY, lawyer_name TEXT, specialization TEXT)</t><stat>upsert into legalcases (case_id, case_name, case_description) values (2, 'case 2', 'description 2')</stat><divider><t>CREATE TABLE Lawyers (lawyer_id INT PRIMARY KEY, lawyer_name TEXT, specialization TEXT)

CREATE TABLE LegalCases (case_id INT PRIMARY KEY, case_name TEXT, case_description TEXT)</t><stat>UPSERT INTO LegalCases (case_id, case_name, case_description) VALUES (2, 'Case 2', 'Description 2')</stat><divider><t>CREATE TABLE Lawyers (lawyer_id INT PRIMARY KEY, lawyer_name TEXT, specialization TEXT)

CREATE TABLE LegalCases (case_id INT PRIMARY KEY, case_name TEXT, case_description TEXT)</t><stat>upsert into legalcases (case_id, case_name, case_description) values (2, 'case 2', 'description 2')</stat><divider><t>CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);</t><stat>UPSERT INTO lawyers (id, name) VALUES (1, 'John Doe');</stat><divider><t>CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);</t><stat>upsert into lawyers (id, name) values (1, 'john doe');</stat><divider><t>CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);</t><stat>UPSERT INTO lawyers (id, name) VALUES (1, 'John Doe');</stat><divider><t>CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);</t><stat>upsert into lawyers (id, name) values (1, 'john doe');</stat><divider><t>CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);</t><stat>UPSERT INTO lawyers (id, name) VALUES (1, 'John Doe');</stat><divider><t>CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);</t><stat>upsert into lawyers (id, name) values (1, 'john doe');</stat><divider><t>CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);</t><stat>UPSERT INTO lawyers (id, name) VALUES (1, 'John Doe');</stat><divider><t>CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);</t><stat>upsert into lawyers (id, name) values (1, 'john doe');</stat><divider><t>CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);</t><stat>UPSERT INTO lawyers (id, name) VALUES (1, 'John Doe');</stat><divider><t>CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);</t><stat>upsert into lawyers (id, name) values (1, 'john doe');</stat><divider><t>CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);</t><stat>UPSERT INTO lawyers (id, name) VALUES (1, 'John Doe');</stat><divider><t>CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);</t><stat>upsert into lawyers (id, name) values (1, 'john doe');</stat><divider><t>CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);</t><stat>UPSERT INTO clients (id, name, lawyer_id) VALUES (1, 'Client 1', 1);</stat><divider><t>CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);</t><stat>upsert into clients (id, name, lawyer_id) values (1, 'client 1', 1);</stat><divider><t>CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);</t><stat>UPSERT INTO clients (id, name, lawyer_id) VALUES (1, 'Client 1', 1);</stat><divider><t>CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);</t><stat>upsert into clients (id, name, lawyer_id) values (1, 'client 1', 1);</stat><divider><t>CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);</t><stat>UPSERT INTO clients (id, name, lawyer_id) VALUES (1, 'Client 1', 1);</stat><divider><t>CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);</t><stat>upsert into clients (id, name, lawyer_id) values (1, 'client 1', 1);</stat><divider><t>CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);</t><stat>UPSERT INTO clients (id, name, lawyer_id) VALUES (1, 'Client 1', 1);</stat><divider><t>CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);</t><stat>upsert into clients (id, name, lawyer_id) values (1, 'client 1', 1);</stat><divider><t>CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);</t><stat>UPSERT INTO clients (id, name, lawyer_id) VALUES (1, 'Client 1', 1);</stat><divider><t>CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);</t><stat>upsert into clients (id, name, lawyer_id) values (1, 'client 1', 1);</stat><divider><t>CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);</t><stat>UPSERT INTO clients (id, name, lawyer_id) VALUES (1, 'Client 1', 1);</stat><divider><t>CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);</t><stat>upsert into clients (id, name, lawyer_id) values (1, 'client 1', 1);</stat><divider><t>CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);</t><stat>UPSERT INTO cases (id, case_number, client_id) VALUES (1, 12345, 1);</stat><divider><t>CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);</t><stat>upsert into cases (id, case_number, client_id) values (1, 12345, 1);</stat><divider><t>CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);</t><stat>UPSERT INTO cases (id, case_number, client_id) VALUES (1, 12345, 1);</stat><divider><t>CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);</t><stat>upsert into cases (id, case_number, client_id) values (1, 12345, 1);</stat><divider><t>CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);</t><stat>UPSERT INTO cases (id, case_number, client_id) VALUES (1, 12345, 1);</stat><divider><t>CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);</t><stat>upsert into cases (id, case_number, client_id) values (1, 12345, 1);</stat><divider><t>CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);</t><stat>UPSERT INTO cases (id, case_number, client_id) VALUES (1, 12345, 1);</stat><divider><t>CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);</t><stat>upsert into cases (id, case_number, client_id) values (1, 12345, 1);</stat><divider><t>CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);</t><stat>UPSERT INTO cases (id, case_number, client_id) VALUES (1, 12345, 1);</stat><divider><t>CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);</t><stat>upsert into cases (id, case_number, client_id) values (1, 12345, 1);</stat><divider><t>CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);</t><stat>UPSERT INTO cases (id, case_number, client_id) VALUES (1, 12345, 1);</stat><divider><t>CREATE TABLE cases (id INT PRIMARY KEY, case_number INT, client_id INT REFERENCES clients);

CREATE TABLE clients (id INT PRIMARY KEY, name STRING, lawyer_id INT REFERENCES lawyers);

CREATE TABLE lawyers (id INT PRIMARY KEY, name STRING);</t><stat>upsert into cases (id, case_number, client_id) values (1, 12345, 1);</stat><divider><t>CREATE TABLE clients (client_id INT PRIMARY KEY, client_name VARCHAR(100) NOT NULL, client_address VARCHAR(255) NOT NULL)</t><stat>UPSERT INTO clients (client_id, client_name, client_address) VALUES (1, 'John Doe', '123 Main Street')</stat><divider><t>CREATE TABLE clients (client_id INT PRIMARY KEY, client_name VARCHAR(100) NOT NULL, client_address VARCHAR(255) NOT NULL)</t><stat>upsert into clients (client_id, client_name, client_address) values (1, 'john doe', '123 main street')</stat><divider><t>CREATE TABLE clients (client_id INT PRIMARY KEY, client_name VARCHAR(100) NOT NULL, client_address VARCHAR(255) NOT NULL)</t><stat>UPSERT INTO clients (client_id, client_name, client_address) VALUES (2, 'Jane Smith', '456 Elm Street')</stat><divider><t>CREATE TABLE clients (client_id INT PRIMARY KEY, client_name VARCHAR(100) NOT NULL, client_address VARCHAR(255) NOT NULL)</t><stat>upsert into clients (client_id, client_name, client_address) values (2, 'jane smith', '456 elm street')</stat><divider><t>CREATE TABLE clients (client_id INT PRIMARY KEY, client_name VARCHAR(100) NOT NULL, client_address VARCHAR(255) NOT NULL)</t><stat>UPSERT INTO clients (client_id, client_name, client_address) VALUES (3, 'Mike Johnson', '789 Oak Street')</stat><divider><t>CREATE TABLE clients (client_id INT PRIMARY KEY, client_name VARCHAR(100) NOT NULL, client_address VARCHAR(255) NOT NULL)</t><stat>upsert into clients (client_id, client_name, client_address) values (3, 'mike johnson', '789 oak street')</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO lawyer (id, name, address) VALUES (1, 'John Doe', '123 Main St') ON DUPLICATE KEY UPDATE name = 'John Doe', address = '123 Main St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into lawyer (id, name, address) values (1, 'john doe', '123 main st') on duplicate key update name = 'john doe', address = '123 main st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO client (id, name, address) VALUES (1, 'Jane Smith', '456 Elm St') ON DUPLICATE KEY UPDATE name = 'Jane Smith', address = '456 Elm St'</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into client (id, name, address) values (1, 'jane smith', '456 elm st') on duplicate key update name = 'jane smith', address = '456 elm st'</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>INSERT INTO case (case_id, case_name, lawyer_id, client_id) VALUES (1, 'Case One', 1, 1) ON DUPLICATE KEY UPDATE case_name = 'Case One', lawyer_id = 1, client_id = 1</stat><divider><t>CREATE TABLE document (document_id INT PRIMARY KEY, document_name STRING, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE hearing (hearing_id INT PRIMARY KEY, hearing_date DATE, case_id INT, FOREIGN KEY (case_id) REFERENCES case(case_id))

CREATE TABLE case (case_id INT PRIMARY KEY, case_name STRING, lawyer_id INT, client_id INT, FOREIGN KEY (lawyer_id) REFERENCES lawyer(id), FOREIGN KEY (client_id) REFERENCES client(id))

CREATE TABLE client (id INT PRIMARY KEY, name STRING, address STRING)

CREATE TABLE lawyer (id INT PRIMARY KEY, name STRING, address STRING)</t><stat>insert into case (case_id, case_name, lawyer_id, client_id) values (1, 'case one', 1, 1) on duplicate key update case_name = 'case one', lawyer_id = 1, client_id = 1</stat>