[
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM case_files WHERE case_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT case_name FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, case_name FROM case_files WHERE case_status = 'Open';",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM case_files WHERE case_type LIKE '%murder%';",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, case_description FROM case_files WHERE case_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT case_type FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM case_files WHERE case_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, case_name, case_description FROM case_files WHERE case_status = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM case_files WHERE case_type = 'Robbery' AND case_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, case_status FROM case_files WHERE case_type = 'Assault' ORDER BY case_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(case_id) FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(case_id) FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(case_id) FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT SUM(case_id) FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT case_type FROM case_files ORDER BY case_type ASC;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM case_files WHERE case_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT case_id FROM case_files WHERE case_status = 'Resolved' AND case_type = 'Fraud';",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM case_files WHERE case_description LIKE '%urgent%' LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, COUNT(*) FROM case_files GROUP BY case_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM case_files WHERE case_type = 'criminal' AND case_status = 'open';",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, case_name FROM case_files WHERE case_type = 'civil' ORDER BY case_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, case_type, case_status FROM case_files WHERE case_status IN ('open', 'closed') AND case_type LIKE '%investigation%';",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, case_name, case_description FROM case_files WHERE case_status = 'pending' OR case_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(case_id) AS total_cases FROM case_files WHERE case_type = 'criminal';",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT case_type FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, case_name, LENGTH(case_description) AS description_length FROM case_files WHERE LENGTH(case_description) > 100;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(LENGTH(case_description)) AS avg_description_length FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, UPPER(case_name) AS uppercase_name FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id INT PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_type VARCHAR(100),\n  case_status VARCHAR(50),\n  case_description TEXT\n)\n\n### STATEMENT\n\nSELECT...",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM case_files",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT case_name, case_description FROM case_files",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT document_title FROM legal_documents",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT document_date, document_content FROM legal_documents",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM case_files LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM legal_documents LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT case_name, case_description FROM case_files WHERE case_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT document_title, document_content FROM legal_documents WHERE document_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM case_files WHERE case_id = '123e4567-e89b-12d3-a456-426614174000'",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM legal_documents WHERE document_id = '123e4567-e89b-12d3-a456-426614174001'",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM case_files ORDER BY case_name ASC",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM legal_documents ORDER BY document_date DESC",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM case_files",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM legal_documents",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(document_date) FROM legal_documents",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT SUM(LENGTH(document_content)) FROM legal_documents",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT case_name FROM case_files",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT document_date FROM legal_documents",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM case_files INNER JOIN legal_documents ON case_files.case_id = legal_documents.document_id",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT case_name, document_title FROM case_files LEFT JOIN legal_documents ON case_files.case_id = legal_documents.document_id",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM case_files RIGHT JOIN legal_documents ON case_files.case_id = legal_documents.document_id",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM case_files WHERE case_name LIKE 'A%' AND case_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT document_title, document_date FROM legal_documents WHERE document_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT c.case_name, d.document_title FROM case_files c INNER JOIN legal_documents d ON c.case_id = d.document_id;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(LENGTH(case_name)) AS avg_name_length FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM case_files WHERE case_name NOT IN ('Case A', 'Case B');",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(document_date) AS latest_document_date FROM legal_documents;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT document_title FROM legal_documents ORDER BY document_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT c.case_name, COUNT(d.document_id) AS num_documents FROM case_files c LEFT JOIN legal_documents d ON c.case_id = d.document_id GROUP BY c.case_name;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT case_name, LENGTH(case_description) AS desc_length FROM case_files WHERE LENGTH(case_description) > 100;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT document_title, SUBSTRING(document_content, 1, 50) AS content_preview FROM legal_documents;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM case_files WHERE case_description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(LENGTH(document_content)) AS avg_content_length FROM legal_documents;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_cases FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT document_title, YEAR(document_date) AS document_year FROM legal_documents;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT c.case_name, d.document_title, d.document_date FROM case_files c LEFT JOIN legal_documents d ON c.case_id = d.document_id WHERE YEAR(d.document_date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT document_title FROM legal_documents;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT c.case_name, COUNT(d.document_id) AS num_documents FROM case_files c LEFT JOIN legal_documents d ON c.case_id = d.document_id WHERE d.document_date > '2021-01-01' GROUP BY c.case_name;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT document_title, document_date FROM legal_documents WHERE document_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT case_name, LOWER(case_description) AS lower_desc FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT CASE WHEN LENGTH(case_name) > 15 THEN 'Long Name' ELSE 'Short Name' END AS name_length_category FROM case_files;",
  "### TABLEDATA\n\nCREATE TABLE case_files (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT\n);\n\nCREATE TABLE legal_documents (\n  document_id UUID PRIMARY KEY,\n  document_title VARCHAR(255),\n  document_date DATE,\n  document_content TEXT\n);\n\n### STATEMENT\n\nSELECT document_date, COUNT(*) AS num_documents FROM legal_documents GROUP BY document_date HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT * FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, case_description FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT doc_name, doc_type FROM LegalDocuments;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT case_id FROM LegalDocuments;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT history_id, event_date FROM CaseHistory WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_id, MAX(event_date) FROM CaseHistory GROUP BY case_id;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, doc_name FROM CaseFiles JOIN LegalDocuments ON CaseFiles.case_id = LegalDocuments.case_id;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT AVG(event_date - case_date) AS avg_duration FROM CaseFiles JOIN CaseHistory ON CaseFiles.case_id = CaseHistory.case_id;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, COUNT(*) FROM CaseFiles JOIN LegalDocuments ON CaseFiles.case_id = LegalDocuments.case_id GROUP BY case_name;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, doc_name FROM CaseFiles LEFT JOIN LegalDocuments ON CaseFiles.case_id = LegalDocuments.case_id;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT doc_type, COUNT(*) FROM LegalDocuments GROUP BY doc_type HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, MAX(event_date) FROM CaseFiles LEFT JOIN CaseHistory ON CaseFiles.case_id = CaseHistory.case_id GROUP BY case_name;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_name LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, COUNT(*) FROM CaseFiles JOIN CaseHistory ON CaseFiles.case_id = CaseHistory.case_id GROUP BY case_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT doc_name, LENGTH(doc_content) AS content_length FROM LegalDocuments;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT case_id) AS total_cases FROM LegalDocuments;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, COUNT(DISTINCT doc_type) AS unique_document_types FROM CaseFiles JOIN LegalDocuments ON CaseFiles.case_id = LegalDocuments.case_id GROUP BY case_name;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT AVG(event_date::date - case_date) AS avg_days_duration FROM CaseFiles JOIN CaseHistory ON CaseFiles.case_id = CaseHistory.case_id;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT * FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_id, case_name FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT doc_name, doc_type FROM LegalDocuments;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT * FROM LegalDocuments WHERE doc_type = 'Affidavit';",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, event_date FROM CaseFiles JOIN CaseHistory ON CaseFiles.case_id = CaseHistory.case_id;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, event_date FROM CaseFiles LEFT JOIN CaseHistory ON CaseFiles.case_id = CaseHistory.case_id;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, event_description FROM CaseFiles JOIN CaseHistory ON CaseFiles.case_id = CaseHistory.case_id WHERE event_description LIKE '%hearing%';",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM LegalDocuments WHERE doc_type = 'Summons';",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, COUNT(*) AS doc_count FROM CaseFiles LEFT JOIN LegalDocuments ON CaseFiles.case_id = LegalDocuments.case_id GROUP BY case_name;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT MAX(event_date) FROM CaseHistory;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT MIN(event_date) FROM CaseHistory;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(CURRENT_TIMESTAMP, event_date)) AS avg_days_since_event FROM CaseHistory;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CaseHistory WHERE event_date < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, SUM(DATEDIFF(CURRENT_TIMESTAMP, event_date)) AS total_days_since_event FROM CaseFiles JOIN CaseHistory ON CaseFiles.case_id = CaseHistory.case_id GROUP BY case_name;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT * FROM LegalDocuments WHERE doc_content LIKE '%confidential%';",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT doc_type FROM LegalDocuments;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT case_name, event_date, event_description FROM CaseFiles JOIN CaseHistory ON CaseFiles.case_id = CaseHistory.case_id ORDER BY event_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_name LIKE '%court%';",
  "### TABLEDATA\n\nCREATE TABLE CaseFiles (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_description TEXT,\n  case_date DATE\n);\n\nCREATE TABLE LegalDocuments (\n  doc_id UUID PRIMARY KEY,\n  doc_name VARCHAR(255),\n  doc_type VARCHAR(50),\n  doc_content TEXT,\n  case_id UUID,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\nCREATE TABLE CaseHistory (\n  history_id UUID PRIMARY KEY,\n  case_id UUID,\n  event_date TIMESTAMP,\n  event_description TEXT,\n  FOREIGN KEY (case_id) REFERENCES CaseFiles(case_id)\n);\n\n### STATEMENT\n\nSELECT AVG(CAST(SUBSTRING(doc_id, 1, 8) AS BIGINT)) AS avg_doc_id FROM LegalDocuments;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, case_name FROM CaseFiles",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, case_status FROM CaseFiles",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_type = 'criminal'",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_status = 'closed'",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, case_name FROM CaseFiles WHERE case_type = 'civil'",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_status = 'active'",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, case_name FROM CaseFiles WHERE case_status = 'pending'",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_type = 'criminal' AND case_status = 'active'",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_type = 'civil' AND case_status = 'closed'",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_type = 'criminal' OR case_type = 'civil'",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_status = 'closed' OR case_status = 'pending'",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles ORDER BY case_id ASC",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles ORDER BY case_name DESC",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CaseFiles",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(case_id) FROM CaseFiles",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(case_id) FROM CaseFiles",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(case_id) FROM CaseFiles",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT SUM(case_id) FROM CaseFiles",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT case_type FROM CaseFiles",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_name = 'ExampleName' AND case_type = 'Type1';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, case_status FROM CaseFiles WHERE case_status = 'Pending' ORDER BY case_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, COUNT(*) FROM CaseFiles GROUP BY case_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, case_type FROM CaseFiles WHERE case_id IN (SELECT case_id FROM OtherTable WHERE condition);",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT case_type FROM CaseFiles WHERE case_status = 'Resolved';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles ORDER BY case_status DESC, case_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM CaseFiles WHERE case_name LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, UPPER(case_name) FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, LENGTH(case_name) FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, SUBSTRING(case_name, 1, 3) FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, case_type, CASE WHEN case_status = 'Pending' THEN 'Open' ELSE 'Closed' END AS case_state FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_id, case_name, case_type, COALESCE(case_status, 'Not Available') AS case_status FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, CONCAT('Case:', case_name) AS case_label FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, CASE WHEN case_type = 'Type1' THEN 'Important' ELSE 'Normal' END AS priority FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(LENGTH(case_name)) AS avg_length FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, LEAD(case_name) OVER () AS next_case FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, ROW_NUMBER() OVER (ORDER BY case_name) AS row_num FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_name, NTILE(3) OVER (ORDER BY case_name) AS tile_num FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS CaseFiles (\n    case_id UUID PRIMARY KEY,\n    case_name TEXT,\n    case_type TEXT,\n    case_status TEXT\n)\n\n### STATEMENT\n\nSELECT case_type, PERCENT_RANK() OVER (ORDER BY case_type) AS rank FROM CaseFiles;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM cases",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_name, case_description FROM cases",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_documents",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT document_title, document_type FROM legal_documents",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM lawyers",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT lawyer_name, lawyer_specialization FROM lawyers",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM clients",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT client_name, client_email FROM clients",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM case_assignments",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT assignment_date FROM case_assignments",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_name, case_status FROM cases WHERE case_status = 'open'",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT document_title, document_type FROM legal_documents WHERE document_type = 'contract'",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT lawyer_name, lawyer_specialization FROM lawyers WHERE lawyer_specialization = 'criminal law'",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT client_name, client_email FROM clients WHERE client_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM cases ORDER BY case_created_at DESC",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_documents ORDER BY document_created_at DESC",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM lawyers ORDER BY lawyer_name ASC",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM clients ORDER BY client_name DESC",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM cases",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM legal_documents",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM cases;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_name, case_status FROM cases WHERE case_status = 'open';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT document_title, document_type, case_name FROM legal_documents JOIN cases ON legal_documents.case_id = cases.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT lawyer_name, lawyer_specialization FROM lawyers WHERE lawyer_specialization = 'criminal law';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT client_name, client_email FROM clients WHERE client_name LIKE '%Doe%';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT cases.case_name, lawyers.lawyer_name FROM cases JOIN case_assignments ON cases.case_id = case_assignments.case_id JOIN lawyers ON case_assignments.lawyer_id = lawyers.lawyer_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_documents WHERE document_created_at BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT client_name, lawyer_name FROM clients INNER JOIN cases ON cases.case_id = clients.client_id INNER JOIN case_assignments ON cases.case_id = case_assignments.case_id INNER JOIN lawyers ON case_assignments.lawyer_id = lawyers.lawyer_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_name, COUNT(*) AS num_assignments FROM cases JOIN case_assignments ON cases.case_id = case_assignments.case_id GROUP BY cases.case_name;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(document_created_at) AS latest_document_date FROM legal_documents;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT lawyer_specialization FROM lawyers;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT client_name, COUNT(*) AS num_cases FROM clients JOIN cases ON clients.client_id = cases.client_id GROUP BY client_name;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT lawyer_name, AVG(DATE_PART('day', NOW() - assignment_date)) AS avg_days_assigned FROM case_assignments JOIN lawyers ON case_assignments.lawyer_id = lawyers.lawyer_id GROUP BY lawyer_name;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM cases WHERE case_created_at >= '2022-01-01' AND case_created_at <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT lawyer_name, COUNT(*) AS num_assignments FROM lawyers JOIN case_assignments ON lawyers.lawyer_id = case_assignments.lawyer_id GROUP BY lawyer_name;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT client_name, client_phone FROM clients WHERE client_phone IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT lawyer_name, AVG(DATE_PART('day', NOW() - assignment_date)) AS avg_days_assigned FROM case_assignments JOIN lawyers ON case_assignments.lawyer_id = lawyers.lawyer_id GROUP BY lawyer_name HAVING AVG(DATE_PART('day', NOW() - assignment_date)) > 10;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_name, COUNT(*) AS num_documents FROM cases LEFT JOIN legal_documents ON cases.case_id = legal_documents.case_id GROUP BY case_name;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT lawyer_name, COUNT(*) AS num_cases_assigned FROM lawyers LEFT JOIN case_assignments ON lawyers.lawyer_id = case_assignments.lawyer_id GROUP BY lawyer_name;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id UUID PRIMARY KEY,\n case_name STRING,\n case_description STRING,\n case_status STRING,\n case_created_at TIMESTAMP\n)\n\nCREATE TABLE legal_documents (\n document_id UUID PRIMARY KEY,\n document_title STRING,\n document_type STRING,\n document_content TEXT,\n document_created_at TIMESTAMP,\n case_id UUID REFERENCES cases(case_id)\n)\n\nCREATE TABLE lawyers (\n lawyer_id UUID PRIMARY KEY,\n lawyer_name STRING,\n lawyer_specialization STRING,\n lawyer_email STRING,\n lawyer_phone STRING\n)\n\nCREATE TABLE clients (\n client_id UUID PRIMARY KEY,\n client_name STRING,\n client_email STRING,\n client_phone STRING\n)\n\nCREATE TABLE case_assignments (\n assignment_id UUID PRIMARY KEY,\n lawyer_id UUID REFERENCES lawyers(lawyer_id),\n case_id UUID REFERENCES cases(case_id),\n assignment_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT client_name, client_email, SUM(DATE_PART('day', NOW() - case_created_at)) AS total_days_to_resolve FROM clients JOIN cases ON clients.client_id = cases.client_id GROUP BY client_name;"
]