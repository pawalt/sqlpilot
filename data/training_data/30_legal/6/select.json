[
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM client_communications;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT communication_id, communication_date FROM client_communications;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_type FROM client_communications;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT communication_content FROM client_communications;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM client_communications WHERE communication_type = 'email';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM client_communications WHERE client_id = '12345678-1234-1234-1234-1234567890AB';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM client_communications WHERE communication_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT communication_id FROM client_communications WHERE client_id = '87654321-4321-4321-4321-0987654321BA';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT communication_date, communication_content FROM client_communications WHERE communication_type = 'phone';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_date FROM client_communications WHERE communication_type = 'letter';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM client_communications WHERE client_id = '34567890-5678-5678-5678-0987654321BA' AND communication_type = 'email';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_type FROM client_communications WHERE communication_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM client_communications WHERE client_id = '87654321-8765-8765-8765-1234567890BA' AND communication_type = 'phone';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT communication_id, communication_type FROM client_communications WHERE communication_date > '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM client_communications WHERE communication_type = 'email' AND communication_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM client_communications WHERE client_id = '34567890-5678-5678-5678-0987654321BA' AND communication_date > '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT communication_date FROM client_communications WHERE client_id = '87654321-4321-4321-4321-0987654321BA';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT communication_id, communication_content FROM client_communications WHERE client_id = '87654321-8765-8765-8765-1234567890BA' AND communication_type = 'phone';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM client_communications WHERE communication_type = 'letter' AND communication_date < '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM client_communications WHERE client_id = '34567890-5678-5678-5678-0987654321BA' AND communication_type = 'email' AND communication_date > '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT communication_id, communication_type FROM client_communications WHERE client_id = '87654321-8765-8765-8765-1234567890BA' AND communication_date > '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM client_communications WHERE client_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT communication_id, client_id, communication_type FROM client_communications WHERE communication_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, COUNT(communication_id) AS num_communications FROM client_communications GROUP BY client_id HAVING num_communications > 5;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_type FROM client_communications ORDER BY communication_date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, AVG(LENGTH(communication_content)) AS avg_content_length FROM client_communications GROUP BY client_id HAVING avg_content_length > 1000;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_type, EXTRACT(MONTH FROM communication_date) AS month FROM client_communications WHERE EXTRACT(YEAR FROM communication_date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT communication_type, COUNT(*) AS num_communications FROM client_communications GROUP BY communication_type ORDER BY num_communications DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_type, COUNT(*) AS num_communications FROM client_communications WHERE communication_type IN ('email', 'phone') GROUP BY client_id, communication_type HAVING num_communications > 2;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_type, communication_date FROM client_communications WHERE client_id IN ('123e4567-e89b-12d3-a456-426614174000', '223e4567-e89b-12d3-a456-426614174001') AND communication_type NOT IN ('sms') ORDER BY communication_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(LENGTH(communication_content)) AS avg_content_length FROM client_communications;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT EXTRACT(DOW FROM communication_date) AS day_of_week, COUNT(*) AS num_communications FROM client_communications GROUP BY day_of_week ORDER BY day_of_week ASC;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_type, COUNT(*) AS num_communications FROM client_communications WHERE communication_content LIKE '%important%' GROUP BY client_id, communication_type HAVING num_communications > 0;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, MAX(communication_date) AS latest_communication FROM client_communications GROUP BY client_id;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_type, communication_date FROM client_communications WHERE communication_date >= '2022-06-01 00:00:00' AND communication_date < '2022-07-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_type, communication_date FROM client_communications WHERE communication_date = (SELECT MAX(communication_date) FROM client_communications);",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, COUNT(DISTINCT communication_type) AS num_unique_types FROM client_communications GROUP BY client_id HAVING num_unique_types > 1;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_type, AVG(LENGTH(communication_content)) AS avg_content_length FROM client_communications GROUP BY client_id, communication_type HAVING avg_content_length > 500;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_type, communication_date FROM client_communications WHERE EXTRACT(DOW FROM communication_date) = 1 OR EXTRACT(DOW FROM communication_date) = 5;",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM client_communications WHERE client_id = '223e4567-e89b-12d3-a456-426614174001' AND communication_date >= '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE client_communications (\n  communication_id UUID PRIMARY KEY,\n  client_id UUID,\n  communication_type VARCHAR(50),\n  communication_date TIMESTAMP,\n  communication_content TEXT\n)\n\n### STATEMENT\n\nSELECT client_id, communication_type, communication_date FROM client_communications WHERE communication_content ILIKE '%urgent%' ORDER BY communication_date DESC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ClientInteractions;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, client_id, interaction_date FROM ClientInteractions;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, interaction_date, interaction_type FROM ClientInteractions;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description FROM ClientInteractions;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Clients;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, client_name FROM Clients;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT phone_number, email FROM Clients;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT client_name, address FROM Clients;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ClientInteractions WHERE client_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ClientInteractions WHERE interaction_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Clients WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Clients WHERE address ILIKE '%avenue%';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ClientInteractions WHERE interaction_type = 'Meeting';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Clients WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, client_name FROM Clients WHERE address NOT LIKE '%PO Box%';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description FROM ClientInteractions WHERE interaction_type = 'Call';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, client_name, phone_number FROM Clients WHERE email IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, client_id, interaction_date FROM ClientInteractions WHERE interaction_date < '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Clients ORDER BY client_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ClientInteractions ORDER BY interaction_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ClientInteractions WHERE client_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_date, interaction_type FROM ClientInteractions WHERE client_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT client_name, phone_number FROM Clients WHERE email = 'example@email.com';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ClientInteractions WHERE interaction_type = 'meeting';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description FROM ClientInteractions WHERE interaction_type = 'call';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT client_name, email FROM Clients WHERE phone_number = '1234567890';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_description FROM ClientInteractions ORDER BY interaction_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT client_name, address FROM Clients WHERE client_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_date, interaction_description FROM ClientInteractions WHERE client_id = 4 AND interaction_type = 'email';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT client_id) FROM ClientInteractions;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT client_name, email, address FROM Clients WHERE client_id = 5 AND email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description FROM ClientInteractions WHERE interaction_type LIKE 'meeting%';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, client_name FROM Clients WHERE address ILIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(client_id) FROM Clients;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT client_name, phone_number, email FROM Clients WHERE client_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT SUM(client_id) FROM Clients;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type FROM ClientInteractions WHERE interaction_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT client_name FROM Clients;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(client_id) FROM Clients;",
  "### TABLEDATA\n\nCREATE TABLE ClientInteractions (\n    interaction_id SERIAL PRIMARY KEY,\n    client_id INT NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT,\n    FOREIGN KEY (client_id) REFERENCES Clients(client_id)\n);\n\nCREATE TABLE Clients (\n    client_id SERIAL PRIMARY KEY,\n    client_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(client_id) FROM Clients;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM clients;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, client_name, email FROM clients;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM communications;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, communication_date, communication_type FROM communications;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT client_name, phone_number FROM clients;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT communication_id, communication_content FROM communications;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_date FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, client_name FROM clients WHERE client_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT client_name, email, phone_number FROM clients WHERE client_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM clients WHERE client_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM communications WHERE communication_type = 'Email';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, client_name FROM clients WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT client_name, phone_number FROM clients WHERE phone_number IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_type LIKE '%meeting%';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, client_name, email FROM clients WHERE client_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM communications WHERE communication_content LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, client_name, phone_number FROM clients ORDER BY client_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT communication_id, communication_date, communication_type FROM communications ORDER BY communication_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM clients;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT client_name, email FROM clients WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, client_name FROM clients WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM communications WHERE communication_type = 'Email';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM communications WHERE communication_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT c.client_name, i.interaction_date FROM clients c INNER JOIN communications cm ON c.client_id = cm.client_id INNER JOIN interactions i ON cm.communication_id = i.communication_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT c.client_name, COUNT(cm.communication_id) AS total_communications FROM clients c INNER JOIN communications cm ON c.client_id = cm.client_id GROUP BY c.client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT c.client_name, COUNT(i.interaction_id) AS total_interactions FROM clients c INNER JOIN communications cm ON c.client_id = cm.client_id INNER JOIN interactions i ON cm.communication_id = i.communication_id GROUP BY c.client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT c.client_name, AVG(DATEDIFF(i.interaction_date, cm.communication_date)) AS average_interaction_response_time FROM clients c INNER JOIN communications cm ON c.client_id = cm.client_id INNER JOIN interactions i ON cm.communication_id = i.communication_id GROUP BY c.client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT c.client_name, MIN(DATEDIFF(i.interaction_date, cm.communication_date)) AS min_interaction_response_time FROM clients c INNER JOIN communications cm ON c.client_id = cm.client_id INNER JOIN interactions i ON cm.communication_id = i.communication_id GROUP BY c.client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT c.client_name, MAX(DATEDIFF(i.interaction_date, cm.communication_date)) AS max_interaction_response_time FROM clients c INNER JOIN communications cm ON c.client_id = cm.client_id INNER JOIN interactions i ON cm.communication_id = i.communication_id GROUP BY c.client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM clients ORDER BY client_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM communications ORDER BY communication_date;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT c.client_name, SUM(DATEDIFF(i.interaction_date, cm.communication_date)) AS total_response_time FROM clients c INNER JOIN communications cm ON c.client_id = cm.client_id INNER JOIN interactions i ON cm.communication_id = i.communication_id GROUP BY c.client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT c.client_name FROM clients c LEFT JOIN communications cm ON c.client_id = cm.client_id WHERE cm.client_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT c.client_name, COUNT(cm.communication_id) AS total_communications FROM clients c LEFT JOIN communications cm ON c.client_id = cm.client_id GROUP BY c.client_name HAVING COUNT(cm.communication_id) < 5;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT client_id, client_name FROM clients UNION SELECT client_id, client_name FROM clients;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT c.client_name, DATEDIFF(MAX(i.interaction_date), MIN(cm.communication_date)) AS total_interaction_span FROM clients c INNER JOIN communications cm ON c.client_id = cm.client_id INNER JOIN interactions i ON cm.communication_id = i.communication_id GROUP BY c.client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT c.client_name, SUM(DATEDIFF(i.interaction_date, cm.communication_date)) AS total_response_time FROM clients c INNER JOIN communications cm ON c.client_id = cm.client_id INNER JOIN interactions i ON cm.communication_id = i.communication_id GROUP BY c.client_name HAVING SUM(DATEDIFF(i.interaction_date, cm.communication_date)) > 30;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT REFERENCES clients(client_id),\n  communication_date DATE,\n  communication_type VARCHAR(50),\n  communication_content TEXT\n);\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  communication_id INT REFERENCES communications(communication_id),\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_details TEXT\n);\n\n### STATEMENT\n\nSELECT c.client_name, AVG(DATEDIFF(i.interaction_date, cm.communication_date)) AS average_response_time FROM clients c INNER JOIN communications cm ON c.client_id = cm.client_id INNER JOIN interactions i ON cm.communication_id = i.communication_id GROUP BY c.client_name HAVING COUNT(i.interaction_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM clients;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, email FROM clients WHERE client_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, phone_number FROM clients WHERE email = 'example@email.com';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM communications;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT communication_type FROM communications WHERE communication_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT communication_date, communication_content FROM communications WHERE client_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_description FROM interactions WHERE client_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT task_name, task_due_date FROM tasks WHERE client_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_id, client_name, email FROM clients WHERE phone_number = '1234567890';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT interaction_date, interaction_description FROM interactions WHERE interaction_type = 'Meeting';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM clients WHERE client_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM communications WHERE communication_type = 'Email' AND communication_date = '2021-08-10';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT task_name, task_description, task_due_date FROM tasks WHERE task_due_date > '2021-09-30';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name FROM clients WHERE client_id IN (SELECT client_id FROM tasks WHERE task_due_date < '2021-10-15');",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT client_name FROM clients;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(task_due_date) FROM tasks WHERE client_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM tasks WHERE client_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(task_due_date) FROM tasks WHERE client_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM clients WHERE client_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_id, client_name FROM clients WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, phone_number FROM clients WHERE client_id IN (SELECT client_id FROM interactions WHERE interaction_type='Meeting');",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT clients.client_name, communications.communication_type FROM clients INNER JOIN communications ON clients.client_id = communications.client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT clients.client_name, tasks.task_name FROM clients LEFT JOIN tasks ON clients.client_id = tasks.client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT clients.client_name, interactions.interaction_description FROM clients RIGHT JOIN interactions ON clients.client_id = interactions.client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT clients.client_name, tasks.task_name, tasks.task_due_date FROM clients INNER JOIN tasks ON clients.client_id = tasks.client_id WHERE tasks.task_due_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_clients FROM clients;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, COUNT(*) AS total_interactions FROM clients INNER JOIN interactions ON clients.client_id = interactions.client_id GROUP BY clients.client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, AVG(task_due_date) AS average_due_date FROM clients INNER JOIN tasks ON clients.client_id = tasks.client_id GROUP BY client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(communication_date) AS latest_communication_date FROM communications;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, MAX(interaction_date) AS latest_interaction_date FROM clients INNER JOIN interactions ON clients.client_id = interactions.client_id GROUP BY client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, MIN(task_due_date) AS earliest_due_date FROM clients INNER JOIN tasks ON clients.client_id = tasks.client_id GROUP BY client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, SUM(CAST(task_due_date AS INT)) AS total_due_days FROM clients INNER JOIN tasks ON clients.client_id = tasks.client_id GROUP BY client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, AVG(DATEDIFF(NOW(), interaction_date)) AS average_days_since_interaction FROM clients INNER JOIN interactions ON clients.client_id = interactions.client_id GROUP BY client_name;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, communication_type, COUNT(*) AS total_communications FROM clients INNER JOIN communications ON clients.client_id = communications.client_id GROUP BY client_name, communication_type;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, interaction_type, COUNT(*) AS total_interactions FROM clients INNER JOIN interactions ON clients.client_id = interactions.client_id GROUP BY client_name, interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, task_name, DATEDIFF(task_due_date, NOW()) AS days_remaining FROM clients INNER JOIN tasks ON clients.client_id = tasks.client_id WHERE DATEDIFF(task_due_date, NOW()) > 0;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT client_name, interaction_description, DATEDIFF(NOW(), interaction_date) AS days_since_interaction FROM clients INNER JOIN interactions ON clients.client_id = interactions.client_id WHERE DATEDIFF(NOW(), interaction_date) > 30;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n    client_id INT PRIMARY KEY,\n    client_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n    communication_id INT PRIMARY KEY,\n    client_id INT,\n    communication_date DATE,\n    communication_type VARCHAR(50),\n    communication_content TEXT\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    client_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    client_id INT,\n    task_name VARCHAR(100),\n    task_description TEXT,\n    task_due_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT client_name FROM clients ORDER BY client_name ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT * FROM clients;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_id, client_name FROM clients WHERE client_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT * FROM communications WHERE communication_type = 'Email';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_id, interaction_type, interaction_date FROM interactions ORDER BY interaction_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT note_text FROM notes WHERE interaction_id = 12;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT task_description, task_due_date FROM tasks WHERE task_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, email FROM clients WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT * FROM communications WHERE communication_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_id, MAX(interaction_date) AS last_interaction_date FROM interactions GROUP BY client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT communication_type, COUNT(*) AS communication_count FROM communications GROUP BY communication_type;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, task_description, task_status FROM clients JOIN tasks ON clients.client_id = tasks.client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_id, AVG(task_due_date) AS avg_due_date FROM tasks GROUP BY client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, interaction_date FROM clients JOIN interactions ON clients.client_id = interactions.client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_id, COUNT(*) AS interaction_count FROM interactions GROUP BY client_id HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT communication_type, DATE_FORMAT(communication_date,'%Y-%m-%d') AS formatted_date FROM communications;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, interaction_type, interaction_date FROM clients JOIN interactions ON clients.client_id = interactions.client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_id, task_description, task_due_date FROM tasks WHERE task_due_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_id, SUM(DATEDIFF(task_due_date, CURDATE())) AS days_remaining FROM tasks WHERE task_status = 'Pending' GROUP BY client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_id, MIN(task_due_date) AS earliest_due_date FROM tasks GROUP BY client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, note_text FROM clients JOIN interactions ON clients.client_id = interactions.client_id JOIN notes ON interactions.interaction_id = notes.interaction_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT * FROM clients WHERE client_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, email FROM clients WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, communication_type, communication_date FROM clients JOIN communications ON clients.client_id = communications.client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT clients.client_name, interactions.interaction_type, interactions.interaction_date FROM clients JOIN interactions ON clients.client_id = interactions.client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, note_text, note_date FROM clients JOIN interactions ON clients.client_id = interactions.client_id JOIN notes ON interactions.interaction_id = notes.interaction_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, task_description, task_due_date FROM clients JOIN tasks ON clients.client_id = tasks.client_id WHERE tasks.task_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, interaction_type, note_text FROM clients JOIN interactions ON clients.client_id = interactions.client_id JOIN notes ON interactions.interaction_id = notes.interaction_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, communication_type, task_description FROM clients JOIN communications ON clients.client_id = communications.client_id JOIN tasks ON clients.client_id = tasks.client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, task_description, task_due_date FROM clients JOIN tasks ON clients.client_id = tasks.client_id WHERE tasks.task_due_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, task_description, task_due_date FROM clients JOIN tasks ON clients.client_id = tasks.client_id WHERE tasks.task_status != 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, communication_type, interaction_type, note_text FROM clients JOIN communications ON clients.client_id = communications.client_id JOIN interactions ON clients.client_id = interactions.client_id JOIN notes ON interactions.interaction_id = notes.interaction_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT clients.client_name, interactions.interaction_type, notes.note_text FROM clients JOIN interactions ON clients.client_id = interactions.client_id JOIN notes ON interactions.interaction_id = notes.interaction_id WHERE interactions.interaction_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, communication_type, communication_date FROM clients JOIN communications ON clients.client_id = communications.client_id WHERE communication_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, interaction_type, note_text FROM clients JOIN interactions ON clients.client_id = interactions.client_id JOIN notes ON interactions.interaction_id = notes.interaction_id WHERE note_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, interaction_type, note_text FROM clients JOIN interactions ON clients.client_id = interactions.client_id JOIN notes ON interactions.interaction_id = notes.interaction_id WHERE interaction_type LIKE '%meeting%';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, task_description, task_due_date FROM clients JOIN tasks ON clients.client_id = tasks.client_id WHERE task_description LIKE '%urgent%';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT clients.client_name, interactions.interaction_type, notes.note_text FROM clients JOIN interactions ON clients.client_id = interactions.client_id JOIN notes ON interactions.interaction_id = notes.interaction_id WHERE notes.note_text LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, communication_type, interaction_type, note_text, task_description FROM clients JOIN communications ON clients.client_id = communications.client_id JOIN interactions ON clients.client_id = interactions.client_id JOIN notes ON interactions.interaction_id = notes.interaction_id JOIN tasks ON clients.client_id = tasks.client_id;",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, interaction_date, task_due_date FROM clients JOIN interactions ON clients.client_id = interactions.client_id JOIN tasks ON clients.client_id = tasks.client_id WHERE interactions.interaction_type = 'Phone Call' AND tasks.task_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE clients (\n  client_id INT PRIMARY KEY,\n  client_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE communications (\n  communication_id INT PRIMARY KEY,\n  client_id INT,\n  communication_type VARCHAR(20),\n  communication_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  client_id INT,\n  interaction_type VARCHAR(20),\n  interaction_date TIMESTAMP,\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n\nCREATE TABLE notes (\n  note_id INT PRIMARY KEY,\n  interaction_id INT,\n  note_text TEXT,\n  note_date TIMESTAMP,\n  FOREIGN KEY (interaction_id) REFERENCES interactions(interaction_id)\n);\n\n\nCREATE TABLE tasks (\n  task_id INT PRIMARY KEY,\n  client_id INT,\n  task_description TEXT,\n  task_due_date DATE,\n  task_status VARCHAR(20) DEFAULT 'Pending',\n  FOREIGN KEY (client_id) REFERENCES clients(client_id)\n);\n\n### STATEMENT\n\nSELECT client_name, interaction_date, note_date, task_due_date FROM clients JOIN interactions ON clients.client_id = interactions.client_id JOIN notes ON interactions.interaction_id = notes.interaction_id JOIN tasks ON clients.client_id = tasks.client_id WHERE interactions.interaction_type = 'Email' AND notes.note_date > '2022-01-01';"
]