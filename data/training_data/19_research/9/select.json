[
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_id, research_topic FROM research_trends;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_id, research_topic, research_keywords FROM research_trends;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends WHERE research_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends WHERE research_topic = 'Machine Learning';",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends WHERE research_keywords @> ARRAY['AI'];",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends WHERE research_keywords @> ARRAY['AI', 'Machine Learning'];",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends WHERE research_keywords <@ ARRAY['AI'];",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends WHERE research_topic LIKE '%Data%';",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends WHERE research_keywords <@ ARRAY['Computer Science', 'Data Science'];",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT count(*) FROM research_trends;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_topic, count(*) FROM research_trends GROUP BY research_topic;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_topic, ARRAY_AGG(research_keywords) FROM research_trends GROUP BY research_topic;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_topic, STRING_AGG(research_keywords, ',') FROM research_trends GROUP BY research_topic;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends ORDER BY research_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends ORDER BY research_topic ASC;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends ORDER BY research_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends OFFSET 5 LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT DISTINCT research_topic FROM research_trends;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_id, research_topic FROM research_trends WHERE research_id = '123';",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_id, research_topic FROM research_trends WHERE research_topic LIKE '%machine learning%';",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends WHERE research_keywords @> ARRAY['AI'];",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends WHERE research_keywords && ARRAY['Deep Learning', 'NLP'];",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_id, research_topic FROM research_trends WHERE research_keywords @> ARRAY['AI'] AND research_topic = 'NLP';",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM research_trends;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT DISTINCT research_topic FROM research_trends;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_id FROM research_trends ORDER BY research_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT AVG(array_length(research_keywords, 1)) AS avg_keywords_length FROM research_trends;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_topic, COUNT(*) as research_count FROM research_trends GROUP BY research_topic HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_id, unnest(research_keywords) AS keyword FROM research_trends;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT (SELECT COUNT(research_id) FROM research_trends) AS total_research_count;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_id, research_topic, research_keywords[array_upper(research_keywords, 1)] AS last_keyword FROM research_trends;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_id, research_topic, research_keywords[array_upper(research_keywords, 1)] AS last_keyword FROM research_trends WHERE array_length(research_keywords, 1) > 1;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT DISTINCT unnest(research_keywords) AS keyword FROM research_trends;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_id, research_topic, research_keywords[array_upper(research_keywords, 1)] AS last_keyword FROM research_trends WHERE research_keywords <@ ARRAY['AI'];",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT research_topic, array_agg(research_id) AS research_ids FROM research_trends GROUP BY research_topic;",
  "### TABLEDATA\n\nCREATE TABLE research_trends (\n  research_id UUID PRIMARY KEY,\n  research_topic TEXT,\n  research_keywords TEXT[]\n)\n\n### STATEMENT\n\nSELECT * FROM research_trends WHERE research_keywords @> ARRAY['AI', 'Machine Learning'] AND research_topic LIKE '%data%';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_topics;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT topic_name FROM research_topics;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topic_id, topic_name FROM research_topics;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT keyword_name FROM research_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT keyword_id, keyword_name FROM research_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topic_id FROM research_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT keyword_id, keyword_name, research_topic_id FROM research_keywords WHERE research_topic_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, research_keywords.keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, research_keywords.keyword_name FROM research_topics LEFT JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, research_keywords.keyword_name FROM research_topics RIGHT JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, research_keywords.keyword_name FROM research_topics INNER JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, research_keywords.keyword_name FROM research_topics FULL JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, research_keywords.keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id WHERE research_keywords.keyword_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, research_keywords.keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id ORDER BY research_keywords.keyword_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, research_keywords.keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, COUNT(research_keywords.keyword_id) AS keyword_count FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id GROUP BY research_topics.topic_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, research_keywords.keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id HAVING COUNT(research_keywords.keyword_id) > 2;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, research_keywords.keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, research_keywords.keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id WHERE research_topics.topic_name LIKE '%topic%';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_topics;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topic_id, topic_name FROM research_topics WHERE research_topic_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT keyword_name FROM research_keywords WHERE research_topic_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topic_id, research_topics.topic_name, keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, COUNT(keyword_id) AS num_keywords FROM research_topics LEFT JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id GROUP BY research_topics.topic_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, AVG(keyword_id) AS avg_keyword_id FROM research_topics LEFT JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id GROUP BY research_topics.topic_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, SUM(keyword_id) AS sum_keyword_id FROM research_topics LEFT JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id GROUP BY research_topics.topic_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id WHERE keyword_name LIKE '%analysis%';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id WHERE research_topics.topic_name = 'Machine Learning';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id ORDER BY research_topics.topic_name ASC, keyword_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT research_topics.topic_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id WHERE research_topics.topic_name IN ('Machine Learning', 'Data Science');",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name AS topic, COUNT(*) AS num_keywords FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id GROUP BY research_topics.topic_name HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id UNION SELECT research_topics.topic_name, keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id WHERE topic_name = 'AI';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, CONCAT(research_topics.topic_name, ' - ', keyword_name) AS topic_keyword FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, keyword_name FROM research_topics LEFT JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id WHERE research_topics.topic_name IS NULL OR keyword_name IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, keyword_name FROM research_topics LEFT JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id WHERE research_topics.topic_name LIKE '%research%' AND keyword_name LIKE '%data%';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  research_topic_id INT PRIMARY KEY,\n  topic_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE research_keywords (\n  keyword_id INT PRIMARY KEY,\n  keyword_name VARCHAR(50) NOT NULL,\n  research_topic_id INT,\n  FOREIGN KEY (research_topic_id) REFERENCES research_topics(research_topic_id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, keyword_name FROM research_topics JOIN research_keywords ON research_topics.research_topic_id = research_keywords.research_topic_id GROUP BY research_topics.topic_name HAVING COUNT(keyword_id) > 2;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM research_topics;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT topic_name FROM research_topics;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT topic_name, topic_category FROM research_topics;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM research_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT keyword_name FROM research_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT keyword_name, relevance_score FROM research_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM research_topic_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT topic_id, keyword_id FROM research_topic_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM research_topics WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT topic_name FROM research_topics WHERE topic_category = 'Science';",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT id, topic_name FROM research_topics WHERE topic_category IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM research_keywords WHERE relevance_score > 50;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT keyword_name FROM research_keywords WHERE relevance_score < 30;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM research_topic_keywords WHERE topic_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT keyword_id FROM research_topic_keywords WHERE topic_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT topic_name, keyword_name FROM research_topics JOIN research_topic_keywords ON research_topics.id = research_topic_keywords.topic_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT topic_name, keyword_name FROM research_topics JOIN research_topic_keywords ON research_topics.id = research_topic_keywords.topic_id JOIN research_keywords ON research_topic_keywords.keyword_id = research_keywords.id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM research_topics ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM research_keywords ORDER BY relevance_score ASC;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM research_topic_keywords ORDER BY created_at ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM research_topics;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT topic_name, topic_category FROM research_topics WHERE topic_category='Science';",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM research_keywords WHERE relevance_score > 80;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT topic_name, keyword_name FROM research_topics t JOIN research_topic_keywords tk ON t.id = tk.topic_id JOIN research_keywords k ON tk.keyword_id = k.id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT t.topic_name, k.keyword_name FROM research_topics t LEFT JOIN research_topic_keywords tk ON t.id = tk.topic_id LEFT JOIN research_keywords k ON tk.keyword_id = k.id WHERE k.relevance_score > 70;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT t.topic_name, COUNT(tk.keyword_id) AS keyword_count FROM research_topics t LEFT JOIN research_topic_keywords tk ON t.id = tk.topic_id GROUP BY t.topic_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT t.topic_name, AVG(k.relevance_score) AS avg_relevance_score FROM research_topics t LEFT JOIN research_topic_keywords tk ON t.id = tk.topic_id LEFT JOIN research_keywords k ON tk.keyword_id = k.id GROUP BY t.topic_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT t.topic_name, MAX(k.relevance_score) AS max_relevance_score FROM research_topics t LEFT JOIN research_topic_keywords tk ON t.id = tk.topic_id LEFT JOIN research_keywords k ON tk.keyword_id = k.id GROUP BY t.topic_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT t.topic_name, MIN(k.relevance_score) AS min_relevance_score FROM research_topics t LEFT JOIN research_topic_keywords tk ON t.id = tk.topic_id LEFT JOIN research_keywords k ON tk.keyword_id = k.id GROUP BY t.topic_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT t.topic_name, COUNT(DISTINCT tk.keyword_id) AS distinct_keyword_count FROM research_topics t LEFT JOIN research_topic_keywords tk ON t.id = tk.topic_id GROUP BY t.topic_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT DISTINCT t.topic_name, COUNT(tk.keyword_id) AS keyword_count FROM research_topics t LEFT JOIN research_topic_keywords tk ON t.id = tk.topic_id GROUP BY t.topic_name HAVING keyword_count > 2;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT t.topic_name, k.keyword_name FROM research_topics t FULL JOIN research_topic_keywords tk ON t.id = tk.topic_id FULL JOIN research_keywords k ON tk.keyword_id = k.id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT t.topic_name, k.keyword_name, AVG(k.relevance_score) AS avg_relevance_score FROM research_topics t RIGHT JOIN research_topic_keywords tk ON t.id = tk.topic_id RIGHT JOIN research_keywords k ON tk.keyword_id = k.id GROUP BY t.topic_name, k.keyword_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT t.topic_name, k.keyword_name FROM research_topics t INNER JOIN research_topic_keywords tk ON t.id = tk.topic_id LEFT JOIN research_keywords k ON tk.keyword_id = k.id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT t.topic_name, k.keyword_name FROM research_topics t LEFT JOIN research_topic_keywords tk ON t.id = tk.topic_id INNER JOIN research_keywords k ON tk.keyword_id = k.id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT SUM(k.relevance_score) AS total_relevance_score FROM research_keywords k;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_topics FROM research_topics;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT AVG(relevance_score) AS avg_relevance_score FROM research_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT topic_name, COUNT(*) AS total_keywords FROM research_topics t JOIN research_topic_keywords tk ON t.id = tk.topic_id GROUP BY topic_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT topic_name, MAX(relevance_score) AS max_relevance_score FROM research_topics t JOIN research_topic_keywords tk ON t.id = tk.topic_id JOIN research_keywords k ON tk.keyword_id = k.id GROUP BY topic_name LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE research_topics ( \n    id SERIAL PRIMARY KEY, \n    topic_name VARCHAR(255) NOT NULL, \n    topic_category VARCHAR(100), \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_keywords ( \n    id SERIAL PRIMARY KEY, \n    keyword_name VARCHAR(255) NOT NULL, \n    relevance_score INT, \n    created_at TIMESTAMP NOT NULL \n);\n\n\nCREATE TABLE research_topic_keywords ( \n    id SERIAL PRIMARY KEY, \n    topic_id INT REFERENCES research_topics(id), \n    keyword_id INT REFERENCES research_keywords(id), \n    created_at TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT topic_name, keyword_name, MAX(relevance_score) AS max_relevance_score FROM research_topics t JOIN research_topic_keywords tk ON t.id = tk.topic_id JOIN research_keywords k ON tk.keyword_id = k.id GROUP BY topic_name, keyword_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_topics;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT topic_name, researcher_name FROM research_topics;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT keyword, relevance_score FROM research_keywords;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_publications;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT publication_title, publication_date FROM research_publications;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_authors;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT author_name, author_email FROM research_authors;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT rt.topic_name, rk.keyword FROM research_topics rt JOIN research_keywords rk ON rt.id = rk.research_topic_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT rt.researcher_name, ra.author_name FROM research_topics rt JOIN research_authors ra ON rt.id = ra.research_publication_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT author_name, publication_title FROM research_authors ra JOIN research_publications rp ON ra.research_publication_id = rp.id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT rk.keyword, rp.publication_title FROM research_keywords rk JOIN research_publications rp ON rk.id = rp.research_topic_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT rt.topic_name, ra.author_name FROM research_topics rt JOIN research_publications rp ON rt.id = rp.research_topic_id JOIN research_authors ra ON rp.id = ra.research_publication_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT rt.topic_name, rk.keyword FROM research_topics rt JOIN research_keywords rk ON rt.id = rk.research_topic_id UNION SELECT rt.researcher_name, ra.author_name FROM research_topics rt JOIN research_authors ra ON rt.id = ra.research_publication_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_topics WHERE research_area = 'Machine Learning';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_topics WHERE topic_name LIKE '%Data Science%';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_keywords WHERE keyword = 'Big Data';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_keywords WHERE relevance_score > 80;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_publications WHERE publication_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_authors WHERE author_email LIKE '%example.com%';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_topics ORDER BY topic_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_keywords ORDER BY relevance_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_topics WHERE research_area = 'Machine Learning';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT topic_name, researcher_name FROM research_topics WHERE researcher_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_keywords WHERE relevance_score > 80;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT publication_title, publication_date FROM research_publications WHERE publication_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT author_name, author_email FROM research_authors WHERE author_email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT research_topics.topic_name, research_keywords.keyword FROM research_topics INNER JOIN research_keywords ON research_topics.id = research_keywords.research_topic_id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT researcher_name, COUNT(research_topics.id) AS topic_count FROM research_topics GROUP BY researcher_name HAVING COUNT(research_topics.id) >= 3;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT research_topic_id, COUNT(id) AS publication_count FROM research_publications GROUP BY research_topic_id ORDER BY publication_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_keywords WHERE keyword IN ('AI', 'Data Science', 'NLP');",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT research_authors.author_name, research_publications.publication_title FROM research_authors INNER JOIN research_publications ON research_authors.research_publication_id = research_publications.id;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT topic_name, COUNT(research_publications.id) AS publication_count FROM research_topics LEFT JOIN research_publications ON research_topics.id = research_publications.research_topic_id GROUP BY topic_name ORDER BY publication_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT research_topic_id FROM research_publications;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT researcher_name, AVG(relevance_score) AS avg_score FROM research_topics INNER JOIN research_keywords ON research_topics.id = research_keywords.research_topic_id GROUP BY researcher_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT author_name, COUNT(research_authors.id) AS publication_count FROM research_authors LEFT JOIN research_publications ON research_authors.research_publication_id = research_publications.id GROUP BY author_name ORDER BY publication_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT researcher_name, research_area FROM research_topics WHERE research_area IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT publication_title, publication_date FROM research_publications WHERE publication_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT author_name, COUNT(research_publications.id) AS publication_count FROM research_authors LEFT JOIN research_publications ON research_authors.research_publication_id = research_publications.id GROUP BY author_name HAVING COUNT(research_publications.id) >= 2;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT topic_name, SUM(relevance_score) AS total_score FROM research_topics INNER JOIN research_keywords ON research_topics.id = research_keywords.research_topic_id GROUP BY topic_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT researcher_name, AVG(relevance_score) AS avg_score FROM research_topics INNER JOIN research_keywords ON research_topics.id = research_keywords.research_topic_id WHERE research_area = 'Artificial Intelligence' GROUP BY researcher_name;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT author_name, author_name AS publication_count FROM research_authors;",
  "### TABLEDATA\n\nCREATE TABLE research_topics (\n  id UUID PRIMARY KEY,\n  topic_name TEXT,\n  researcher_name TEXT,\n  research_area TEXT\n);\n\n\nCREATE TABLE research_keywords (\n  id UUID PRIMARY KEY,\n  keyword TEXT,\n  relevance_score INT,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_publications (\n  id UUID PRIMARY KEY,\n  publication_title TEXT,\n  publication_date DATE,\n  research_topic_id UUID REFERENCES research_topics(id)\n);\n\n\nCREATE TABLE research_authors (\n  id UUID PRIMARY KEY,\n  author_name TEXT,\n  author_email TEXT,\n  research_publication_id UUID REFERENCES research_publications(id)\n);\n\n### STATEMENT\n\nSELECT topic_name, COUNT(research_keywords.id) AS keyword_count FROM research_topics LEFT JOIN research_keywords ON research_topics.id = research_keywords.research_topic_id GROUP BY topic_name ORDER BY keyword_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Researcher;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT researcher_name FROM Researcher;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT researcher_name, researcher_email FROM Researcher;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT * FROM ResearchTopic;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT topic_name FROM ResearchTopic;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Keyword;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT keyword_name FROM Keyword;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT researcher_id, topic_id FROM ResearcherResearchTopic;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT topic_id, keyword_id FROM ResearchTopicKeyword;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT r.researcher_name, t.topic_name FROM Researcher r JOIN ResearcherResearchTopic rr ON r.researcher_id = rr.researcher_id JOIN ResearchTopic t ON rr.topic_id = t.topic_id;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT r.researcher_name, k.keyword_name FROM Researcher r JOIN ResearcherResearchTopic rr ON r.researcher_id = rr.researcher_id JOIN ResearchTopic t ON rr.topic_id = t.topic_id JOIN ResearchTopicKeyword tk ON t.topic_id = tk.topic_id JOIN Keyword k ON tk.keyword_id = k.keyword_id;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT r.researcher_name, t.topic_name, k.keyword_name FROM Researcher r JOIN ResearcherResearchTopic rr ON r.researcher_id = rr.researcher_id JOIN ResearchTopic t ON rr.topic_id = t.topic_id JOIN ResearchTopicKeyword tk ON t.topic_id = tk.topic_id JOIN Keyword k ON tk.keyword_id = k.keyword_id;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT r.researcher_name, COUNT(topic_id) FROM Researcher r JOIN ResearcherResearchTopic rr ON r.researcher_id = rr.researcher_id GROUP BY r.researcher_name;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT t.topic_name, COUNT(keyword_id) FROM ResearchTopic t JOIN ResearchTopicKeyword tk ON t.topic_id = tk.topic_id GROUP BY t.topic_name;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT r.researcher_name, t.topic_name, COUNT(keyword_id) FROM Researcher r JOIN ResearcherResearchTopic rr ON r.researcher_id = rr.researcher_id JOIN ResearchTopic t ON rr.topic_id = t.topic_id JOIN ResearchTopicKeyword tk ON t.topic_id = tk.topic_id GROUP BY r.researcher_name, t.topic_name;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT r.researcher_name, t.topic_name, k.keyword_name FROM Researcher r JOIN ResearcherResearchTopic rr ON r.researcher_id = rr.researcher_id JOIN ResearchTopic t ON rr.topic_id = t.topic_id JOIN ResearchTopicKeyword tk ON t.topic_id = tk.topic_id JOIN Keyword k ON tk.keyword_id = k.keyword_id WHERE r.researcher_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT r.researcher_name, t.topic_name, k.keyword_name FROM Researcher r JOIN ResearcherResearchTopic rr ON r.researcher_id = rr.researcher_id JOIN ResearchTopic t ON rr.topic_id = t.topic_id JOIN ResearchTopicKeyword tk ON t.topic_id = tk.topic_id JOIN Keyword k ON tk.keyword_id = k.keyword_id WHERE k.keyword_name = 'Machine Learning';",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT r.researcher_name, COUNT(topic_id) AS num_topics FROM Researcher r JOIN ResearcherResearchTopic rr ON r.researcher_id = rr.researcher_id GROUP BY r.researcher_name HAVING num_topics >= 2;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT t.topic_name, COUNT(keyword_id) AS num_keywords FROM ResearchTopic t JOIN ResearchTopicKeyword tk ON t.topic_id = tk.topic_id GROUP BY t.topic_name HAVING num_keywords >= 3;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT r.researcher_name, t.topic_name, COUNT(keyword_id) AS num_keywords FROM Researcher r JOIN ResearcherResearchTopic rr ON r.researcher_id = rr.researcher_id JOIN ResearchTopic t ON rr.topic_id = t.topic_id JOIN ResearchTopicKeyword tk ON t.topic_id = tk.topic_id GROUP BY r.researcher_name, t.topic_name HAVING num_keywords >= 2;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Researcher;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT researcher_name, researcher_email FROM Researcher;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Researcher;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT * FROM ResearchTopic;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT topic_name FROM ResearchTopic WHERE topic_id = '123456';",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Keyword WHERE keyword_name LIKE '%research%';",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT researcher_name, topic_name FROM ResearcherResearchTopic JOIN Researcher ON ResearcherResearchTopic.researcher_id = Researcher.researcher_id JOIN ResearchTopic ON ResearcherResearchTopic.topic_id = ResearchTopic.topic_id;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT researcher_name, topic_name FROM Researcher as R JOIN ResearcherResearchTopic as RT ON R.researcher_id = RT.researcher_id JOIN ResearchTopic as T ON RT.topic_id = T.topic_id;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT researcher_name, COUNT(topic_id) as topic_count FROM ResearcherResearchTopic JOIN Researcher ON ResearcherResearchTopic.researcher_id = Researcher.researcher_id GROUP BY researcher_name;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT R.researcher_name, T.topic_name, K.keyword_name FROM Researcher AS R JOIN ResearcherResearchTopic AS RT ON R.researcher_id = RT.researcher_id JOIN ResearchTopic AS T ON RT.topic_id = T.topic_id JOIN ResearchTopicKeyword AS TK ON T.topic_id = TK.topic_id JOIN Keyword AS K ON TK.keyword_id = K.keyword_id;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT R.researcher_name, T.topic_name FROM Researcher AS R JOIN ResearcherResearchTopic AS RT ON R.researcher_id = RT.researcher_id JOIN ResearchTopic AS T ON RT.topic_id = T.topic_id WHERE R.researcher_id = '123456';",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT R.researcher_name, T.topic_name FROM Researcher AS R JOIN ResearcherResearchTopic AS RT ON R.researcher_id = RT.researcher_id JOIN ResearchTopic AS T ON RT.topic_id = T.topic_id ORDER BY R.researcher_name ASC, T.topic_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT R.researcher_name, T.topic_name FROM Researcher AS R LEFT JOIN ResearcherResearchTopic AS RT ON R.researcher_id = RT.researcher_id LEFT JOIN ResearchTopic AS T ON RT.topic_id = T.topic_id;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT R.researcher_name, T.topic_name FROM Researcher AS R RIGHT JOIN ResearcherResearchTopic AS RT ON R.researcher_id = RT.researcher_id RIGHT JOIN ResearchTopic AS T ON RT.topic_id = T.topic_id;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT R.researcher_name, T.topic_name FROM Researcher AS R FULL JOIN ResearcherResearchTopic AS RT ON R.researcher_id = RT.researcher_id FULL JOIN ResearchTopic AS T ON RT.topic_id = T.topic_id;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT R.researcher_name, T.topic_name FROM Researcher AS R JOIN ResearcherResearchTopic AS RT ON R.researcher_id = RT.researcher_id JOIN ResearchTopic AS T ON RT.topic_id = T.topic_id UNION SELECT R.researcher_name, T.topic_name FROM Researcher AS R JOIN ResearcherResearchTopic AS RT ON R.researcher_id = RT.researcher_id JOIN ResearchTopic AS T ON RT.topic_id = T.topic_id WHERE R.researcher_id = '123456';",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT R.researcher_name, T.topic_name FROM Researcher AS R JOIN ResearcherResearchTopic AS RT ON R.researcher_id = RT.researcher_id JOIN ResearchTopic AS T ON RT.topic_id = T.topic_id INTERSECT SELECT R.researcher_name, T.topic_name FROM Researcher AS R JOIN ResearcherResearchTopic AS RT ON R.researcher_id = RT.researcher_id JOIN ResearchTopic AS T ON RT.topic_id = T.topic_id;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT R.researcher_name, T.topic_name FROM Researcher AS R JOIN ResearcherResearchTopic AS RT ON R.researcher_id = RT.researcher_id JOIN ResearchTopic AS T ON RT.topic_id = T.topic_id EXCEPT SELECT R.researcher_name, T.topic_name FROM Researcher AS R JOIN ResearcherResearchTopic AS RT ON R.researcher_id = RT.researcher_id JOIN ResearchTopic AS T ON RT.topic_id = T.topic_id;",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT * FROM ResearcherResearchTopic WHERE researcher_id = '123456';",
  "### TABLEDATA\n\nCREATE TABLE Researcher (\n    researcher_id UUID PRIMARY KEY,\n    researcher_name VARCHAR(255) NOT NULL,\n    researcher_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearchTopic (\n    topic_id UUID PRIMARY KEY,\n    topic_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Keyword (\n    keyword_id UUID PRIMARY KEY,\n    keyword_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ResearcherResearchTopic (\n    researcher_id UUID REFERENCES Researcher(researcher_id),\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    PRIMARY KEY (researcher_id, topic_id)\n);\n\nCREATE TABLE ResearchTopicKeyword (\n    topic_id UUID REFERENCES ResearchTopic(topic_id),\n    keyword_id UUID REFERENCES Keyword(keyword_id),\n    PRIMARY KEY (topic_id, keyword_id)\n);\n\n### STATEMENT\n\nSELECT * FROM ResearchTopicKeyword WHERE topic_id = '123456';"
]