[
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, survey_date FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, survey_date, survey_responses FROM survey_data WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT MAX(survey_id) FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT MIN(survey_date) FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, jsonb_array_elements_text(survey_responses) FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date FROM survey_data ORDER BY survey_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date FROM survey_data WHERE survey_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date FROM survey_data WHERE participant_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date FROM survey_data WHERE survey_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date FROM survey_data WHERE survey_responses->>'question1' = 'answer1';",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT participant_id, COUNT(*) FROM survey_data GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT participant_id, AVG(survey_id) FROM survey_data GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT participant_id, MAX(survey_date) - MIN(survey_date) AS survey_duration FROM survey_data GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT participant_id, jsonb_object_agg(survey_date, survey_responses) AS survey_responses_agg FROM survey_data GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT participant_id, survey_date, count(survey_id) OVER(PARTITION BY participant_id) FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, survey_date, LAG(survey_id) OVER(ORDER BY survey_date) AS prev_survey_id FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, survey_date, LEAD(survey_id) OVER(ORDER BY survey_date) AS next_survey_id FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM survey_data WHERE survey_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date FROM survey_data WHERE participant_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM survey_data WHERE survey_date >= '2021-01-01' AND survey_date <= '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT participant_id, COUNT(survey_id) AS num_surveys FROM survey_data GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, JSONB_VALUE(survey_responses, '$.question1') AS response1 FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, JSONB_ARRAY_LENGTH(survey_responses->'questions') AS num_questions FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, JSONB_ARRAY_ELEMENTS_TEXT(survey_responses->'comments') AS comment FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM survey_data WHERE survey_responses @> '{\"question1\":\"Answer1\"}';",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM survey_data WHERE survey_responses @> '{\"question1\":\"Answer1\", \"question2\":\"Answer2\"}';",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM survey_data WHERE survey_responses @> '{\"question1\":\"Answer1\"}' AND survey_responses @> '{\"question2\":\"Answer2\"}';",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM survey_data WHERE participant_id IN (SELECT participant_id FROM survey_data WHERE survey_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM survey_data WHERE participant_id = ANY(SELECT DISTINCT participant_id FROM survey_data);",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date, JSONB_STRIP_NULLS(survey_responses) AS responses FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date, JSONB_OBJECT_KEYS(survey_responses) AS response_keys FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date, JSONB_EXISTS(survey_responses, 'question1') AS has_question1 FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date, JSONB_MERGE_PRESERVE(survey_responses, '{\"question3\":\"Answer3\"}') AS updated_responses FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date, JSONB_SET(survey_responses, '{question1}', '\"NewAnswer\"') AS updated_responses FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date, JSONB_DELETE(survey_responses, '{question1}') AS updated_responses FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT participant_id, AVG(CAST(JSONB_VALUE(survey_responses, '$.rating') AS FLOAT)) AS avg_rating FROM survey_data GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_data \n(\n    survey_id INT PRIMARY KEY,\n    participant_id INT NOT NULL,\n    survey_date DATE,\n    survey_responses JSONB\n);\n\n### STATEMENT\n\nSELECT survey_id, participant_id, survey_date, JSONB_INSERT(survey_responses, '{comments,-1}', '\"NewComment\"') AS updated_responses FROM survey_data;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT response_id, respondent_id, survey_id, question_id, answer, response_date FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM SurveyQuestions;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT question_id, survey_id, question_text, is_required, question_type FROM SurveyQuestions;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT response_id, respondent_id, survey_id, question_id, answer, response_date FROM SurveyResponses WHERE survey_id = '12345';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT question_id, survey_id, question_text, is_required, question_type FROM SurveyQuestions WHERE is_required = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses WHERE response_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT response_id, respondent_id, survey_id, question_id, answer, response_date FROM SurveyResponses WHERE respondent_id = '67890';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT question_id, survey_id, question_text, is_required, question_type FROM SurveyQuestions WHERE survey_id = '54321';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses WHERE question_id = 'abcd';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT response_id, respondent_id, survey_id, question_id, answer, response_date FROM SurveyResponses WHERE survey_id = '54321' AND response_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT question_id, survey_id, question_text, is_required, question_type FROM SurveyQuestions WHERE question_id = 'efgh';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses WHERE answer = 'Yes';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT response_id, respondent_id, survey_id, question_id, answer, response_date FROM SurveyResponses WHERE survey_id = '54321' AND question_id = 'abcd';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT question_id, survey_id, question_text, is_required, question_type FROM SurveyQuestions WHERE question_text LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses WHERE response_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT response_id, respondent_id, survey_id, question_id, answer, response_date FROM SurveyResponses ORDER BY response_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT question_id, survey_id, question_text, is_required, question_type FROM SurveyQuestions ORDER BY survey_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_responses FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(response_date) AS latest_response_date FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses JOIN SurveyQuestions ON SurveyResponses.question_id = SurveyQuestions.question_id WHERE SurveyResponses.respondent_id = '1234' AND SurveyQuestions.is_required = TRUE",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT respondent_id, survey_id, question_text FROM SurveyResponses JOIN SurveyQuestions ON SurveyResponses.question_id = SurveyQuestions.question_id WHERE SurveyResponses.survey_id = '5678'",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(response_date) AS latest_response_date FROM SurveyResponses WHERE survey_id = 'abcd'",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT question_id, COUNT(response_id) AS num_responses FROM SurveyResponses GROUP BY question_id HAVING num_responses > 5",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT respondent_id, COUNT(DISTINCT survey_id) AS num_surveys FROM SurveyResponses GROUP BY respondent_id HAVING num_surveys > 2",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT question_id, AVG(LENGTH(answer)) AS avg_answer_length FROM SurveyResponses GROUP BY question_id ORDER BY avg_answer_length DESC",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT survey_id, question_text, response_date FROM SurveyResponses JOIN SurveyQuestions ON SurveyResponses.question_id = SurveyQuestions.question_id WHERE SurveyQuestions.is_required = FALSE ORDER BY response_date ASC",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT respondent_id, survey_id, question_type, COUNT(*) AS num_responses FROM SurveyResponses JOIN SurveyQuestions ON SurveyResponses.question_id = SurveyQuestions.question_id GROUP BY respondent_id, survey_id, question_type",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT respondent_id, survey_id FROM SurveyResponses WHERE response_date >= '2022-01-01' AND response_date <= '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n  response_id UUID PRIMARY KEY,\n  respondent_id UUID,\n  survey_id UUID,\n  question_id UUID,\n  answer TEXT,\n  response_date TIMESTAMP\n)\n\nCREATE TABLE SurveyQuestions (\n  question_id UUID PRIMARY KEY,\n  survey_id UUID,\n  question_text TEXT,\n  is_required BOOLEAN,\n  question_type TEXT\n)\n\n### STATEMENT\n\nSELECT survey_id, COUNT(DISTINCT respondent_id) AS num_respondents FROM SurveyResponses GROUP BY survey_id ORDER BY num_respondents DESC",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM survey_participants;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, name FROM survey_participants WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM survey_participants WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM survey_questions;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT question_id, question_text FROM survey_questions WHERE category = 'Science';",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM survey_responses;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT response_id, participant_id, question_id, response FROM survey_responses WHERE participant_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(age) FROM survey_participants;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(age) FROM survey_participants;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(age) FROM survey_participants WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT participant_id, question_id, timestamp FROM survey_responses ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM survey_participants WHERE age BETWEEN 20 AND 35;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT question_id, category, difficulty_level FROM survey_questions WHERE difficulty_level = 'Easy';",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT participant_id, COUNT(*) AS response_count FROM survey_responses GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT name, email FROM survey_participants WHERE name LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT category FROM survey_questions;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT SUM(age) FROM survey_participants;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT participant_id, COUNT(*) AS response_count FROM survey_responses GROUP BY participant_id HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM survey_questions ORDER BY question_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT gender, COUNT(*) AS count FROM survey_participants GROUP BY gender;",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM survey_participants WHERE age > 30",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT name, age, gender FROM survey_participants WHERE gender = 'Male'",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM survey_participants WHERE gender = 'Female' AND age BETWEEN 18 AND 25",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT name, category FROM survey_participants p, survey_questions q WHERE p.id = q.question_id",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_participants FROM survey_participants",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT name, MAX(age) AS oldest_age FROM survey_participants",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT name, AVG(age) AS average_age FROM survey_participants",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM survey_participants WHERE name LIKE '%John%' OR name LIKE '%Jane%'",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT name, response FROM survey_participants p, survey_responses r WHERE p.id = r.participant_id",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT name, COUNT(response) AS total_responses FROM survey_participants p, survey_responses r WHERE p.id = r.participant_id GROUP BY name",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT question_text, category FROM survey_questions WHERE difficulty_level = 'Intermediate'",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT category, COUNT(*) AS total_questions FROM survey_questions GROUP BY category",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT category) AS unique_categories FROM survey_questions",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM survey_responses WHERE timestamp > '2020-01-01'",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT p.name, COUNT(r.response) AS total_responses FROM survey_participants p LEFT JOIN survey_responses r ON p.id = r.participant_id GROUP BY p.name",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT category, AVG(LENGTH(question_text)) AS avg_question_length FROM survey_questions GROUP BY category",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT p.name, q.category FROM survey_participants p, survey_questions q",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT name, response, timestamp FROM survey_participants p JOIN survey_responses r ON p.id = r.participant_id",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(LENGTH(question_text)) AS max_question_length FROM survey_questions",
  "### TABLEDATA\n\nCREATE TABLE survey_participants (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE survey_questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT,\n  category VARCHAR(50),\n  difficulty_level VARCHAR(20)\n)\n\nCREATE TABLE survey_responses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response TEXT,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT name, response, timestamp FROM survey_participants p JOIN survey_responses r ON p.id = r.participant_id WHERE timestamp > '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyParticipants;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, age FROM SurveyParticipants;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyQuestions;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT question_text, question_type FROM SurveyQuestions;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_id, question_id, response_date FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyResults;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT response_id, question_id, result_value FROM SurveyResults;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, email FROM SurveyParticipants WHERE gender='Female';",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, age FROM SurveyParticipants WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT question_text, question_type FROM SurveyQuestions WHERE question_type='multiple choice';",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT response_text FROM SurveyResponses WHERE response_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT result_value FROM SurveyResults WHERE result_value >= 3.5;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, age FROM SurveyParticipants ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT question_text, question_type FROM SurveyQuestions ORDER BY question_id;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT response_text, response_date FROM SurveyResponses ORDER BY response_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT result_value FROM SurveyResults ORDER BY result_value ASC;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_participants FROM SurveyParticipants;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age FROM SurveyParticipants;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(result_value) AS max_result_value FROM SurveyResults;",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender FROM SurveyParticipants WHERE age > 30",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT question_text, question_type FROM SurveyQuestions",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM SurveyParticipants",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, question_text, response_text FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id INNER JOIN SurveyQuestions ON SurveyResponses.question_id = SurveyQuestions.question_id",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyParticipants WHERE email LIKE '%gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_count FROM SurveyParticipants",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, AVG(result_value) AS average_result FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id INNER JOIN SurveyResults ON SurveyResponses.response_id = SurveyResults.response_id GROUP BY participant_name HAVING AVG(result_value) > 50",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, SUM(result_value) AS total_result FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id INNER JOIN SurveyResults ON SurveyResponses.response_id = SurveyResults.response_id GROUP BY participant_name HAVING SUM(result_value) > 100",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, response_date FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id WHERE response_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT gender, COUNT(*) AS gender_count FROM SurveyParticipants GROUP BY gender",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, question_text, result_value FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id INNER JOIN SurveyResults ON SurveyResponses.response_id = SurveyResults.response_id",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, question_text, result_value FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id INNER JOIN SurveyResults ON SurveyResponses.response_id = SurveyResults.response_id WHERE result_value > 0.5",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, question_text, result_value FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id INNER JOIN SurveyResults ON SurveyResponses.response_id = SurveyResults.response_id WHERE question_type = 'Multiple Choice'",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, question_text, response_text FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id INNER JOIN SurveyQuestions ON SurveyResponses.question_id = SurveyQuestions.question_id WHERE question_type = 'Open Ended'",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, question_text, result_value FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id INNER JOIN SurveyResults ON SurveyResponses.response_id = SurveyResults.response_id WHERE age > 40 ORDER BY result_value DESC",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, question_text, result_value FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id INNER JOIN SurveyResults ON SurveyResponses.response_id = SurveyResults.response_id WHERE gender = 'Male' ORDER BY result_value ASC",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, question_text, response_text FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id INNER JOIN SurveyQuestions ON SurveyResponses.question_id = SurveyQuestions.question_id WHERE response_text IS NULL",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, question_text, response_date FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id WHERE response_date > '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE SurveyParticipants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n);\n\nCREATE TABLE SurveyQuestions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT NOT NULL,\n  question_type VARCHAR(20)\n);\n\nCREATE TABLE SurveyResponses (\n  response_id INT PRIMARY KEY,\n  participant_id INT,\n  question_id INT,\n  response_text TEXT,\n  response_date TIMESTAMP\n);\n\nCREATE TABLE SurveyResults (\n  result_id INT PRIMARY KEY,\n  response_id INT,\n  question_id INT,\n  result_value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_name, question_text, result_value FROM SurveyParticipants INNER JOIN SurveyResponses ON SurveyParticipants.participant_id = SurveyResponses.participant_id INNER JOIN SurveyResults ON SurveyResponses.response_id = SurveyResults.response_id WHERE participant_name LIKE '%John%'",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT survey_name, survey_description FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM survey_questions;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT question_text, question_type FROM survey_questions;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM survey_responses;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, respondent_id, response_value FROM survey_responses;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM respondents;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT respondent_name, respondent_email FROM respondents;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM survey_results;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, respondent_id, question_id, response_value FROM survey_results;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, respondents.respondent_name, survey_results.response_value FROM respondents INNER JOIN survey_results ON respondents.respondent_id = survey_results.respondent_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT survey_name, question_text, response_value FROM surveys JOIN survey_questions ON surveys.survey_id = survey_questions.survey_id JOIN survey_results ON survey_questions.question_id = survey_results.question_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT survey_name, survey_responses.respondent_id, survey_responses.response_value FROM surveys LEFT JOIN survey_responses ON surveys.survey_id = survey_responses.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT survey_name, respondents.respondent_name, survey_results.response_value FROM surveys LEFT JOIN respondents ON surveys.survey_id = respondents.respondent_id LEFT JOIN survey_results ON survey_results.respondent_id = respondents.respondent_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT survey_name, respondents.respondent_name, survey_results.response_value FROM respondents RIGHT JOIN survey_results ON respondents.respondent_id = survey_results.respondent_id RIGHT JOIN surveys ON survey_results.survey_id = surveys.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT survey_name, respondents.respondent_name, survey_results.response_value FROM respondents FULL OUTER JOIN survey_results ON respondents.respondent_id = survey_results.respondent_id FULL OUTER JOIN surveys ON surveys.survey_id = survey_results.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT survey_name, respondent_name, response_value FROM surveys INNER JOIN respondents ON surveys.survey_id = respondents.respondent_id INNER JOIN survey_results ON survey_results.survey_id = surveys.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT survey_name, respondent_name, response_value FROM surveys CROSS JOIN respondents CROSS JOIN survey_results;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(question_id) FROM survey_questions;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT survey_name, survey_description FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, q.question_text FROM surveys s JOIN survey_questions q ON s.survey_id = q.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, r.response_value FROM surveys s JOIN survey_responses r ON s.survey_id = r.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT r.respondent_name, sr.response_value FROM respondents r JOIN survey_results sr ON r.respondent_id = sr.respondent_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, q.question_text, sr.response_value FROM surveys s JOIN survey_questions q ON s.survey_id = q.survey_id JOIN survey_results sr ON q.question_id = sr.question_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, COUNT(sr.result_id) AS total_responses FROM surveys s LEFT JOIN survey_results sr ON s.survey_id = sr.survey_id GROUP BY s.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, COUNT(DISTINCT r.respondent_id) AS total_respondents FROM surveys s JOIN survey_results sr ON s.survey_id = sr.survey_id JOIN respondents r ON sr.respondent_id = r.respondent_id GROUP BY s.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, AVG(CAST(sr.response_value AS INT)) AS average_response FROM surveys s JOIN survey_results sr ON s.survey_id = sr.survey_id GROUP BY s.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, sr.response_value FROM surveys s JOIN survey_results sr ON s.survey_id = sr.survey_id WHERE sr.response_value LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, sr.response_value FROM surveys s JOIN survey_results sr ON s.survey_id = sr.survey_id WHERE sr.response_value IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, q.question_text FROM surveys s JOIN survey_questions q ON s.survey_id = q.survey_id WHERE q.question_type = 'multiple_choice';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, r.respondent_name FROM surveys s JOIN survey_results sr ON s.survey_id = sr.survey_id JOIN respondents r ON sr.respondent_id = r.respondent_id WHERE r.respondent_email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, r.respondent_name, sr.response_value FROM surveys s JOIN survey_results sr ON s.survey_id = sr.survey_id JOIN respondents r ON sr.respondent_id = r.respondent_id WHERE sr.response_value = 'Yes';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, r.respondent_name, COUNT(sr.result_id) AS total_responses FROM surveys s JOIN survey_results sr ON s.survey_id = sr.survey_id JOIN respondents r ON sr.respondent_id = r.respondent_id GROUP BY s.survey_id, r.respondent_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, r.respondent_name, AVG(CAST(sr.response_value AS INT)) AS average_response FROM surveys s JOIN survey_results sr ON s.survey_id = sr.survey_id JOIN respondents r ON sr.respondent_id = r.respondent_id GROUP BY s.survey_id, r.respondent_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, r.respondent_name, MIN(CAST(sr.response_value AS INT)) AS min_response, MAX(CAST(sr.response_value AS INT)) AS max_response FROM surveys s JOIN survey_results sr ON s.survey_id = sr.survey_id JOIN respondents r ON sr.respondent_id = r.respondent_id GROUP BY s.survey_id, r.respondent_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, r.respondent_name, sr.response_value FROM surveys s JOIN survey_results sr ON s.survey_id = sr.survey_id JOIN respondents r ON sr.respondent_id = r.respondent_id WHERE sr.response_value IN ('Positive', 'Negative');",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, r.respondent_name, sr.response_value FROM surveys s JOIN survey_results sr ON s.survey_id = sr.survey_id JOIN respondents r ON sr.respondent_id = r.respondent_id ORDER BY sr.response_value ASC;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(255) NOT NULL,\n    survey_description TEXT\n);\n\nCREATE TABLE survey_questions (\n    question_id INT PRIMARY KEY,\n    survey_id INT,\n    question_text TEXT NOT NULL,\n    question_type ENUM('multiple_choice', 'open_ended')\n);\n\nCREATE TABLE survey_responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    question_id INT,\n    respondent_id INT,\n    response_value TEXT\n);\n\nCREATE TABLE respondents (\n    respondent_id INT PRIMARY KEY,\n    respondent_name VARCHAR(255) NOT NULL,\n    respondent_email VARCHAR(255)\n);\n\nCREATE TABLE survey_results (\n    result_id INT PRIMARY KEY,\n    survey_id INT,\n    respondent_id INT,\n    question_id INT,\n    response_value TEXT\n);\n\n### STATEMENT\n\nSELECT s.survey_name, r.respondent_name, sr.response_value FROM surveys s JOIN survey_results sr ON s.survey_id = sr.survey_id JOIN respondents r ON sr.respondent_id = r.respondent_id ORDER BY sr.response_value DESC;"
]