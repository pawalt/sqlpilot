[
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM clinical_trials_participants;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participant_age FROM clinical_trials_participants;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_id, participation_status FROM clinical_trials_participants;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM clinical_trials_participants WHERE participant_age > 30;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name FROM clinical_trials_participants WHERE participation_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participant_gender FROM clinical_trials_participants WHERE participant_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM clinical_trials_participants WHERE participant_gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participant_age FROM clinical_trials_participants WHERE participant_age < 18;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM clinical_trials_participants WHERE participant_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_gender FROM clinical_trials_participants WHERE participant_age >= 40;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participation_status FROM clinical_trials_participants WHERE participant_gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM clinical_trials_participants WHERE participant_age BETWEEN 25 AND 35;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participant_age FROM clinical_trials_participants WHERE participant_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM clinical_trials_participants WHERE participant_gender IN ('Male', 'Female');",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name FROM clinical_trials_participants LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participant_age FROM clinical_trials_participants ORDER BY participant_age DESC;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM clinical_trials_participants;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(participant_age) FROM clinical_trials_participants;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT participant_gender FROM clinical_trials_participants;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, CONCAT(participant_name, ' - ', participant_gender) AS info FROM clinical_trials_participants;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM clinical_trials_participants WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participant_age FROM clinical_trials_participants WHERE participant_gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_participants FROM clinical_trials_participants;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participant_age FROM clinical_trials_participants WHERE participant_age > 30 AND participation_status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(participant_age) AS average_age FROM clinical_trials_participants;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, participant_gender FROM clinical_trials_participants WHERE participant_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT participant_gender FROM clinical_trials_participants;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participant_age FROM clinical_trials_participants WHERE participant_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name FROM clinical_trials_participants WHERE participant_age < 25;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participation_status FROM clinical_trials_participants WHERE participant_age < 30 AND participant_gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT participation_status FROM clinical_trials_participants WHERE participant_gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participant_age, participation_status FROM clinical_trials_participants WHERE participant_gender = 'Female' ORDER BY participant_age DESC;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, participant_gender, participation_status FROM clinical_trials_participants WHERE participant_age > 40 AND participant_gender = 'Male' ORDER BY participant_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, participant_gender FROM clinical_trials_participants WHERE participation_status LIKE '%ed%';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_gender, COUNT(*) AS total FROM clinical_trials_participants GROUP BY participant_gender;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participation_status, COUNT(*) AS total FROM clinical_trials_participants GROUP BY participant_name, participation_status;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_name, participant_age FROM clinical_trials_participants WHERE participant_age BETWEEN 25 AND 35 AND (participant_gender = 'Male' OR participation_status = 'Active');",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, participation_status FROM clinical_trials_participants WHERE participant_gender = 'Female' OR participation_gender IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_gender, COUNT(*) AS total_participants FROM clinical_trials_participants GROUP BY participant_gender HAVING total_participants > 5;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255),\n  participant_age INT,\n  participant_gender VARCHAR(10),\n  participation_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name FROM clinical_trials_participants WHERE participant_gender = 'Male' UNION SELECT participant_id, participant_name FROM clinical_trials_participants WHERE participant_gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT * FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, age FROM participants WHERE age >= 18;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name FROM participants WHERE enrollment_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT * FROM activities;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT activity_id, participant_id, activity_name FROM activities;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT * FROM activities WHERE activity_date >= '2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT activity_name, duration_minutes FROM activities WHERE duration_minutes > 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT * FROM activities WHERE duration_minutes BETWEEN 20 AND 60;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, enrollment_date FROM participants JOIN activities ON participants.participant_id = activities.participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, activity_name FROM participants JOIN activities ON participants.participant_id = activities.participant_id WHERE participants.age > 25;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_id, activity_name, duration_minutes FROM participants JOIN activities ON participants.participant_id = activities.participant_id WHERE participants.gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT p.participant_name, a.activity_name, a.activity_date FROM participants p JOIN activities a ON p.participant_id = a.participant_id WHERE a.duration_minutes > 45;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_id, COUNT(activity_id) AS num_activities FROM activities GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, SUM(duration_minutes) AS total_duration FROM participants JOIN activities ON participants.participant_id = activities.participant_id GROUP BY participant_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, AVG(duration_minutes) AS average_duration FROM participants JOIN activities ON participants.participant_id = activities.participant_id GROUP BY participant_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT participant_id) AS num_participants FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT gender, AVG(age) AS average_age FROM participants GROUP BY gender;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, COUNT(activity_id) AS num_activities FROM participants LEFT JOIN activities ON participants.participant_id = activities.participant_id GROUP BY participant_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, activity_name FROM participants LEFT JOIN activities ON participants.participant_id = activities.participant_id WHERE activity_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE age > 18;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, gender FROM participants WHERE enrollment_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE gender = 'Male' AND age >= 20;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name FROM participants WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, age, enrollment_date FROM participants WHERE participant_id = '12345678';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT * FROM participants INNER JOIN activities ON participants.participant_id = activities.participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, activity_name, activity_date FROM participants JOIN activities ON participants.participant_id = activities.participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT * FROM participants LEFT JOIN activities ON participants.participant_id = activities.participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT * FROM activities RIGHT JOIN participants ON activities.participant_id = participants.participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, activity_name, duration_minutes FROM participants JOIN activities ON participants.participant_id = activities.participant_id WHERE activities.duration_minutes > 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_id, MAX(duration_minutes) AS longest_duration FROM activities GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, COUNT(*) AS activity_count FROM participants JOIN activities ON participants.participant_id = activities.participant_id GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, SUM(duration_minutes) AS total_duration FROM participants JOIN activities ON participants.participant_id = activities.participant_id GROUP BY participant_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, AVG(duration_minutes) AS avg_duration FROM participants JOIN activities ON participants.participant_id = activities.participant_id GROUP BY participant_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender FROM participants WHERE age BETWEEN 20 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age, MAX(age) AS max_age, MIN(age) AS min_age FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, enrollment_date, COUNT(*) AS num_activities FROM participants JOIN activities ON participants.participant_id = activities.participant_id GROUP BY participant_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, enrollment_date, COUNT(*) AS num_activities FROM participants LEFT JOIN activities ON participants.participant_id = activities.participant_id GROUP BY participant_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    participant_id UUID,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration_minutes INT\n);\n\n### STATEMENT\n\nSELECT participant_name, activity_name, DATEDIFF(CURDATE(), activity_date) AS days_since_activity FROM participants JOIN activities ON participants.participant_id = activities.participant_id WHERE DATEDIFF(CURDATE(), activity_date) > 7;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT * FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, age FROM participants WHERE gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, enrollment_date FROM participants WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT * FROM activities;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT activity_name, activity_date FROM activities WHERE duration > 60;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT activity_name, duration FROM activities WHERE participant_id='123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT * FROM trial_info;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT trial_name, total_participants FROM trial_info WHERE start_date>'2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender FROM participants WHERE participant_id='123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT activity_name, duration, participant_id FROM activities WHERE activity_date>'2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE age BETWEEN 25 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, enrollment_date FROM participants WHERE gender='Female';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT * FROM activities WHERE activity_name LIKE '%running%';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT trial_name, start_date, end_date FROM trial_info WHERE total_participants > 50;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT activity_name, duration FROM activities WHERE participant_id='123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, age FROM participants WHERE enrollment_date>'2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT * FROM trial_info WHERE start_date < end_date;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT activity_name, duration, activity_date FROM activities WHERE duration < 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, gender FROM participants WHERE age < 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT trial_name, total_participants FROM trial_info WHERE end_date<'2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT * FROM participants INNER JOIN activities ON participants.participant_id = activities.participant_id",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender, activity_name, activity_date FROM participants INNER JOIN activities ON participants.participant_id = activities.participant_id",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, enrollment_date, activity_name, duration FROM participants INNER JOIN activities ON participants.participant_id = activities.participant_id WHERE age > 30",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, enrollment_date, activity_name, activity_date, duration FROM participants INNER JOIN activities ON participants.participant_id = activities.participant_id WHERE gender = 'Male'",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, enrollment_date, activity_name, duration FROM participants INNER JOIN activities ON participants.participant_id = activities.participant_id WHERE participant_name LIKE 'J%'",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, enrollment_date, duration FROM participants INNER JOIN activities ON participants.participant_id = activities.participant_id WHERE activity_date BETWEEN '2022-01-01' AND '2022-03-31'",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, activity_name, total_participants FROM participants INNER JOIN activities ON participants.participant_id = activities.participant_id INNER JOIN trial_info ON activities.activity_id = trial_info.trial_id",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender, activity_name, duration, trial_name FROM participants INNER JOIN activities ON participants.participant_id = activities.participant_id INNER JOIN trial_info ON activities.activity_id = trial_info.trial_id WHERE total_participants > 50",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT MAX(age) as max_age, MIN(age) as min_age FROM participants",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, enrollment_date, age FROM participants WHERE enrollment_date < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, age, trial_name FROM participants INNER JOIN activities ON participants.participant_id = activities.participant_id INNER JOIN trial_info ON activities.activity_id = trial_info.trial_id WHERE start_date BETWEEN '2022-04-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) as total_activities FROM activities",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT AVG(duration) as avg_duration, SUM(duration) as total_duration FROM activities",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT participant_name, age, total_participants FROM participants INNER JOIN activities ON participants.participant_id = activities.participant_id INNER JOIN trial_info ON activities.activity_id = trial_info.trial_id WHERE trial_name = 'Example Trial'",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    enrollment_date DATE\n);\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50),\n    activity_date DATE,\n    duration INT,\n    participant_id UUID REFERENCES participants(participant_id)\n);\n\nCREATE TABLE trial_info (\n    trial_id UUID PRIMARY KEY,\n    trial_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE,\n    total_participants INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT participant_id) as unique_participants FROM activities",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Participants;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT name, age FROM Participants;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Trials;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT trial_name, start_date FROM Trials;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Observations;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT observation_id, participant_id, trial_id FROM Observations;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Measurements;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT measurement_id, observation_id, measurement_type FROM Measurements;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT name, age FROM Participants WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT trial_name FROM Trials WHERE researcher='John Doe';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT result FROM Observations WHERE observation_date='2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT measurement_type, value FROM Measurements WHERE value > 10.0;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT name, age, gender FROM Participants WHERE gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT trial_name, start_date, end_date FROM Trials WHERE end_date > '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT result FROM Observations WHERE observation_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT trial_name, researcher FROM Trials WHERE researcher LIKE '%researcher%';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Participants ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT trial_id, COUNT(*) FROM Observations GROUP BY trial_id;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT measurement_type, AVG(value) FROM Measurements GROUP BY measurement_type;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT name, age, gender, condition FROM Participants WHERE condition IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Participants WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_id, name, age FROM Participants WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_id, name, age, condition FROM Participants WHERE condition LIKE '%healthy%';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Trials WHERE start_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT trial_id, trial_name, researcher FROM Trials WHERE researcher = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT trial_id, trial_name, start_date FROM Trials WHERE end_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Observations WHERE observation_date = '2022-07-15';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT observation_id, result FROM Observations WHERE participant_id = 1 AND trial_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Measurements WHERE value > 10.0;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT measurement_id, measurement_type, value FROM Measurements WHERE value BETWEEN 5.0 AND 20.0;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT p.name, t.trial_name, o.result FROM Participants p JOIN Observations o ON p.participant_id = o.participant_id JOIN Trials t ON o.trial_id = t.trial_id;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT p.name, t.trial_name, m.measurement_type, m.value FROM Participants p JOIN Observations o ON p.participant_id = o.participant_id JOIN Trials t ON o.trial_id = t.trial_id JOIN Measurements m ON o.observation_id = m.observation_id;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age FROM Participants;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_trials FROM Trials;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_observations FROM Observations WHERE participant_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(value) AS max_measurement_value FROM Measurements WHERE measurement_type = 'Blood Pressure';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT MIN(value) AS min_measurement_value FROM Measurements WHERE measurement_type = 'Weight';",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT participant_id, COUNT(*) AS total_observations FROM Observations GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT researcher, COUNT(*) AS total_trials FROM Trials GROUP BY researcher;",
  "### TABLEDATA\n\nCREATE TABLE Participants (participant_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  condition VARCHAR(100)\n);\n\nCREATE TABLE Trials (trial_id INT PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  researcher VARCHAR(50)\n);\n\nCREATE TABLE Observations (observation_id INT PRIMARY KEY,\n  participant_id INT,\n  trial_id INT,\n  observation_date DATE,\n  result VARCHAR(255)\n);\n\nCREATE TABLE Measurements (measurement_id INT PRIMARY KEY,\n  observation_id INT,\n  measurement_type VARCHAR(50),\n  value FLOAT\n);\n\n### STATEMENT\n\nSELECT t.trial_name, COUNT(*) AS total_participants FROM Trials t JOIN Observations o ON t.trial_id = o.trial_id GROUP BY t.trial_name HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT * FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, age FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT * FROM trials;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT trial_name, start_date FROM trials;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT * FROM activities;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT activity_name, duration FROM activities;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT * FROM participant_trials;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_id, trial_id FROM participant_trials;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT * FROM participant_activities;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_id, activity_id, timestamp FROM participant_activities;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, gender, age FROM participants WHERE gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT trial_name, start_date, end_date FROM trials WHERE end_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT activity_name, description FROM activities WHERE duration > 60;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, age FROM participants WHERE age BETWEEN 20 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT activity_name, duration FROM activities WHERE description LIKE '%fun%';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, age FROM participants ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT trial_name, start_date FROM trials ORDER BY start_date;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT * FROM participant_trials WHERE trial_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT * FROM participant_activities WHERE participant_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, age, phone_number FROM participants WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT * FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, age FROM participants WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT activity_name, description, duration FROM activities WHERE duration > 60;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, phone_number FROM participants WHERE age BETWEEN 20 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_id, trial_name FROM participants JOIN participant_trials ON participants.participant_id = participant_trials.participant_id JOIN trials ON participant_trials.trial_id = trials.trial_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, trial_name, start_date, end_date FROM participants JOIN participant_trials ON participants.participant_id = participant_trials.participant_id JOIN trials ON participant_trials.trial_id = trials.trial_id WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, trial_name, start_date, end_date FROM participants JOIN participant_trials ON participants.participant_id = participant_trials.participant_id JOIN trials ON participant_trials.trial_id = trials.trial_id WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, activity_name, timestamp FROM participants JOIN participant_activities ON participants.participant_id = participant_activities.participant_id JOIN activities ON participant_activities.activity_id = activities.activity_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT trial_name, start_date, end_date, participant_name, age, gender FROM trials JOIN participant_trials ON trials.trial_id = participant_trials.trial_id JOIN participants ON participant_trials.participant_id = participants.participant_id WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT activity_name, description, duration from activities WHERE activity_id IN (SELECT activity_id FROM participant_activities WHERE participant_id = 2);",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_id, activity_name, description, duration FROM participants JOIN participant_activities ON participants.participant_id = participant_activities.participant_id JOIN activities ON participant_activities.activity_id = activities.activity_id WHERE duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, phone_number FROM participants WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, gender, COUNT(*) AS activity_count FROM participants JOIN participant_activities ON participants.participant_id = participant_activities.participant_id GROUP BY participant_name, gender;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, trial_name, start_date, end_date FROM participants LEFT JOIN participant_trials ON participants.participant_id = participant_trials.participant_id LEFT JOIN trials ON participant_trials.trial_id = trials.trial_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, activity_name, timestamp FROM participants RIGHT JOIN participant_activities ON participants.participant_id = participant_activities.participant_id RIGHT JOIN activities ON participant_activities.activity_id = activities.activity_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, gender, start_date, end_date FROM participants FULL JOIN participant_trials ON participants.participant_id = participant_trials.participant_id FULL JOIN trials ON participant_trials.trial_id = trials.trial_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, activity_name, timestamp, age FROM participants JOIN participant_activities ON participants.participant_id = participant_activities.participant_id JOIN activities ON participant_activities.activity_id = activities.activity_id WHERE participant_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, activity_name, duration FROM participants JOIN participant_activities ON participants.participant_id = participant_activities.participant_id JOIN activities ON participant_activities.activity_id = activities.activity_id WHERE duration > (SELECT AVG(duration) FROM activities);",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, trial_name, start_date, end_date FROM participants JOIN participant_trials ON participants.participant_id = participant_trials.participant_id JOIN trials ON participant_trials.trial_id = trials.trial_id WHERE participant_name LIKE '%Alice%' AND duration > 45;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    gender VARCHAR(10),\n    age INT,\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n)\n\nCREATE TABLE activities (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(255),\n    description TEXT,\n    duration INT\n)\n\nCREATE TABLE participant_trials (\n    participant_id INT,\n    trial_id INT,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (trial_id) REFERENCES trials(trial_id)\n)\n\nCREATE TABLE participant_activities (\n    participant_id INT,\n    activity_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES participants(participant_id),\n    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)\n)\n\n### STATEMENT\n\nSELECT participant_name, trial_name, start_date, end_date FROM participants JOIN participant_trials ON participants.participant_id = participant_trials.participant_id JOIN trials ON participant_trials.trial_id = trials.trial_id WHERE start_date > '2022-01-01' AND end_date < '2023-01-01';"
]