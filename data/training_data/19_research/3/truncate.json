[
  "### TABLEDATA\n\nCREATE TABLE GeneticData (\n    id INT PRIMARY KEY,\n    sample_id INT,\n    chromosome VARCHAR(50),\n    position INT,\n    genotype VARCHAR(10),\n    quality FLOAT,\n    CONSTRAINT fk_sample_id FOREIGN KEY (sample_id) REFERENCES Samples(id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE GeneticData;",
  "### TABLEDATA\n\nCREATE TABLE GeneticData (\n    id INT PRIMARY KEY,\n    sample_id INT,\n    chromosome VARCHAR(50),\n    position INT,\n    genotype VARCHAR(10),\n    quality FLOAT,\n    CONSTRAINT fk_sample_id FOREIGN KEY (sample_id) REFERENCES Samples(id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE GeneticData;",
  "### TABLEDATA\n\nCREATE TABLE GeneticData (\n    id INT PRIMARY KEY,\n    sample_id INT,\n    chromosome VARCHAR(50),\n    position INT,\n    genotype VARCHAR(10),\n    quality FLOAT,\n    CONSTRAINT fk_sample_id FOREIGN KEY (sample_id) REFERENCES Samples(id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Samples CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE GeneticData (\n    id INT PRIMARY KEY,\n    sample_id INT,\n    chromosome VARCHAR(50),\n    position INT,\n    genotype VARCHAR(10),\n    quality FLOAT,\n    CONSTRAINT fk_sample_id FOREIGN KEY (sample_id) REFERENCES Samples(id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE GeneticData CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE Genes (\n  id INT PRIMARY KEY,\n  name STRING,\n  sequence STRING\n);\n\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  gene_id INT,\n  type STRING,\n  allele_frequency FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Genes;",
  "### TABLEDATA\n\nCREATE TABLE Genes (\n  id INT PRIMARY KEY,\n  name STRING,\n  sequence STRING\n);\n\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  gene_id INT,\n  type STRING,\n  allele_frequency FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Variants;",
  "### TABLEDATA\n\nCREATE TABLE Genes (\n  id INT PRIMARY KEY,\n  name STRING,\n  sequence STRING\n);\n\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  gene_id INT,\n  type STRING,\n  allele_frequency FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Genes;",
  "### TABLEDATA\n\nCREATE TABLE Genes (\n  id INT PRIMARY KEY,\n  name STRING,\n  sequence STRING\n);\n\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  gene_id INT,\n  type STRING,\n  allele_frequency FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Variants;",
  "### TABLEDATA\n\nCREATE TABLE Genes (\n  id INT PRIMARY KEY,\n  name STRING,\n  sequence STRING\n);\n\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  gene_id INT,\n  type STRING,\n  allele_frequency FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Genes CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE DNA_Sequences (\n    id SERIAL PRIMARY KEY,\n    sequence TEXT NOT NULL,\n    quality_score FLOAT\n);\n\nCREATE TABLE Genetic_Variants (\n    id SERIAL PRIMARY KEY,\n    variant_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50),\n    allele_frequency FLOAT\n);\n\nCREATE TABLE Phenotype_Information (\n    id SERIAL PRIMARY KEY,\n    sample_id INTEGER UNIQUE,\n    trait VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE DNA_Sequences;",
  "### TABLEDATA\n\nCREATE TABLE DNA_Sequences (\n    id SERIAL PRIMARY KEY,\n    sequence TEXT NOT NULL,\n    quality_score FLOAT\n);\n\nCREATE TABLE Genetic_Variants (\n    id SERIAL PRIMARY KEY,\n    variant_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50),\n    allele_frequency FLOAT\n);\n\nCREATE TABLE Phenotype_Information (\n    id SERIAL PRIMARY KEY,\n    sample_id INTEGER UNIQUE,\n    trait VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Genetic_Variants;",
  "### TABLEDATA\n\nCREATE TABLE DNA_Sequences (\n    id SERIAL PRIMARY KEY,\n    sequence TEXT NOT NULL,\n    quality_score FLOAT\n);\n\nCREATE TABLE Genetic_Variants (\n    id SERIAL PRIMARY KEY,\n    variant_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50),\n    allele_frequency FLOAT\n);\n\nCREATE TABLE Phenotype_Information (\n    id SERIAL PRIMARY KEY,\n    sample_id INTEGER UNIQUE,\n    trait VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Phenotype_Information;",
  "### TABLEDATA\n\nCREATE TABLE DNA_Sequences (\n    id SERIAL PRIMARY KEY,\n    sequence TEXT NOT NULL,\n    quality_score FLOAT\n);\n\nCREATE TABLE Genetic_Variants (\n    id SERIAL PRIMARY KEY,\n    variant_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50),\n    allele_frequency FLOAT\n);\n\nCREATE TABLE Phenotype_Information (\n    id SERIAL PRIMARY KEY,\n    sample_id INTEGER UNIQUE,\n    trait VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE DNA_Sequences;",
  "### TABLEDATA\n\nCREATE TABLE DNA_Sequences (\n    id SERIAL PRIMARY KEY,\n    sequence TEXT NOT NULL,\n    quality_score FLOAT\n);\n\nCREATE TABLE Genetic_Variants (\n    id SERIAL PRIMARY KEY,\n    variant_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50),\n    allele_frequency FLOAT\n);\n\nCREATE TABLE Phenotype_Information (\n    id SERIAL PRIMARY KEY,\n    sample_id INTEGER UNIQUE,\n    trait VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Genetic_Variants;",
  "### TABLEDATA\n\nCREATE TABLE DNA_Sequences (\n    id SERIAL PRIMARY KEY,\n    sequence TEXT NOT NULL,\n    quality_score FLOAT\n);\n\nCREATE TABLE Genetic_Variants (\n    id SERIAL PRIMARY KEY,\n    variant_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50),\n    allele_frequency FLOAT\n);\n\nCREATE TABLE Phenotype_Information (\n    id SERIAL PRIMARY KEY,\n    sample_id INTEGER UNIQUE,\n    trait VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Phenotype_Information;",
  "### TABLEDATA\n\nCREATE TABLE Patient (\n    patient_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    sex CHAR,\n    genetic_data BYTES\n);\n\n\nCREATE TABLE Genetic_Test (\n    test_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patient(patient_id),\n    test_date DATE,\n    test_result VARCHAR(100),\n    test_data JSONB\n);\n\n\nCREATE TABLE Variant (\n    variant_id UUID PRIMARY KEY,\n    gene_name VARCHAR(50),\n    chromosome VARCHAR(10),\n    position INT,\n    variant_type VARCHAR(20),\n    allele_freq FLOAT\n);\n\n\nCREATE TABLE Analysis_Result (\n    result_id UUID PRIMARY KEY,\n    test_id UUID REFERENCES Genetic_Test(test_id),\n    variant_id UUID REFERENCES Variant(variant_id),\n    analysis_date DATE,\n    analysis_result VARCHAR(100)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Patient;",
  "### TABLEDATA\n\nCREATE TABLE Patient (\n    patient_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    sex CHAR,\n    genetic_data BYTES\n);\n\n\nCREATE TABLE Genetic_Test (\n    test_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patient(patient_id),\n    test_date DATE,\n    test_result VARCHAR(100),\n    test_data JSONB\n);\n\n\nCREATE TABLE Variant (\n    variant_id UUID PRIMARY KEY,\n    gene_name VARCHAR(50),\n    chromosome VARCHAR(10),\n    position INT,\n    variant_type VARCHAR(20),\n    allele_freq FLOAT\n);\n\n\nCREATE TABLE Analysis_Result (\n    result_id UUID PRIMARY KEY,\n    test_id UUID REFERENCES Genetic_Test(test_id),\n    variant_id UUID REFERENCES Variant(variant_id),\n    analysis_date DATE,\n    analysis_result VARCHAR(100)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Genetic_Test;",
  "### TABLEDATA\n\nCREATE TABLE Patient (\n    patient_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    sex CHAR,\n    genetic_data BYTES\n);\n\n\nCREATE TABLE Genetic_Test (\n    test_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patient(patient_id),\n    test_date DATE,\n    test_result VARCHAR(100),\n    test_data JSONB\n);\n\n\nCREATE TABLE Variant (\n    variant_id UUID PRIMARY KEY,\n    gene_name VARCHAR(50),\n    chromosome VARCHAR(10),\n    position INT,\n    variant_type VARCHAR(20),\n    allele_freq FLOAT\n);\n\n\nCREATE TABLE Analysis_Result (\n    result_id UUID PRIMARY KEY,\n    test_id UUID REFERENCES Genetic_Test(test_id),\n    variant_id UUID REFERENCES Variant(variant_id),\n    analysis_date DATE,\n    analysis_result VARCHAR(100)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Variant;",
  "### TABLEDATA\n\nCREATE TABLE Patient (\n    patient_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    sex CHAR,\n    genetic_data BYTES\n);\n\n\nCREATE TABLE Genetic_Test (\n    test_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patient(patient_id),\n    test_date DATE,\n    test_result VARCHAR(100),\n    test_data JSONB\n);\n\n\nCREATE TABLE Variant (\n    variant_id UUID PRIMARY KEY,\n    gene_name VARCHAR(50),\n    chromosome VARCHAR(10),\n    position INT,\n    variant_type VARCHAR(20),\n    allele_freq FLOAT\n);\n\n\nCREATE TABLE Analysis_Result (\n    result_id UUID PRIMARY KEY,\n    test_id UUID REFERENCES Genetic_Test(test_id),\n    variant_id UUID REFERENCES Variant(variant_id),\n    analysis_date DATE,\n    analysis_result VARCHAR(100)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Patient CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE Patient (\n    patient_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    sex CHAR,\n    genetic_data BYTES\n);\n\n\nCREATE TABLE Genetic_Test (\n    test_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patient(patient_id),\n    test_date DATE,\n    test_result VARCHAR(100),\n    test_data JSONB\n);\n\n\nCREATE TABLE Variant (\n    variant_id UUID PRIMARY KEY,\n    gene_name VARCHAR(50),\n    chromosome VARCHAR(10),\n    position INT,\n    variant_type VARCHAR(20),\n    allele_freq FLOAT\n);\n\n\nCREATE TABLE Analysis_Result (\n    result_id UUID PRIMARY KEY,\n    test_id UUID REFERENCES Genetic_Test(test_id),\n    variant_id UUID REFERENCES Variant(variant_id),\n    analysis_date DATE,\n    analysis_result VARCHAR(100)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Genetic_Test CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE Patient (\n    patient_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    sex CHAR,\n    genetic_data BYTES\n);\n\n\nCREATE TABLE Genetic_Test (\n    test_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patient(patient_id),\n    test_date DATE,\n    test_result VARCHAR(100),\n    test_data JSONB\n);\n\n\nCREATE TABLE Variant (\n    variant_id UUID PRIMARY KEY,\n    gene_name VARCHAR(50),\n    chromosome VARCHAR(10),\n    position INT,\n    variant_type VARCHAR(20),\n    allele_freq FLOAT\n);\n\n\nCREATE TABLE Analysis_Result (\n    result_id UUID PRIMARY KEY,\n    test_id UUID REFERENCES Genetic_Test(test_id),\n    variant_id UUID REFERENCES Variant(variant_id),\n    analysis_date DATE,\n    analysis_result VARCHAR(100)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Variant CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  date_of_birth DATE\n)\n\nCREATE TABLE samples (\n  sample_id INT PRIMARY KEY,\n  patient_id INT,\n  sample_type VARCHAR(50),\n  collection_date DATE,\n  quantity FLOAT,\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n)\n\nCREATE TABLE variants (\n  variant_id INT PRIMARY KEY,\n  sample_id INT,\n  chromosome VARCHAR(10),\n  position INT,\n  variant_type VARCHAR(50),\n  CONSTRAINT fk_sample_id FOREIGN KEY (sample_id) REFERENCES samples(sample_id)\n)\n\nCREATE TABLE genes (\n  gene_id INT PRIMARY KEY,\n  gene_symbol VARCHAR(20),\n  gene_name VARCHAR(100),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE interpretations (\n  interpretation_id INT PRIMARY KEY,\n  variant_id INT,\n  gene_id INT,\n  interpretation_text TEXT,\n  CONSTRAINT fk_variant_id FOREIGN KEY (variant_id) REFERENCES variants(variant_id),\n  CONSTRAINT fk_gene_id FOREIGN KEY (gene_id) REFERENCES genes(gene_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  date_of_birth DATE\n)\n\nCREATE TABLE samples (\n  sample_id INT PRIMARY KEY,\n  patient_id INT,\n  sample_type VARCHAR(50),\n  collection_date DATE,\n  quantity FLOAT,\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n)\n\nCREATE TABLE variants (\n  variant_id INT PRIMARY KEY,\n  sample_id INT,\n  chromosome VARCHAR(10),\n  position INT,\n  variant_type VARCHAR(50),\n  CONSTRAINT fk_sample_id FOREIGN KEY (sample_id) REFERENCES samples(sample_id)\n)\n\nCREATE TABLE genes (\n  gene_id INT PRIMARY KEY,\n  gene_symbol VARCHAR(20),\n  gene_name VARCHAR(100),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE interpretations (\n  interpretation_id INT PRIMARY KEY,\n  variant_id INT,\n  gene_id INT,\n  interpretation_text TEXT,\n  CONSTRAINT fk_variant_id FOREIGN KEY (variant_id) REFERENCES variants(variant_id),\n  CONSTRAINT fk_gene_id FOREIGN KEY (gene_id) REFERENCES genes(gene_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE samples;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  date_of_birth DATE\n)\n\nCREATE TABLE samples (\n  sample_id INT PRIMARY KEY,\n  patient_id INT,\n  sample_type VARCHAR(50),\n  collection_date DATE,\n  quantity FLOAT,\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n)\n\nCREATE TABLE variants (\n  variant_id INT PRIMARY KEY,\n  sample_id INT,\n  chromosome VARCHAR(10),\n  position INT,\n  variant_type VARCHAR(50),\n  CONSTRAINT fk_sample_id FOREIGN KEY (sample_id) REFERENCES samples(sample_id)\n)\n\nCREATE TABLE genes (\n  gene_id INT PRIMARY KEY,\n  gene_symbol VARCHAR(20),\n  gene_name VARCHAR(100),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE interpretations (\n  interpretation_id INT PRIMARY KEY,\n  variant_id INT,\n  gene_id INT,\n  interpretation_text TEXT,\n  CONSTRAINT fk_variant_id FOREIGN KEY (variant_id) REFERENCES variants(variant_id),\n  CONSTRAINT fk_gene_id FOREIGN KEY (gene_id) REFERENCES genes(gene_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE variants;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  date_of_birth DATE\n)\n\nCREATE TABLE samples (\n  sample_id INT PRIMARY KEY,\n  patient_id INT,\n  sample_type VARCHAR(50),\n  collection_date DATE,\n  quantity FLOAT,\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n)\n\nCREATE TABLE variants (\n  variant_id INT PRIMARY KEY,\n  sample_id INT,\n  chromosome VARCHAR(10),\n  position INT,\n  variant_type VARCHAR(50),\n  CONSTRAINT fk_sample_id FOREIGN KEY (sample_id) REFERENCES samples(sample_id)\n)\n\nCREATE TABLE genes (\n  gene_id INT PRIMARY KEY,\n  gene_symbol VARCHAR(20),\n  gene_name VARCHAR(100),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE interpretations (\n  interpretation_id INT PRIMARY KEY,\n  variant_id INT,\n  gene_id INT,\n  interpretation_text TEXT,\n  CONSTRAINT fk_variant_id FOREIGN KEY (variant_id) REFERENCES variants(variant_id),\n  CONSTRAINT fk_gene_id FOREIGN KEY (gene_id) REFERENCES genes(gene_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE interpretations;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  date_of_birth DATE\n)\n\nCREATE TABLE samples (\n  sample_id INT PRIMARY KEY,\n  patient_id INT,\n  sample_type VARCHAR(50),\n  collection_date DATE,\n  quantity FLOAT,\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n)\n\nCREATE TABLE variants (\n  variant_id INT PRIMARY KEY,\n  sample_id INT,\n  chromosome VARCHAR(10),\n  position INT,\n  variant_type VARCHAR(50),\n  CONSTRAINT fk_sample_id FOREIGN KEY (sample_id) REFERENCES samples(sample_id)\n)\n\nCREATE TABLE genes (\n  gene_id INT PRIMARY KEY,\n  gene_symbol VARCHAR(20),\n  gene_name VARCHAR(100),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE interpretations (\n  interpretation_id INT PRIMARY KEY,\n  variant_id INT,\n  gene_id INT,\n  interpretation_text TEXT,\n  CONSTRAINT fk_variant_id FOREIGN KEY (variant_id) REFERENCES variants(variant_id),\n  CONSTRAINT fk_gene_id FOREIGN KEY (gene_id) REFERENCES genes(gene_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE variants;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  date_of_birth DATE\n)\n\nCREATE TABLE samples (\n  sample_id INT PRIMARY KEY,\n  patient_id INT,\n  sample_type VARCHAR(50),\n  collection_date DATE,\n  quantity FLOAT,\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n)\n\nCREATE TABLE variants (\n  variant_id INT PRIMARY KEY,\n  sample_id INT,\n  chromosome VARCHAR(10),\n  position INT,\n  variant_type VARCHAR(50),\n  CONSTRAINT fk_sample_id FOREIGN KEY (sample_id) REFERENCES samples(sample_id)\n)\n\nCREATE TABLE genes (\n  gene_id INT PRIMARY KEY,\n  gene_symbol VARCHAR(20),\n  gene_name VARCHAR(100),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE interpretations (\n  interpretation_id INT PRIMARY KEY,\n  variant_id INT,\n  gene_id INT,\n  interpretation_text TEXT,\n  CONSTRAINT fk_variant_id FOREIGN KEY (variant_id) REFERENCES variants(variant_id),\n  CONSTRAINT fk_gene_id FOREIGN KEY (gene_id) REFERENCES genes(gene_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE samples;"
]