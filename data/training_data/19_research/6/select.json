[
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations_and_references;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT id, citation_text FROM citations_and_references;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name FROM citations_and_references;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations_and_references WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations_and_references WHERE author_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations_and_references WHERE publication_date > '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT id, author_name FROM citations_and_references WHERE publication_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations_and_references ORDER BY publication_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT id, author_name FROM citations_and_references ORDER BY author_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM citations_and_references;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT author_name FROM citations_and_references;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations_and_references LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT id, citation_text FROM citations_and_references WHERE author_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations_and_references WHERE author_name IN ('Alice', 'Bob');",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT id, publication_date FROM citations_and_references WHERE publication_date BETWEEN '2021-01-01' AND '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT id, citation_text FROM citations_and_references WHERE id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT publication_date, COUNT(*) FROM citations_and_references GROUP BY publication_date;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, COUNT(*) FROM citations_and_references GROUP BY author_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, MAX(publication_date) FROM citations_and_references GROUP BY author_name;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(id), MIN(publication_date) FROM citations_and_references;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations_and_references WHERE author_name LIKE 'John%' AND publication_date >= '2020-01-01';",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT id, citation_text FROM citations_and_references WHERE publication_date BETWEEN '2010-01-01' AND '2019-12-31';",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(publication_date) AS latest_publication_date FROM citations_and_references;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(id) AS average_id FROM citations_and_references;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM citations_and_references;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT author_name FROM citations_and_references;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT publication_date, COUNT(*) AS citation_count FROM citations_and_references GROUP BY publication_date;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, COUNT(*) AS citation_count FROM citations_and_references GROUP BY author_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, publication_date, COUNT(*) AS citation_count FROM citations_and_references GROUP BY author_name, publication_date HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, publication_date, citation_text FROM citations_and_references ORDER BY publication_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(id) AS average_id, MAX(id) AS max_id, MIN(id) AS min_id FROM citations_and_references;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, publication_date, COUNT(*) AS citation_count FROM citations_and_references WHERE author_name IN ('Alice', 'Bob') GROUP BY author_name, publication_date;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, publication_date, citation_text FROM citations_and_references LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, publication_date, citation_text FROM citations_and_references OFFSET 5 LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, publication_date, citation_text FROM citations_and_references WHERE publication_date <= '2015-12-31' ORDER BY publication_date ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, publication_date, citation_text FROM citations_and_references WHERE publication_date >= '2018-01-01' ORDER BY publication_date DESC OFFSET 10 LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, AVG(id) AS average_id FROM citations_and_references GROUP BY author_name HAVING AVG(id) > 100;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, publication_date, COUNT(*) AS citation_count FROM citations_and_references WHERE citation_text LIKE '%research%' GROUP BY author_name, publication_date;",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, publication_date, citation_text FROM citations_and_references WHERE publication_date = (SELECT MAX(publication_date) FROM citations_and_references);",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, publication_date, citation_text FROM citations_and_references WHERE publication_date = (SELECT MIN(publication_date) FROM citations_and_references);",
  "### TABLEDATA\n\nCREATE TABLE citations_and_references (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    author_name TEXT,\n    publication_date DATE\n);\n\n### STATEMENT\n\nSELECT author_name, publication_date, AVG(id) AS average_id FROM citations_and_references WHERE author_name = 'John Doe' GROUP BY author_name, publication_date ORDER BY publication_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT id, citation_text FROM citations WHERE citation_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM references WHERE reference_date BETWEEN '2020-01-01' AND '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT paper_id, reference_text FROM references ORDER BY reference_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT id, citation_text FROM citations WHERE paper_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE citation_text LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT id, citation_text FROM citations WHERE citation_date < '2021-06-30';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT paper_id FROM citations;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM references;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE id = 456;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT id, citation_date FROM citations WHERE paper_id = 789 ORDER BY citation_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM references WHERE reference_text IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT paper_id FROM references WHERE reference_date > '2020-12-31';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT id, reference_text FROM references WHERE reference_date = '2021-08-15';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE citation_text = 'example citation';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT id, citation_date FROM citations WHERE citation_text LIKE '%data%';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE citation_date = '2021-10-20';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT id, reference_date FROM references WHERE paper_id = 456 ORDER BY reference_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE citation_date < '2021-05-01' AND paper_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT id, citation_text FROM citations WHERE paper_id IN (123, 456);",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE paper_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT citation_text FROM citations WHERE citation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT citations.citation_text, references.reference_text FROM citations INNER JOIN references ON citations.paper_id = references.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT citations.id, citations.citation_date, references.reference_date FROM citations LEFT JOIN references ON citations.paper_id = references.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(citations.citation_date) AS latest_citation_date FROM citations;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(citations.id) AS avg_citation_id FROM citations GROUP BY citations.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT citations.paper_id) AS unique_paper_count FROM citations;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT citations.citation_text AS citation, references.reference_text AS reference FROM citations CROSS JOIN references WHERE citations.id = 1 AND references.id = 1;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE citation_text LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE citation_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE citation_text LIKE '%good%' AND citation_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT citations.id, citations.citation_text FROM citations WHERE citations.id IN (SELECT id FROM references);",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT citations.id, citations.citation_text FROM citations WHERE citations.id NOT IN (SELECT id FROM references);",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_citations FROM citations UNION ALL SELECT COUNT(*) AS total_references FROM references;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT paper_id, COUNT(*) AS citation_count FROM citations GROUP BY paper_id HAVING citation_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT paper_id, AVG(citations.id) AS avg_citation_id FROM citations GROUP BY paper_id HAVING AVG(citations.id) > 10;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT paper_id, MIN(citations.citation_date) AS first_citation_date FROM citations GROUP BY paper_id ORDER BY first_citation_date;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT paper_id, MAX(citations.citation_date) AS latest_citation_date FROM citations GROUP BY paper_id ORDER BY latest_citation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT citations.paper_id, COUNT(*) AS total_citations FROM citations WHERE citation_date >= '2022-01-01' GROUP BY citations.paper_id HAVING total_citations > 2;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT references.paper_id, COUNT(*) AS total_references FROM references JOIN citations ON references.paper_id = citations.paper_id GROUP BY references.paper_id HAVING total_references > 1;",
  "### TABLEDATA\n\nCREATE TABLE citations ( id INT PRIMARY KEY,\n  paper_id INT,\n  citation_text TEXT,\n  citation_date DATE\n);\n\nCREATE TABLE references ( id INT PRIMARY KEY,\n  paper_id INT,\n  reference_text TEXT,\n  reference_date DATE\n);\n\n### STATEMENT\n\nSELECT citations.paper_id, COUNT(*) AS citation_count, (SELECT COUNT(*) FROM references WHERE references.paper_id = citations.paper_id) AS reference_count FROM citations GROUP BY citations.paper_id HAVING citation_count > 2;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM citations;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT citation_text FROM citations;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM papers;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT title, author FROM papers;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM references;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT paper_id, cited_paper_id FROM references;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT citations.citation_text, papers.title FROM citations JOIN papers ON citations.cited_paper_id = papers.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT papers.title, papers.author, references.cited_paper_id FROM papers JOIN references ON papers.paper_id = references.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT papers.*, references.cited_paper_id FROM papers LEFT JOIN references ON papers.paper_id = references.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT citations.*, papers.title, references.reference_id FROM citations LEFT JOIN papers ON citations.cited_paper_id = papers.paper_id LEFT JOIN references ON papers.paper_id = references.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT citation_text FROM citations WHERE cited_paper_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM papers WHERE author = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT title FROM papers WHERE publish_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM references WHERE paper_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT paper_id, cited_paper_id FROM references WHERE reference_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT citations.citation_text, papers.title FROM citations JOIN papers ON citations.cited_paper_id = papers.paper_id WHERE citations.id = 2;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT papers.title, papers.author, references.cited_paper_id FROM papers JOIN references ON papers.paper_id = references.paper_id WHERE papers.author = 'Alice Johnson';",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT papers.*, references.cited_paper_id FROM papers LEFT JOIN references ON papers.paper_id = references.paper_id WHERE references.reference_id = 8;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT citations.*, papers.title, references.reference_id FROM citations LEFT JOIN papers ON citations.cited_paper_id = papers.paper_id LEFT JOIN references ON papers.paper_id = references.paper_id WHERE citations.id = 3;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE cited_paper_id IN (SELECT paper_id FROM papers WHERE author='John Doe')",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT author, COUNT(*) AS num_citations FROM papers JOIN citations ON papers.paper_id = citations.cited_paper_id GROUP BY author",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM citations JOIN papers ON citations.cited_paper_id = papers.paper_id WHERE papers.author='Jane Smith' ORDER BY citations.citation_text DESC",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT papers.title, COUNT(*) AS num_citations FROM papers JOIN references ON papers.paper_id = references.paper_id GROUP BY papers.title HAVING num_citations > 5",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT papers.title, papers.author, citations.citation_text FROM papers JOIN references ON papers.paper_id = references.paper_id JOIN citations ON references.cited_paper_id = citations.id",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT papers.author, COUNT(*) AS num_references FROM papers JOIN references ON papers.paper_id = references.paper_id GROUP BY papers.author ORDER BY num_references DESC",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE citation_text LIKE '%machine learning%' AND cited_paper_id IN (SELECT paper_id FROM papers WHERE publish_date > '2020-01-01')",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT author, MAX(publish_date) AS latest_publish_date FROM papers GROUP BY author",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT papers.title, COUNT(*) AS num_references FROM papers JOIN references ON papers.paper_id = references.paper_id GROUP BY papers.title ORDER BY num_references DESC",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT author, COUNT(*) AS num_papers FROM papers GROUP BY author HAVING num_papers > 3",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT papers.title, papers.author, citations.citation_text, papers.publish_date FROM papers JOIN citations ON papers.paper_id = citations.cited_paper_id",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT papers.title, COUNT(*) AS num_citations FROM papers JOIN references ON papers.paper_id = references.paper_id GROUP BY papers.title ORDER BY num_citations DESC",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT papers.title, COUNT(*) AS num_citations FROM papers JOIN references ON papers.paper_id = references.paper_id WHERE references.cited_paper_id IN (SELECT id FROM citations WHERE citation_text LIKE '%deep learning%') GROUP BY papers.title",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT author, COUNT(*) AS num_citations FROM papers JOIN citations ON papers.paper_id = citations.cited_paper_id GROUP BY author ORDER BY num_citations DESC",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT papers.title, papers.author, citations.citation_text, papers.publish_date FROM papers JOIN references ON papers.paper_id = references.paper_id JOIN citations ON references.cited_paper_id = citations.id ORDER BY papers.publish_date DESC",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT author, AVG(publish_date) AS avg_publish_date FROM papers GROUP BY author",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT author, COUNT(*) AS num_references FROM papers JOIN references ON papers.paper_id = references.paper_id GROUP BY author HAVING num_references > 4",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT author, COUNT(*) AS num_citations FROM papers JOIN citations ON papers.paper_id = citations.cited_paper_id WHERE citations.citation_text LIKE '%data science%' GROUP BY author ORDER BY num_citations DESC",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT title, COUNT(*) AS num_citations FROM papers JOIN references ON papers.paper_id = references.paper_id WHERE papers.author='John Doe' GROUP BY title ORDER BY num_citations DESC",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    citation_text TEXT,\n    cited_paper_id INT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publish_date DATE\n);\n\nCREATE TABLE references (\n    reference_id INT PRIMARY KEY,\n    paper_id INT,\n    cited_paper_id INT\n);\n\n### STATEMENT\n\nSELECT author, COUNT(*) AS num_papers FROM papers JOIN references ON papers.paper_id = references.paper_id GROUP BY author ORDER BY num_papers DESC",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT * FROM Citations;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT citation_id, paper_title, author_name, publication_year FROM Citations;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT paper_title FROM Citations WHERE publication_year = 2021;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT * FROM References;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT referenced_paper_title FROM References WHERE citing_paper_title = 'Example Paper';",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT * FROM Authors;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name FROM Authors WHERE affiliation = 'University';",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT * FROM Venues;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT venue_name, publication_year FROM Venues WHERE publication_year = 2020;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT * FROM Citations JOIN Authors ON Citations.author_name = Authors.author_name;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT * FROM Citations LEFT JOIN References ON Citations.citation_id = References.reference_id;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT * FROM Authors INNER JOIN Venues ON Authors.affiliation = Venues.venue_name;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, paper_title FROM Citations WHERE publication_year BETWEEN 2010 AND 2020;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT * FROM Citations ORDER BY publication_year DESC;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_citations FROM Citations;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, COUNT(*) AS total_citations FROM Citations GROUP BY author_name;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, publication_year, COUNT(*) AS total_citations FROM Citations GROUP BY author_name, publication_year;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, SUM(publication_year) AS total_publication_year FROM Citations GROUP BY author_name;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, AVG(publication_year) AS average_publication_year FROM Citations GROUP BY author_name;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, MAX(publication_year) AS max_publication_year FROM Citations GROUP BY author_name;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT * FROM Citations WHERE publication_year > 2010;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT paper_title, author_name FROM Citations WHERE publication_year BETWEEN 2015 AND 2020;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT citation_id, paper_title, publication_year FROM Citations WHERE author_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT * FROM Citations INNER JOIN Authors ON Citations.author_name = Authors.author_name;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT citation_id, paper_title, venue_name FROM Citations JOIN Venues ON Citations.publication_year = Venues.publication_year;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT citing_paper_title, cited_paper_title FROM References;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, COUNT(*) AS num_citations FROM Citations GROUP BY author_name;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, affiliation FROM Authors WHERE author_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT * FROM Citations WHERE publication_year > 2010 AND author_name = 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, publication_year FROM Citations JOIN Authors ON Citations.author_name = Authors.author_name WHERE Authors.affiliation = 'University X';",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT * FROM Authors WHERE affiliation = 'Company Y' AND EXISTS (SELECT * FROM Citations WHERE Authors.author_name = Citations.author_name);",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT cited_paper_title, COUNT(*) AS num_citations FROM References GROUP BY cited_paper_title ORDER BY num_citations DESC;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, COUNT(*) AS num_citations FROM Citations JOIN Authors ON Citations.author_name = Authors.author_name GROUP BY author_name HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT paper_title, author_name, publication_year FROM Citations WHERE author_name IN (SELECT author_name FROM Authors WHERE affiliation = 'University Z');",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, CITEOUNT(*) AS num_citations FROM Citations GROUP BY author_name ORDER BY num_citations DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, affiliation FROM Authors UNION SELECT author_name, 'No affiliation' AS affiliation FROM Citations WHERE author_name NOT IN (SELECT author_name FROM Authors);",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT paper_title, author_name FROM Citations WHERE EXISTS (SELECT * FROM References WHERE References.cited_paper_title = Citations.paper_title);",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, COUNT(*) AS num_citations FROM Citations GROUP BY author_name HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM Citations);",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT author_name, publication_year FROM Citations JOIN Authors ON Citations.author_name = Authors.author_name WHERE publication_year < (SELECT MIN(publication_year) FROM Venues);",
  "### TABLEDATA\n\nCREATE TABLE Citations (\n    citation_id UUID PRIMARY KEY,\n    paper_title TEXT,\n    author_name TEXT,\n    publication_year INT\n);\n\nCREATE TABLE References (\n    reference_id UUID PRIMARY KEY,\n    cited_paper_title TEXT,\n    citing_paper_title TEXT\n);\n\nCREATE TABLE Authors (\n    author_id UUID PRIMARY KEY,\n    author_name TEXT,\n    affiliation TEXT\n);\n\nCREATE TABLE Venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name TEXT,\n    publication_year INT\n);\n\n### STATEMENT\n\nSELECT paper_title, author_name FROM Citations WHERE publication_year = (SELECT MAX(publication_year) FROM Citations);",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT * FROM citations;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT author_name, publication_date FROM citations;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT id, citation_text FROM citations;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT * FROM references;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT ref_id, reference_text FROM references;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT * FROM papers;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT paper_id, title FROM papers;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT * FROM authors;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT author_id, affiliation FROM authors;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT * FROM citation_links;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citation_id, ref_id FROM citation_links;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.author_name, references.reference_text FROM citations JOIN references ON citations.id = references.cited_paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT authors.author_name, papers.title FROM authors JOIN papers ON authors.author_id = papers.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.id, citations.citation_text, references.reference_text FROM citations JOIN citation_links ON citations.id = citation_links.citation_id JOIN references ON citation_links.ref_id = references.ref_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.author_name, citations.publication_date, authors.affiliation FROM citations JOIN authors ON citations.author_name = authors.author_name;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT papers.title, papers.abstract, papers.publication_date, citation_links.citation_id FROM papers JOIN citation_links ON papers.paper_id = citation_links.citation_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT papers.title, authors.author_name FROM papers JOIN authors ON papers.title = authors.author_name;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.id, citations.publication_date, citation_links.ref_id, references.reference_text FROM citations JOIN citation_links ON citations.id = citation_links.citation_id JOIN references ON citation_links.ref_id = references.ref_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT authors.author_name, authors.affiliation, papers.title, papers.abstract FROM authors JOIN papers ON authors.author_id = papers.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.author_name, citations.publication_date, references.ref_id, references.reference_text FROM citations JOIN citation_links ON citations.id = citation_links.citation_id JOIN references ON citation_links.ref_id = references.ref_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT * FROM citations JOIN authors ON citations.author_name = authors.author_name;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.id, citations.author_name, citations.publication_date, authors.affiliation FROM citations LEFT JOIN authors ON citations.author_name = authors.author_name;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT papers.title, papers.abstract, citations.citation_text FROM papers INNER JOIN citations ON papers.paper_id = citations.id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT papers.title, citations.citation_text, authors.author_name FROM papers INNER JOIN citations ON papers.paper_id = citations.id INNER JOIN authors ON citations.author_name = authors.author_name;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.id, citations.author_name, citations.publication_date, references.reference_text FROM citations LEFT JOIN references ON citations.id = references.cited_paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT authors.author_name, papers.title, papers.publication_date FROM authors INNER JOIN citations ON authors.author_name = citations.author_name INNER JOIN papers ON citations.id = papers.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.citation_text, references.reference_text, papers.title FROM citations INNER JOIN references ON citations.id = references.cited_paper_id INNER JOIN papers ON references.cited_paper_id = papers.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT authors.author_name, citations.citation_text, references.reference_text FROM authors INNER JOIN citations ON authors.author_name = citations.author_name INNER JOIN references ON citations.id = references.cited_paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.id, authors.author_name, citations.citation_text, papers.title FROM citations LEFT JOIN authors ON citations.author_name = authors.author_name LEFT JOIN papers ON citations.id = papers.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT authors.author_name, authors.affiliation, papers.title, papers.abstract FROM authors INNER JOIN citations ON authors.author_name = citations.author_name INNER JOIN papers ON citations.id = papers.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT authors.author_name, authors.affiliation, citations.citation_text, citations.publication_date FROM authors INNER JOIN citations ON authors.author_name = citations.author_name;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.id, papers.title, citations.citation_text, references.reference_text FROM citations INNER JOIN papers ON citations.id = papers.paper_id INNER JOIN references ON citations.id = references.cited_paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT authors.author_name, papers.title, citations.publication_date, references.reference_text FROM authors INNER JOIN citations ON authors.author_name = citations.author_name INNER JOIN references ON citations.id = references.cited_paper_id INNER JOIN papers ON references.cited_paper_id = papers.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.id, citations.author_name, papers.title, papers.publication_date, references.reference_text FROM citations LEFT JOIN papers ON citations.id = papers.paper_id LEFT JOIN references ON citations.id = references.cited_paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT authors.author_name, authors.affiliation, citations.citation_text, references.reference_text FROM authors INNER JOIN citations ON authors.author_name = citations.author_name INNER JOIN references ON citations.id = references.cited_paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.id, authors.author_name, citations.citation_text, papers.title FROM citations LEFT JOIN authors ON citations.author_name = authors.author_name LEFT JOIN papers ON citations.id = papers.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT authors.author_name, authors.affiliation, papers.title, papers.abstract FROM authors INNER JOIN citations ON authors.author_name = citations.author_name INNER JOIN papers ON citations.id = papers.paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT authors.author_name, authors.affiliation, citations.citation_text, citations.publication_date FROM authors INNER JOIN citations ON authors.author_name = citations.author_name;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT citations.id, papers.title, citations.citation_text, references.reference_text FROM citations INNER JOIN papers ON citations.id = papers.paper_id INNER JOIN references ON citations.id = references.cited_paper_id;",
  "### TABLEDATA\n\nCREATE TABLE citations (\n    id INT PRIMARY KEY,\n    author_name VARCHAR,\n    publication_date DATE,\n    citation_text TEXT\n);\n\nCREATE TABLE references (\n    ref_id INT PRIMARY KEY,\n    cited_paper_id INT,\n    reference_text TEXT\n);\n\nCREATE TABLE papers (\n    paper_id INT PRIMARY KEY,\n    title VARCHAR,\n    abstract TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE authors (\n    author_id INT PRIMARY KEY,\n    author_name VARCHAR,\n    affiliation VARCHAR\n);\n\nCREATE TABLE citation_links (\n    citation_id INT,\n    ref_id INT,\n    FOREIGN KEY (citation_id) REFERENCES citations(id),\n    FOREIGN KEY (ref_id) REFERENCES references(ref_id)\n);\n\n### STATEMENT\n\nSELECT authors.author_name, papers.title, citations.publication_date, references.reference_text FROM authors INNER JOIN citations ON authors.author_name = citations.author_name INNER JOIN references ON citations.id = references.cited_paper_id INNER JOIN papers ON references.cited_paper_id = papers.paper_id;"
]