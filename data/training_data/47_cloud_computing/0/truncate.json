[
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_credentials;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_credentials;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_credentials CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_credentials RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    password_hash VARCHAR(255),\n    salt VARCHAR(255)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id VARCHAR(255) PRIMARY KEY,\n    user_id INT REFERENCES user_credentials(user_id),\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_credentials;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    password_hash VARCHAR(255),\n    salt VARCHAR(255)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id VARCHAR(255) PRIMARY KEY,\n    user_id INT REFERENCES user_credentials(user_id),\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_sessions;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    password_hash VARCHAR(255),\n    salt VARCHAR(255)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id VARCHAR(255) PRIMARY KEY,\n    user_id INT REFERENCES user_credentials(user_id),\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_credentials;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    password_hash VARCHAR(255),\n    salt VARCHAR(255)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id VARCHAR(255) PRIMARY KEY,\n    user_id INT REFERENCES user_credentials(user_id),\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_sessions;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    password_hash VARCHAR(255),\n    salt VARCHAR(255)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id VARCHAR(255) PRIMARY KEY,\n    user_id INT REFERENCES user_credentials(user_id),\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_credentials CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password_hash VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    created_at TIMESTAMP,\n    last_active TIMESTAMP\n);\n\n\nCREATE TABLE user_tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    token VARCHAR(50),\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password_hash VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    created_at TIMESTAMP,\n    last_active TIMESTAMP\n);\n\n\nCREATE TABLE user_tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    token VARCHAR(50),\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_sessions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password_hash VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    created_at TIMESTAMP,\n    last_active TIMESTAMP\n);\n\n\nCREATE TABLE user_tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    token VARCHAR(50),\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_tokens;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password_hash VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    created_at TIMESTAMP,\n    last_active TIMESTAMP\n);\n\n\nCREATE TABLE user_tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    token VARCHAR(50),\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password_hash VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    created_at TIMESTAMP,\n    last_active TIMESTAMP\n);\n\n\nCREATE TABLE user_tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    token VARCHAR(50),\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_sessions CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password_hash VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    created_at TIMESTAMP,\n    last_active TIMESTAMP\n);\n\n\nCREATE TABLE user_tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    token VARCHAR(50),\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_tokens CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id UUID PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id UUID PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id UUID PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id UUID PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id UUID PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id UUID PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id UUID PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id UUID PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id UUID PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id UUID PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id UUID PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id UUID PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) UNIQUE NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE user_roles (\n  role_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  role_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE password_reset_tokens (\n  token_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE login_attempts (\n  attempt_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  attempt_timestamp TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE session_tokens (\n  session_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) UNIQUE NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE user_roles (\n  role_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  role_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE password_reset_tokens (\n  token_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE login_attempts (\n  attempt_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  attempt_timestamp TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE session_tokens (\n  session_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) UNIQUE NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE user_roles (\n  role_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  role_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE password_reset_tokens (\n  token_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE login_attempts (\n  attempt_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  attempt_timestamp TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE session_tokens (\n  session_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nTRUNCATE TABLE password_reset_tokens;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) UNIQUE NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE user_roles (\n  role_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  role_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE password_reset_tokens (\n  token_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE login_attempts (\n  attempt_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  attempt_timestamp TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE session_tokens (\n  session_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nTRUNCATE TABLE users CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) UNIQUE NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE user_roles (\n  role_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  role_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE password_reset_tokens (\n  token_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE login_attempts (\n  attempt_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  attempt_timestamp TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE session_tokens (\n  session_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) UNIQUE NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE user_roles (\n  role_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  role_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE password_reset_tokens (\n  token_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE login_attempts (\n  attempt_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  attempt_timestamp TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE session_tokens (\n  session_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nTRUNCATE TABLE password_reset_tokens CASCADE;"
]