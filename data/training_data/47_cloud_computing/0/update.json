[
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE user_credentials SET password_hash='newpassword' WHERE user_id=1;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE user_credentials SET email='newemail@example.com' WHERE username='john_doe';",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE user_credentials SET password_hash='strongpassword', email='john.doe@example.com' WHERE user_id=2;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE user_credentials SET password_hash = 'newpassword123' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE user_credentials SET email = 'newemail@example.com' WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE user_credentials SET username = 'jane_smith', email = 'jane.smith@example.com' WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    password_hash VARCHAR(255),\n    salt VARCHAR(255)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id VARCHAR(255) PRIMARY KEY,\n    user_id INT REFERENCES user_credentials(user_id),\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE user_credentials SET password_hash = 'new_password' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    password_hash VARCHAR(255),\n    salt VARCHAR(255)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id VARCHAR(255) PRIMARY KEY,\n    user_id INT REFERENCES user_credentials(user_id),\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE user_sessions SET login_time = CURRENT_TIMESTAMP WHERE session_id = 'session123';",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    password_hash VARCHAR(255),\n    salt VARCHAR(255)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id VARCHAR(255) PRIMARY KEY,\n    user_id INT REFERENCES user_credentials(user_id),\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE user_credentials SET salt = 'new_salt' WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    password_hash VARCHAR(255),\n    salt VARCHAR(255)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id VARCHAR(255) PRIMARY KEY,\n    user_id INT REFERENCES user_credentials(user_id),\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE user_credentials SET username = 'new_username' WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    password_hash VARCHAR(255),\n    salt VARCHAR(255)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id VARCHAR(255) PRIMARY KEY,\n    user_id INT REFERENCES user_credentials(user_id),\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE user_sessions SET logout_time = CURRENT_TIMESTAMP WHERE session_id = 'session123'",
  "### TABLEDATA\n\nCREATE TABLE user_credentials (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    password_hash VARCHAR(255),\n    salt VARCHAR(255)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id VARCHAR(255) PRIMARY KEY,\n    user_id INT REFERENCES user_credentials(user_id),\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE user_credentials SET password_hash = 'new_password_hash', salt = 'new_salt' WHERE user_id = 2",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password_hash VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    created_at TIMESTAMP,\n    last_active TIMESTAMP\n);\n\n\nCREATE TABLE user_tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    token VARCHAR(50),\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE users SET password_hash='new_password' WHERE id=1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password_hash VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    created_at TIMESTAMP,\n    last_active TIMESTAMP\n);\n\n\nCREATE TABLE user_tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    token VARCHAR(50),\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE user_sessions SET last_active=NOW() WHERE session_id='123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password_hash VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    created_at TIMESTAMP,\n    last_active TIMESTAMP\n);\n\n\nCREATE TABLE user_tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    token VARCHAR(50),\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE user_tokens SET expiry_timestamp='2022-12-31 23:59:59' WHERE user_id=2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password_hash VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    created_at TIMESTAMP,\n    last_active TIMESTAMP\n);\n\n\nCREATE TABLE user_tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    token VARCHAR(50),\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE users SET username = 'new_username' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password_hash VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    created_at TIMESTAMP,\n    last_active TIMESTAMP\n);\n\n\nCREATE TABLE user_tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    token VARCHAR(50),\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE user_sessions SET last_active = NOW() WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password_hash VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    created_at TIMESTAMP,\n    last_active TIMESTAMP\n);\n\n\nCREATE TABLE user_tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT REFERENCES users(id),\n    token VARCHAR(50),\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE user_tokens SET expiry_timestamp = TIMESTAMP '2023-12-31 23:59:59' WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id UUID PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id UUID PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)\n);\n\n### STATEMENT\n\nUPDATE users SET username = 'new_username' WHERE user_id = 'user_id_1';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id UUID PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id UUID PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)\n);\n\n### STATEMENT\n\nUPDATE user_roles SET role_name = 'new_role_name' WHERE role_id = 'role_id_1';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id UUID PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id UUID PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)\n);\n\n### STATEMENT\n\nUPDATE user_permissions SET permission_name = 'new_permission_name' WHERE permission_id = 'permission_id_1';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id UUID PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id UUID PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)\n);\n\n### STATEMENT\n\nUPDATE users SET password_hash='newpassword' WHERE username='john_doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id UUID PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id UUID PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)\n);\n\n### STATEMENT\n\nUPDATE user_roles SET role_name='Admin' WHERE role_id='123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id UUID PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id UUID PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)\n);\n\n### STATEMENT\n\nUPDATE user_permissions SET permission_name='Write' WHERE permission_id='234e5678-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) UNIQUE NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE user_roles (\n  role_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  role_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE password_reset_tokens (\n  token_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE login_attempts (\n  attempt_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  attempt_timestamp TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE session_tokens (\n  session_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nUPDATE users SET username='new_username' WHERE user_id='e5feafc7-ade4-4b68-a11f-c9f7f38be02a';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) UNIQUE NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE user_roles (\n  role_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  role_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE password_reset_tokens (\n  token_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE login_attempts (\n  attempt_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  attempt_timestamp TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE session_tokens (\n  session_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nUPDATE user_roles SET role_name='admin' WHERE role_id='4c8e7318-33f1-45b2-a584-8afb4c61583e';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) UNIQUE NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE user_roles (\n  role_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  role_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE password_reset_tokens (\n  token_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE login_attempts (\n  attempt_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  attempt_timestamp TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE session_tokens (\n  session_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nUPDATE password_reset_tokens SET token='new_token' WHERE token_id='88b13709-5f71-4e99-9549-402b1a0c986c';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) UNIQUE NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE user_roles (\n  role_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  role_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE password_reset_tokens (\n  token_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE login_attempts (\n  attempt_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  attempt_timestamp TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE session_tokens (\n  session_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nUPDATE users SET username='new_username' WHERE user_id='123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) UNIQUE NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE user_roles (\n  role_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  role_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE password_reset_tokens (\n  token_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE login_attempts (\n  attempt_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  attempt_timestamp TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE session_tokens (\n  session_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nUPDATE user_roles SET role_name='admin' WHERE user_id='123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) UNIQUE NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE user_roles (\n  role_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  role_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE password_reset_tokens (\n  token_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE login_attempts (\n  attempt_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  attempt_timestamp TIMESTAMP DEFAULT NOW()\n)\n\nCREATE TABLE session_tokens (\n  session_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,\n  token VARCHAR(100) NOT NULL,\n  created_at TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nUPDATE session_tokens SET token='new_token' WHERE user_id='123e4567-e89b-12d3-a456-426614174000';"
]