[
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (1, 'Product1', 101, 50, 25.00) ON DUPLICATE KEY UPDATE product_name = 'Product1', supplier_id = 101, quantity = 50, price = 25.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (2, 'Product2', 102, 100, 35.00) ON DUPLICATE KEY UPDATE product_name = 'Product2', supplier_id = 102, quantity = 100, price = 35.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (3, 'Product3', 103, 75, 45.00) ON DUPLICATE KEY UPDATE product_name = 'Product3', supplier_id = 103, quantity = 75, price = 45.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (4, 'Product4', 104, 120, 55.00) ON DUPLICATE KEY UPDATE product_name = 'Product4', supplier_id = 104, quantity = 120, price = 55.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (5, 'Product5', 105, 90, 65.00) ON DUPLICATE KEY UPDATE product_name = 'Product5', supplier_id = 105, quantity = 90, price = 65.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALU...",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (1, 'Product 1', 1001, 50, 100.00) ON DUPLICATE KEY UPDATE quantity = quantity + 10, price = 110.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (2, 'Product 2', 1002, 30, 75.00) ON DUPLICATE KEY UPDATE supplier_id = 1003, quantity = quantity + 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (3, 'Product 3', 1003, 20, 50.00) ON DUPLICATE KEY UPDATE price = price * 1.05;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (4, 'Product 4', 1004, 40, 90.00) ON DUPLICATE KEY UPDATE supplier_id = 1005, quantity = quantity + 10, price = price * 1.1;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (5, 'Product 5', 1005, 25, 60.00) ON DUPLICATE KEY UPDATE supplier_id = 1006, quantity = quantity - 5, price = price - 5.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (6, 'Product 6', 1006, 35, 80.00) ON DUPLICATE KEY UPDATE price = price + 10.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (7, 'Product 7', 1007, 45, 95.00) ON DUPLICATE KEY UPDATE quantity = quantity - 15;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (8, 'Product 8', 1008, 60, 120.00) ON DUPLICATE KEY UPDATE supplier_id = 1009, quantity = quantity + 20;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (9, 'Product 9', 1009, 15, 40.00) ON DUPLICATE KEY UPDATE price = 45.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (10, 'Product 10', 1010, 50, 100.00) ON DUPLICATE KEY UPDATE supplier_id = 1011, quantity = quantity + 25, price = price * 1.2;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (11, 'Product 11', 1011, 10, 35.00) ON DUPLICATE KEY UPDATE quantity = quantity + 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (12, 'Product 12', 1012, 30, 70.00) ON DUPLICATE KEY UPDATE supplier_id = 1013, quantity = quantity + 10, price = price + 5.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (13, 'Product 13', 1013, 40, 90.00) ON DUPLICATE KEY UPDATE price = price - 10.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (14, 'Product 14', 1014, 20, 55.00) ON DUPLICATE KEY UPDATE supplier_id = 1015, quantity = quantity - 5, price = price - 5.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (15, 'Product 15', 1015, 25, 65.00) ON DUPLICATE KEY UPDATE price = price + 5.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (16, 'Product 16', 1016, 35, 75.00) ON DUPLICATE KEY UPDATE quantity = quantity - 10;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (17, 'Product 17', 1017, 30, 70.00) ON DUPLICATE KEY UPDATE supplier_id = 1018, quantity = quantity + 15;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (18, 'Product 18', 1018, 40, 85.00) ON DUPLICATE KEY UPDATE price = 80.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (19, 'Product 19', 1019, 15, 45.00) ON DUPLICATE KEY UPDATE supplier_id = 1020, quantity = quantity + 5, price = price * 1.1;",
  "### TABLEDATA\n\nCREATE TABLE inventory_data (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    quantity INT,\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO inventory_data (product_id, product_name, supplier_id, quantity, price) VALUES (20, 'Product 20', 1020, 50, 95.00) ON DUPLICATE KEY UPDATE price = price + 10.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (1, 'Item A', 10) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item A Updated', item_quantity = 15;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (2, 'Item B', 20) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item B Updated', item_quantity = 25;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (3, 'Item C', 30) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item C Updated', item_quantity = 35;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (4, 'Item D', 40) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item D Updated', item_quantity = 45;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (5, 'Item E', 50) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item E Updated', item_quantity = 55;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (6, 'Item F', 60) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item F Updated', item_quantity = 65;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (7, 'Item G', 70) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item G Updated', item_quantity = 75;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (8, 'Item H', 80) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item H Updated', item_quantity = 85;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (9, 'Item I', 90) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item I Updated', item_quantity = 95;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (10, 'Item J', 100) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item J Updated', item_quantity = 105;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (11, 'Item K', 110) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item K Updated', item_quantity = 115;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (12, 'Item L', 120) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item L Updated', item_quantity = 125;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (13, 'Item M', 130) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item M Updated', item_quantity = 135;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (14, 'Item N', 140) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item N Updated', item_quantity = 145;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (15, 'Item O', 150) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item O Updated', item_quantity = 155;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (16, 'Item P', 160) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item P Updated', item_quantity = 165;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (17, 'Item Q', 170) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item Q Updated', item_quantity = 175;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (18, 'Item R', 180) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item R Updated', item_quantity = 185;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (19, 'Item S', 190) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item S Updated', item_quantity = 195;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO inventory_items (item_id, item_name, item_quantity) VALUES (20, 'Item T', 200) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Item T Updated', item_quantity = 205",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_items (item_name, item_quantity) VALUES ('Item A', 10) ON CONFLICT (item_name) DO UPDATE SET item_quantity = inventory_items.item_quantity + excluded.item_quantity;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_items (item_name, item_quantity) VALUES ('Item B', 5) ON CONFLICT (item_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_logs (item_id, log_description, log_timestamp) VALUES (1, 'Item A added to inventory', '2022-01-01 10:00:00') ON CONFLICT (item_id, log_timestamp) DO UPDATE SET log_description = excluded.log_description;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_logs (item_id, log_description, log_timestamp) VALUES (2, 'Item B removed from inventory', '2022-01-02 15:00:00') ON CONFLICT (item_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_items (item_name, item_quantity) VALUES ('Item C', 15) ON CONFLICT (item_name) DO UPDATE SET item_quantity = inventory_items.item_quantity + excluded.item_quantity;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_logs (item_id, log_description, log_timestamp) VALUES (1, 'Item A quantity updated', '2022-01-03 08:00:00') ON CONFLICT (item_id, log_timestamp) DO UPDATE SET log_description = excluded.log_description;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_items (item_name, item_quantity) VALUES ('Item D', 20) ON CONFLICT (item_name) DO UPDATE SET item_quantity = inventory_items.item_quantity + excluded.item_quantity;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_logs (item_id, log_description, log_timestamp) VALUES (3, 'Item D added to inventory', '2022-01-04 12:00:00') ON CONFLICT (item_id) DO UPDATE SET log_description = excluded.log_description;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_items (item_name, item_quantity) VALUES ('Item E', 25) ON CONFLICT (item_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_logs (item_id, log_description, log_timestamp) VALUES (4, 'Item E added to inventory', '2022-01-05 14:00:00') ON CONFLICT (item_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_items (item_name, item_quantity) VALUES ('Item F', 30) ON CONFLICT (item_name) DO UPDATE SET item_quantity = inventory_items.item_quantity + excluded.item_quantity;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_logs (item_id, log_description, log_timestamp) VALUES (5, 'Item F added to inventory', '2022-01-06 17:00:00') ON CONFLICT (item_id, log_timestamp) DO UPDATE SET log_description = excluded.log_description;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_items (item_name, item_quantity) VALUES ('Item G', 35) ON CONFLICT (item_name) DO UPDATE SET item_quantity = inventory_items.item_quantity + excluded.item_quantity;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_logs (item_id, log_description, log_timestamp) VALUES (6, 'Item G added to inventory', '2022-01-07 20:00:00') ON CONFLICT (item_id) DO UPDATE SET log_description = excluded.log_description;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_items (item_name, item_quantity) VALUES ('Item H', 40) ON CONFLICT (item_name) DO UPDATE SET item_quantity = inventory_items.item_quantity + excluded.item_quantity;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_logs (item_id, log_description, log_timestamp) VALUES (7, 'Item H added to inventory', '2022-01-08 09:00:00') ON CONFLICT (item_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_items (item_name, item_quantity) VALUES ('Item I', 45) ON CONFLICT (item_name) DO UPDATE SET item_quantity = inventory_items.item_quantity + excluded.item_quantity;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_logs (item_id, log_description, log_timestamp) VALUES (8, 'Item I added to inventory', '2022-01-09 11:00:00') ON CONFLICT (item_id, log_timestamp) DO UPDATE SET log_description = excluded.log_description;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_items (item_name, item_quantity) VALUES ('Item J', 50) ON CONFLICT (item_name) DO UPDATE SET item_quantity = inventory_items.item_quantity + excluded.item_quantity;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_logs (item_id, log_description, log_timestamp) VALUES (9, 'Item J added to inventory', '2022-01-10 13:00:00') ON CONFLICT (item_id) DO UPDATE SET log_description = excluded.log_description;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_items (item_name, item_quantity) VALUES ('Item K', 55) ON CONFLICT (item_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE inventory_items (\n  item_id SERIAL PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  item_quantity INT NOT NULL\n);\n\n\nCREATE TABLE inventory_logs (\n  log_id SERIAL PRIMARY KEY,\n  item_id INT NOT NULL,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory_logs (item_id, log_description, log_timestamp) VALUES (10, 'Item K added to inventory', '2022-01-11 15:00:00') ON CONFLICT (item_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (1, 'Product A', 10.99, 100) ON DUPLICATE KEY UPDATE product_name='Product A', price=10.99, quantity=100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (2, 'Product B', 15.49, 50) ON DUPLICATE KEY UPDATE product_name='Product B', price=15.49, quantity=50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (3, 'Product C', 20.99, 75) ON DUPLICATE KEY UPDATE product_name='Product C', price=20.99, quantity=75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (4, 'Product D', 30.75, 120) ON DUPLICATE KEY UPDATE product_name='Product D', price=30.75, quantity=120;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (5, 'Product E', 12.25, 90) ON DUPLICATE KEY UPDATE product_name='Product E', price=12.25, quantity=90;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (6, 'Product F', 18.99, 60) ON DUPLICATE KEY UPDATE product_name='Product F', price=18.99, quantity=60;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (7, 'Product G', 25.49, 45) ON DUPLICATE KEY UPDATE product_name='Product G', price=25.49, quantity=45;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (8, 'Product H', 14.75, 85) ON DUPLICATE KEY UPDATE product_name='Product H', price=14.75, quantity=85;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (9, 'Product I', 22.99, 70) ON DUPLICATE KEY UPDATE product_name='Product I', price=22.99, quantity=70;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (10, 'Product J', 35.99, 110) ON DUPLICATE KEY UPDATE product_name='Product J', price=35.99, quantity=110;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (11, 'Product K', 16.99, 55) ON DUPLICATE KEY UPDATE product_name='Product K', price=16.99, quantity=55;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (12, 'Product L', 19.99, 65) ON DUPLICATE KEY UPDATE product_name='Product L', price=19.99, quantity=65;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (13, 'Product M', 28.75, 80) ON DUPLICATE KEY UPDATE product_name='Product M', price=28.75, quantity=80;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (14, 'Product N', 17.25, 95) ON DUPLICATE KEY UPDATE product_name='Product N', price=17.25, quantity=95;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (15, 'Product O', 24.99, 40) ON DUPLICATE KEY UPDATE product_name='Product O', price=24.99, quantity=40;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (16, 'Product P', 13.49, 125) ON DUPLICATE KEY UPDATE product_name='Product P', price=13.49, quantity=125;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (17, 'Product Q', 21.99, 90) ON DUPLICATE KEY UPDATE product_name='Product Q', price=21.99, quantity=90;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (18, 'Product R', 32.75, 55) ON DUPLICATE KEY UPDATE product_name='Product R', price=32.75, quantity=55;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (19, 'Product S', 23.25, 70) ON DUPLICATE KEY UPDATE product_name='Product S', price=23.25, quantity=70;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (20, 'Product T', 39.99, 100) ON DUPLICATE KEY UPDATE product_name='Product T', price=39.99, quantity=100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (1, 'Product 1', 10.99, 100) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 1', price = 10.99, quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (2, 'Product 2', 20.50, 200) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 2', price = 20.50, quantity = 200;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (1, 'Category 1') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Category 1';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (2, 'Category 2') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Category 2';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, product_id, category_id, quantity) VALUES (1, 1, 1, 50) ON CONFLICT (inventory_id) DO UPDATE SET product_id = 1, category_id = 1, quantity = 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, product_id, category_id, quantity) VALUES (2, 2, 2, 75) ON CONFLICT (inventory_id) DO UPDATE SET product_id = 2, category_id = 2, quantity = 75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (3, 'Product 3', 15.75, 150) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 3', price = 15.75, quantity = 150;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (4, 'Product 4', 30.25, 300) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 4', price = 30.25, quantity = 300;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (3, 'Category 3') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Category 3';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (4, 'Category 4') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Category 4';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, product_id, category_id, quantity) VALUES (3, 3, 3, 100) ON CONFLICT (inventory_id) DO UPDATE SET product_id = 3, category_id = 3, quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, product_id, category_id, quantity) VALUES (4, 4, 4, 200) ON CONFLICT (inventory_id) DO UPDATE SET product_id = 4, category_id = 4, quantity = 200;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (5, 'Product 5', 25.50, 250) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 5', price = 25.50, quantity = 250;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (6, 'Product 6', 12.99, 120) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 6', price = 12.99, quantity = 120;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (5, 'Category 5') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Category 5';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (6, 'Category 6') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Category 6';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, product_id, category_id, quantity) VALUES (5, 5, 5, 80) ON CONFLICT (inventory_id) DO UPDATE SET product_id = 5, category_id = 5, quantity = 80;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, product_id, category_id, quantity) VALUES (6, 6, 6, 150) ON CONFLICT (inventory_id) DO UPDATE SET product_id = 6, category_id = 6, quantity = 150;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (7, 'Product 7', 40.00, 400) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 7', price = 40.00, quantity = 400;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (8, 'Product 8', 18.50, 180) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 8', price = 18.50, quantity = 180;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10,2),\n    quantity INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    category_id INT,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (7, 'Category 7') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Category 7';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (id, product_name, quantity, price) VALUES (1, 'Product 1', 50, 20.00) ON DUPLICATE KEY UPDATE product_name='Product 1', quantity=50, price=20.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, product_id, quantity, status) VALUES (1, 101, 201, 2, 'Pending') ON DUPLICATE KEY UPDATE customer_id=101, product_id=201, quantity=2, status='Pending';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (101, 'John', 'Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE first_name='John', last_name='Doe', email='john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, category) VALUES (201, 'Product A', 30.00, 'Category A') ON DUPLICATE KEY UPDATE product_name='Product A', price=30.00, category='Category A';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (id, product_name, quantity, price) VALUES (2, 'Product 2', 30, 15.00) ON DUPLICATE KEY UPDATE product_name='Product 2', quantity=30, price=15.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, product_id, quantity, status) VALUES (2, 102, 202, 3, 'Shipped') ON DUPLICATE KEY UPDATE customer_id=102, product_id=202, quantity=3, status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (102, 'Jane', 'Smith', 'jane.smith@example.com') ON DUPLICATE KEY UPDATE first_name='Jane', last_name='Smith', email='jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, category) VALUES (202, 'Product B', 25.00, 'Category B') ON DUPLICATE KEY UPDATE product_name='Product B', price=25.00, category='Category B';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (id, product_name, quantity, price) VALUES (3, 'Product 3', 40, 12.50) ON DUPLICATE KEY UPDATE product_name='Product 3', quantity=40, price=12.50;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, product_id, quantity, status) VALUES (3, 103, 203, 1, 'Delivered') ON DUPLICATE KEY UPDATE customer_id=103, product_id=203, quantity=1, status='Delivered';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (103, 'Alice', 'Johnson', 'alice.johnson@example.com') ON DUPLICATE KEY UPDATE first_name='Alice', last_name='Johnson', email='alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, category) VALUES (203, 'Product C', 40.00, 'Category C') ON DUPLICATE KEY UPDATE product_name='Product C', price=40.00, category='Category C';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (id, product_name, quantity, price) VALUES (4, 'Product 4', 20, 18.75) ON DUPLICATE KEY UPDATE product_name='Product 4', quantity=20, price=18.75;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, product_id, quantity, status) VALUES (4, 104, 204, 4, 'Pending') ON DUPLICATE KEY UPDATE customer_id=104, product_id=204, quantity=4, status='Pending';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (104, 'Bob', 'Brown', 'bob.brown@example.com') ON DUPLICATE KEY UPDATE first_name='Bob', last_name='Brown', email='bob.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, category) VALUES (204, 'Product D', 22.50, 'Category D') ON DUPLICATE KEY UPDATE product_name='Product D', price=22.50, category='Category D';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (id, product_name, quantity, price) VALUES (5, 'Product 5', 35, 14.99) ON DUPLICATE KEY UPDATE product_name='Product 5', quantity=35, price=14.99;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, product_id, quantity, status) VALUES (5, 105, 205, 2, 'Shipped') ON DUPLICATE KEY UPDATE customer_id=105, product_id=205, quantity=2, status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (105, 'Sarah', 'Miller', 'sarah.miller@example.com') ON DUPLICATE KEY UPDATE first_name='Sarah', last_name='Miller', email='sarah.miller@example.com';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, category) VALUES (205, 'Product E', 28.75, 'Category E') ON DUPLICATE KEY UPDATE product_name='Product E', price=28.75, category='Category E';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (id, product_name, quantity, price) VALUES (1, 'Product A', 100, 50.00) ON DUPLICATE KEY UPDATE quantity = quantity + 10;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (id, product_name, quantity, price) VALUES (2, 'Product B', 200, 75.00) ON DUPLICATE KEY UPDATE quantity = quantity + 20;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (id, product_name, quantity, price) VALUES (3, 'Product C', 150, 65.00) ON DUPLICATE KEY UPDATE quantity = quantity + 15;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, product_id, quantity, status) VALUES (1, 101, 1, 5, 'Pending') ON DUPLICATE KEY UPDATE quantity = quantity + 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, product_id, quantity, status) VALUES (2, 102, 2, 10, 'Shipped') ON DUPLICATE KEY UPDATE quantity = quantity + 10;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, product_id, quantity, status) VALUES (3, 103, 3, 8, 'Delivered') ON DUPLICATE KEY UPDATE quantity = quantity + 8;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email) VALUES (101, 'John', 'Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE last_name = 'Smith';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email) VALUES (102, 'Jane', 'Smith', 'jane.smith@example.com') ON DUPLICATE KEY UPDATE first_name = 'Janet';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email) VALUES (103, 'Alice', 'Brown', 'alice.brown@example.com') ON DUPLICATE KEY UPDATE email = 'alice.brown@newdomain.com';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, category) VALUES (1, 'Product A', 50.00, 'Electronics') ON DUPLICATE KEY UPDATE category = 'Gadgets';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, category) VALUES (2, 'Product B', 75.00, 'Clothing') ON DUPLICATE KEY UPDATE price = 80.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, category) VALUES (3, 'Product C', 65.00, 'Home Decor') ON DUPLICATE KEY UPDATE price = price + 5.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (id, product_name, quantity, price) VALUES (4, 'Product D', 120, 95.00) ON DUPLICATE KEY UPDATE quantity = quantity + 12;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (id, product_name, quantity, price) VALUES (5, 'Product E', 80, 60.00) ON DUPLICATE KEY UPDATE quantity = quantity + 8;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (id, product_name, quantity, price) VALUES (6, 'Product F', 100, 70.00) ON DUPLICATE KEY UPDATE price = price - 5.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, product_id, quantity, status) VALUES (4, 104, 4, 15, 'Processing') ON DUPLICATE KEY UPDATE status = 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, product_id, quantity, status) VALUES (5, 105, 5, 20, 'Cancelled') ON DUPLICATE KEY UPDATE status = 'Returned';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, product_id, quantity, status) VALUES (6, 106, 6, 18, 'On Hold') ON DUPLICATE KEY UPDATE status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email) VALUES (104, 'Michael', 'Johnson', 'michael.johnson@example.com') ON DUPLICATE KEY UPDATE first_name = 'Mike';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email) VALUES (105, 'Sarah', 'Davis', 'sarah.davis@example.com') ON DUPLICATE KEY UPDATE email = 'sarah.davis@newdomain.com';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    status VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email) VALUES (106, 'Jack', 'Evans', 'jack.evans@example.com') ON DUPLICATE KEY UPDATE last_name = 'Thompson';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, price, quantity) VALUES (1, 'Laptop', 'Electronics', 999.99, 10) ON DUPLICATE KEY UPDATE product_name = 'Laptop', category = 'Electronics', price = 999.99, quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount, status) VALUES (1, 101, '2022-01-01', 199.99, 'Pending') ON DUPLICATE KEY UPDATE customer_id = 101, order_date = '2022-01-01', total_amount = 199.99, status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (101, 'John Doe', 'johndoe@example.com', '123-456-7890', '123 Main St, Anytown, USA') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'johndoe@example.com', phone_number = '123-456-7890', address = '123 Main St, Anytown, USA';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, email, phone_number, address) VALUES (201, 'ABC Suppliers', 'abc@example.com', '456-789-0123', '456 Oak St, Othertown, USA') ON DUPLICATE KEY UPDATE supplier_name = 'ABC Suppliers', email = 'abc@example.com', phone_number = '456-789-0123', address = '456 Oak St, Othertown, USA';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (warehouse_id, location, capacity, manager, contact_number) VALUES (301, 'Main Warehouse', 1000, 'Alice Smith', '789-012-3456') ON DUPLICATE KEY UPDATE location = 'Main Warehouse', capacity = 1000, manager = 'Alice Smith', contact_number = '789-012-3456';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, price, quantity) VALUES (2, 'Smartphone', 'Electronics', 499.99, 20) ON DUPLICATE KEY UPDATE product_name = 'Smartphone', category = 'Electronics', price = 499.99, quantity = 20;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount, status) VALUES (2, 102, '2022-01-02', 299.99, 'Shipped') ON DUPLICATE KEY UPDATE customer_id = 102, order_date = '2022-01-02', total_amount = 299.99, status = 'Shipped';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (102, 'Jane Smith', 'janesmith@example.com', '234-567-8901', '456 Elm St, Anycity, USA') ON DUPLICATE KEY UPDATE customer_name = 'Jane Smith', email = 'janesmith@example.com', phone_number = '234-567-8901', address = '456 Elm St, Anycity, USA';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, email, phone_number, address) VALUES (202, 'XYZ Suppliers', 'xyz@example.com', '789-012-3456', '789 Pine St, Anothercity, USA') ON DUPLICATE KEY UPDATE supplier_name = 'XYZ Suppliers', email = 'xyz@example.com', phone_number = '789-012-3456', address = '789 Pine St, Anothercity, USA';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (warehouse_id, location, capacity, manager, contact_number) VALUES (302, 'Backup Warehouse', 500, 'Bob Johnson', '012-345-6789') ON DUPLICATE KEY UPDATE location = 'Backup Warehouse', capacity = 500, manager = 'Bob Johnson', contact_number = '012-345-6789';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, price, quantity) VALUES (3, 'Tablet', 'Electronics', 299.99, 15) ON DUPLICATE KEY UPDATE product_name = 'Tablet', category = 'Electronics', price = 299.99, quantity = 15;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount, status) VALUES (3, 103, '2022-01-03', 99.99, 'Delivered') ON DUPLICATE KEY UPDATE customer_id = 103, order_date = '2022-01-03', total_amount = 99.99, status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (103, 'Alice Brown', 'alicebrown@example.com', '345-678-9012', '789 Maple St, Anotherplace, USA') ON DUPLICATE KEY UPDATE customer_name = 'Alice Brown', email = 'alicebrown@example.com', phone_number = '345-678-9012', address = '789 Maple St, Anotherplace, USA';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, email, phone_number, address) VALUES (203, 'PQR Suppliers', 'pqr@example.com', '012-345-6789', '901 Cedar St, Somewhere, USA') ON DUPLICATE KEY UPDATE supplier_name = 'PQR Suppliers', email = 'pqr@example.com', phone_number = '012-345-6789', address = '901 Cedar St, Somewhere, USA';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (warehouse_id, location, capacity, manager, contact_number) VALUES (303, 'Overflow Warehouse', 750, 'Carol Williams', '345-678-9012') ON DUPLICATE KEY UPDATE location = 'Overflow Warehouse', capacity = 750, manager = 'Carol Williams', contact_number = '345-678-9012';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, price, quantity) VALUES (4, 'Monitor', 'Electronics', 199.99, 25) ON DUPLICATE KEY UPDATE product_name = 'Monitor', category = 'Electronics', price = 199.99, quantity = 25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount, status) VALUES (4, 104, '2022-01-04', 149.99, 'Processing') ON DUPLICATE KEY UPDATE customer_id = 104, order_date = '2022-01-04', total_amount = 149.99, status = 'Processing';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (104, 'Sam Green', 'samgreen@example.com', '456-789-0123', '012 Oak St, Somecity, USA') ON DUPLICATE KEY UPDATE customer_name = 'Sam Green', email = 'samgreen@example.com', phone_number = '456-789-0123', address = '012 Oak St, Somecity, USA';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, email, phone_number, address) VALUES (204, 'MNO Suppliers', 'mno@example.com', '345-678-9012', '234 Cedar St, Nowhere, USA') ON DUPLICATE KEY UPDATE supplier_name = 'MNO Suppliers', email = 'mno@example.com', phone_number = '345-678-9012', address = '234 Cedar St, Nowhere, USA';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (warehouse_id, location, capacity, manager, contact_number) VALUES (304, 'Remote Warehouse', 300, 'David Lee', '567-890-1234') ON DUPLICATE KEY UPDATE location = 'Remote Warehouse', capacity = 300, manager = 'David Lee', contact_number = '567-890-1234';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, price, quantity) VALUES (1, 'Laptop', 'Electronics', 1200.00, 10) ON DUPLICATE KEY UPDATE product_name='Laptop', category='Electronics', price=1200.00, quantity=quantity+1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount, status) VALUES (1001, 101, '2022-01-15', 2500.00, 'Shipped') ON DUPLICATE KEY UPDATE customer_id=101, order_date='2022-01-15', total_amount=total_amount+2500.00, status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (101, 'John Doe', 'johndoe@example.com', '1234567890', '123 Main St, City') ON DUPLICATE KEY UPDATE customer_name='John Doe', email='johndoe@example.com', phone_number='1234567890', address='123 Main St, City';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, email, phone_number, address) VALUES (201, 'ABC Inc.', 'abc@example.com', '9876543210', '456 Market St, Town') ON DUPLICATE KEY UPDATE supplier_name='ABC Inc.', email='abc@example.com', phone_number='9876543210', address='456 Market St, Town';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (warehouse_id, location, capacity, manager, contact_number) VALUES (301, 'Downtown', 1000, 'Alice Smith', '555-123-4567') ON DUPLICATE KEY UPDATE location='Downtown', capacity=1000, manager='Alice Smith', contact_number='555-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, price, quantity) VALUES (2, 'Smartphone', 'Electronics', 800.00, 15) ON DUPLICATE KEY UPDATE product_name='Smartphone', category='Electronics', price=800.00, quantity=quantity+1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount, status) VALUES (1002, 102, '2022-02-20', 1800.00, 'Pending') ON DUPLICATE KEY UPDATE customer_id=102, order_date='2022-02-20', total_amount=total_amount+1800.00, status='Pending';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (102, 'Jane Smith', 'janesmith@example.com', '0987654321', '456 Broadway, Village') ON DUPLICATE KEY UPDATE customer_name='Jane Smith', email='janesmith@example.com', phone_number='0987654321', address='456 Broadway, Village';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, email, phone_number, address) VALUES (202, 'XYZ Co.', 'xyz@example.com', '7654321098', '789 Park Ave, County') ON DUPLICATE KEY UPDATE supplier_name='XYZ Co.', email='xyz@example.com', phone_number='7654321098', address='789 Park Ave, County';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (warehouse_id, location, capacity, manager, contact_number) VALUES (302, 'Uptown', 800, 'Bob Johnson', '555-987-6543') ON DUPLICATE KEY UPDATE location='Uptown', capacity=800, manager='Bob Johnson', contact_number='555-987-6543';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, price, quantity) VALUES (3, 'Headphones', 'Electronics', 50.00, 20) ON DUPLICATE KEY UPDATE product_name='Headphones', category='Electronics', price=50.00, quantity=quantity+1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount, status) VALUES (1003, 103, '2022-03-25', 500.00, 'Delivered') ON DUPLICATE KEY UPDATE customer_id=103, order_date='2022-03-25', total_amount=total_amount+500.00, status='Delivered';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (103, 'Mike Brown', 'mikebrown@example.com', '8765432109', '789 Hillside Dr, Town') ON DUPLICATE KEY UPDATE customer_name='Mike Brown', email='mikebrown@example.com', phone_number='8765432109', address='789 Hillside Dr, Town';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, email, phone_number, address) VALUES (203, 'PQR Ltd.', 'pqr@example.com', '6543210987', '321 Elm St, Village') ON DUPLICATE KEY UPDATE supplier_name='PQR Ltd.', email='pqr@example.com', phone_number='6543210987', address='321 Elm St, Village';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (warehouse_id, location, capacity, manager, contact_number) VALUES (303, 'Suburbia', 1200, 'Sarah Williams', '555-234-5678') ON DUPLICATE KEY UPDATE location='Suburbia', capacity=1200, manager='Sarah Williams', contact_number='555-234-5678';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, price, quantity) VALUES (4, 'Mouse', 'Electronics', 10.00, 30) ON DUPLICATE KEY UPDATE product_name='Mouse', category='Electronics', price=10.00, quantity=quantity+1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount, status) VALUES (1004, 104, '2022-04-30', 350.00, 'Cancelled') ON DUPLICATE KEY UPDATE customer_id=104, order_date='2022-04-30', total_amount=total_amount+350.00, status='Cancelled';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (104, 'Emily Green', 'emilygreen@example.com', '7654321098', '123 Pine St, City') ON DUPLICATE KEY UPDATE customer_name='Emily Green', email='emilygreen@example.com', phone_number='7654321098', address='123 Pine St, City';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, email, phone_number, address) VALUES (204, 'RST Corp.', 'rst@example.com', '5432109876', '987 Oak St, County') ON DUPLICATE KEY UPDATE supplier_name='RST Corp.', email='rst@example.com', phone_number='5432109876', address='987 Oak St, County';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15),\n    address TEXT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT,\n    manager VARCHAR(255),\n    contact_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (warehouse_id, location, capacity, manager, contact_number) VALUES (304, 'Industrial Park', 1500, 'Tom Davis', '555-876-5432') ON DUPLICATE KEY UPDATE location='Industrial Park', capacity=1500, manager='Tom Davis', contact_number='555-876-5432';"
]