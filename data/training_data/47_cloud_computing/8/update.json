[
  "### TABLEDATA\n\nCREATE TABLE cloud_data_replication (\n    id INT PRIMARY KEY,\n    region_name VARCHAR(50),\n    data_center VARCHAR(50),\n    last_sync TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE cloud_data_replication SET region_name = 'US-West' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_data_replication (\n    id INT PRIMARY KEY,\n    region_name VARCHAR(50),\n    data_center VARCHAR(50),\n    last_sync TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE cloud_data_replication SET data_center = 'Azure' WHERE region_name = 'US-West';",
  "### TABLEDATA\n\nCREATE TABLE cloud_data_replication (\n    id INT PRIMARY KEY,\n    region_name VARCHAR(50),\n    data_center VARCHAR(50),\n    last_sync TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE cloud_data_replication SET last_sync = NOW() WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE cloud_data_replication (\n    id INT PRIMARY KEY,\n    region_name VARCHAR(50),\n    data_center VARCHAR(50),\n    last_sync TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE cloud_data_replication SET region_name='Region A', last_sync=NOW() WHERE id=1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_data_replication (\n    id INT PRIMARY KEY,\n    region_name VARCHAR(50),\n    data_center VARCHAR(50),\n    last_sync TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE cloud_data_replication SET data_center='Data Center B', last_sync=NOW() WHERE region_name='Region B';",
  "### TABLEDATA\n\nCREATE TABLE cloud_data_replication (\n    id INT PRIMARY KEY,\n    region_name VARCHAR(50),\n    data_center VARCHAR(50),\n    last_sync TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE cloud_data_replication SET data_center='Data Center C', last_sync=NOW() WHERE region_name='Region C' AND last_sync < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE data_replication (\n    id INT PRIMARY KEY,\n    region VARCHAR(50),\n    data_center VARCHAR(50),\n    replicated_data TEXT\n);\n\nCREATE TABLE replication_status (\n    id INT PRIMARY KEY,\n    replication_id INT,\n    status VARCHAR(20),\n    last_sync TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE data_replication SET region = 'Europe' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE data_replication (\n    id INT PRIMARY KEY,\n    region VARCHAR(50),\n    data_center VARCHAR(50),\n    replicated_data TEXT\n);\n\nCREATE TABLE replication_status (\n    id INT PRIMARY KEY,\n    replication_id INT,\n    status VARCHAR(20),\n    last_sync TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE data_replication SET data_center = 'DC1' WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE data_replication (\n    id INT PRIMARY KEY,\n    region VARCHAR(50),\n    data_center VARCHAR(50),\n    replicated_data TEXT\n);\n\nCREATE TABLE replication_status (\n    id INT PRIMARY KEY,\n    replication_id INT,\n    status VARCHAR(20),\n    last_sync TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE replication_status SET status = 'Completed' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE data_replication (\n    id INT PRIMARY KEY,\n    region VARCHAR(50),\n    data_center VARCHAR(50),\n    replicated_data TEXT\n);\n\nCREATE TABLE replication_status (\n    id INT PRIMARY KEY,\n    replication_id INT,\n    status VARCHAR(20),\n    last_sync TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE data_replication SET region='Europe' WHERE id=1;",
  "### TABLEDATA\n\nCREATE TABLE data_replication (\n    id INT PRIMARY KEY,\n    region VARCHAR(50),\n    data_center VARCHAR(50),\n    replicated_data TEXT\n);\n\nCREATE TABLE replication_status (\n    id INT PRIMARY KEY,\n    replication_id INT,\n    status VARCHAR(20),\n    last_sync TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE data_replication SET replicated_data='Sample data' WHERE id=2;",
  "### TABLEDATA\n\nCREATE TABLE data_replication (\n    id INT PRIMARY KEY,\n    region VARCHAR(50),\n    data_center VARCHAR(50),\n    replicated_data TEXT\n);\n\nCREATE TABLE replication_status (\n    id INT PRIMARY KEY,\n    replication_id INT,\n    status VARCHAR(20),\n    last_sync TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE replication_status SET status='Completed', last_sync='2021-10-15 12:00:00' WHERE replication_id=2;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n  region_id INT PRIMARY KEY,\n  region_name VARCHAR(255) NOT NULL,\n  data_center VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE data_replication (\n  replication_id INT PRIMARY KEY,\n  replication_type VARCHAR(50) NOT NULL,\n  replication_frequency INT NOT NULL,\n  region_id INT NOT NULL,\n  FOREIGN KEY (region_id) REFERENCES cloud_regions(region_id)\n);\n\nCREATE TABLE disaster_recovery (\n  recovery_id INT PRIMARY KEY,\n  recovery_plan TEXT NOT NULL,\n  replication_id INT NOT NULL,\n  FOREIGN KEY (replication_id) REFERENCES data_replication(replication_id)\n);\n\n### STATEMENT\n\nUPDATE cloud_regions SET data_center = 'New Data Center' WHERE region_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n  region_id INT PRIMARY KEY,\n  region_name VARCHAR(255) NOT NULL,\n  data_center VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE data_replication (\n  replication_id INT PRIMARY KEY,\n  replication_type VARCHAR(50) NOT NULL,\n  replication_frequency INT NOT NULL,\n  region_id INT NOT NULL,\n  FOREIGN KEY (region_id) REFERENCES cloud_regions(region_id)\n);\n\nCREATE TABLE disaster_recovery (\n  recovery_id INT PRIMARY KEY,\n  recovery_plan TEXT NOT NULL,\n  replication_id INT NOT NULL,\n  FOREIGN KEY (replication_id) REFERENCES data_replication(replication_id)\n);\n\n### STATEMENT\n\nUPDATE data_replication SET replication_frequency = 24 WHERE replication_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n  region_id INT PRIMARY KEY,\n  region_name VARCHAR(255) NOT NULL,\n  data_center VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE data_replication (\n  replication_id INT PRIMARY KEY,\n  replication_type VARCHAR(50) NOT NULL,\n  replication_frequency INT NOT NULL,\n  region_id INT NOT NULL,\n  FOREIGN KEY (region_id) REFERENCES cloud_regions(region_id)\n);\n\nCREATE TABLE disaster_recovery (\n  recovery_id INT PRIMARY KEY,\n  recovery_plan TEXT NOT NULL,\n  replication_id INT NOT NULL,\n  FOREIGN KEY (replication_id) REFERENCES data_replication(replication_id)\n);\n\n### STATEMENT\n\nUPDATE disaster_recovery SET recovery_plan = 'Updated Recovery Plan' WHERE recovery_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n  region_id INT PRIMARY KEY,\n  region_name VARCHAR(255) NOT NULL,\n  data_center VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE data_replication (\n  replication_id INT PRIMARY KEY,\n  replication_type VARCHAR(50) NOT NULL,\n  replication_frequency INT NOT NULL,\n  region_id INT NOT NULL,\n  FOREIGN KEY (region_id) REFERENCES cloud_regions(region_id)\n);\n\nCREATE TABLE disaster_recovery (\n  recovery_id INT PRIMARY KEY,\n  recovery_plan TEXT NOT NULL,\n  replication_id INT NOT NULL,\n  FOREIGN KEY (replication_id) REFERENCES data_replication(replication_id)\n);\n\n### STATEMENT\n\nUPDATE cloud_regions SET data_center = 'US West' WHERE region_name = 'West Coast';",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n  region_id INT PRIMARY KEY,\n  region_name VARCHAR(255) NOT NULL,\n  data_center VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE data_replication (\n  replication_id INT PRIMARY KEY,\n  replication_type VARCHAR(50) NOT NULL,\n  replication_frequency INT NOT NULL,\n  region_id INT NOT NULL,\n  FOREIGN KEY (region_id) REFERENCES cloud_regions(region_id)\n);\n\nCREATE TABLE disaster_recovery (\n  recovery_id INT PRIMARY KEY,\n  recovery_plan TEXT NOT NULL,\n  replication_id INT NOT NULL,\n  FOREIGN KEY (replication_id) REFERENCES data_replication(replication_id)\n);\n\n### STATEMENT\n\nUPDATE data_replication SET replication_frequency = 6 WHERE replication_type = 'real-time';",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n  region_id INT PRIMARY KEY,\n  region_name VARCHAR(255) NOT NULL,\n  data_center VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE data_replication (\n  replication_id INT PRIMARY KEY,\n  replication_type VARCHAR(50) NOT NULL,\n  replication_frequency INT NOT NULL,\n  region_id INT NOT NULL,\n  FOREIGN KEY (region_id) REFERENCES cloud_regions(region_id)\n);\n\nCREATE TABLE disaster_recovery (\n  recovery_id INT PRIMARY KEY,\n  recovery_plan TEXT NOT NULL,\n  replication_id INT NOT NULL,\n  FOREIGN KEY (replication_id) REFERENCES data_replication(replication_id)\n);\n\n### STATEMENT\n\nUPDATE disaster_recovery SET recovery_plan = 'Activate DR' WHERE recovery_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE synchronization_config (\n    id SERIAL PRIMARY KEY,\n    region VARCHAR(50) NOT NULL,\n    data_center VARCHAR(50) NOT NULL,\n    replication_method VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE region_data (\n    id SERIAL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_replication_factor INT NOT NULL,\n    data_sync_delay INT\n);\n\nCREATE TABLE cloud_data_center (\n    id SERIAL PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    data_center_location VARCHAR(100) NOT NULL,\n    region_id INT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region_data(id)\n);\n\nCREATE TABLE data_replication_logs (\n    log_id SERIAL PRIMARY KEY,\n    operation_type VARCHAR(50) NOT NULL,\n    operation_time TIMESTAMP NOT NULL,\n    data_center_id INT NOT NULL,\n    FOREIGN KEY (data_center_id) REFERENCES cloud_data_center(id)\n);\n\n### STATEMENT\n\nUPDATE synchronization_config SET replication_method = 'FULL' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE synchronization_config (\n    id SERIAL PRIMARY KEY,\n    region VARCHAR(50) NOT NULL,\n    data_center VARCHAR(50) NOT NULL,\n    replication_method VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE region_data (\n    id SERIAL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_replication_factor INT NOT NULL,\n    data_sync_delay INT\n);\n\nCREATE TABLE cloud_data_center (\n    id SERIAL PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    data_center_location VARCHAR(100) NOT NULL,\n    region_id INT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region_data(id)\n);\n\nCREATE TABLE data_replication_logs (\n    log_id SERIAL PRIMARY KEY,\n    operation_type VARCHAR(50) NOT NULL,\n    operation_time TIMESTAMP NOT NULL,\n    data_center_id INT NOT NULL,\n    FOREIGN KEY (data_center_id) REFERENCES cloud_data_center(id)\n);\n\n### STATEMENT\n\nUPDATE region_data SET data_sync_delay = 30 WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE synchronization_config (\n    id SERIAL PRIMARY KEY,\n    region VARCHAR(50) NOT NULL,\n    data_center VARCHAR(50) NOT NULL,\n    replication_method VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE region_data (\n    id SERIAL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_replication_factor INT NOT NULL,\n    data_sync_delay INT\n);\n\nCREATE TABLE cloud_data_center (\n    id SERIAL PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    data_center_location VARCHAR(100) NOT NULL,\n    region_id INT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region_data(id)\n);\n\nCREATE TABLE data_replication_logs (\n    log_id SERIAL PRIMARY KEY,\n    operation_type VARCHAR(50) NOT NULL,\n    operation_time TIMESTAMP NOT NULL,\n    data_center_id INT NOT NULL,\n    FOREIGN KEY (data_center_id) REFERENCES cloud_data_center(id)\n);\n\n### STATEMENT\n\nUPDATE cloud_data_center SET data_center_location = 'New Location' WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE synchronization_config (\n    id SERIAL PRIMARY KEY,\n    region VARCHAR(50) NOT NULL,\n    data_center VARCHAR(50) NOT NULL,\n    replication_method VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE region_data (\n    id SERIAL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_replication_factor INT NOT NULL,\n    data_sync_delay INT\n);\n\nCREATE TABLE cloud_data_center (\n    id SERIAL PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    data_center_location VARCHAR(100) NOT NULL,\n    region_id INT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region_data(id)\n);\n\nCREATE TABLE data_replication_logs (\n    log_id SERIAL PRIMARY KEY,\n    operation_type VARCHAR(50) NOT NULL,\n    operation_time TIMESTAMP NOT NULL,\n    data_center_id INT NOT NULL,\n    FOREIGN KEY (data_center_id) REFERENCES cloud_data_center(id)\n);\n\n### STATEMENT\n\nUPDATE synchronization_config SET replication_method='Async' WHERE region='US' AND data_center='East'",
  "### TABLEDATA\n\nCREATE TABLE synchronization_config (\n    id SERIAL PRIMARY KEY,\n    region VARCHAR(50) NOT NULL,\n    data_center VARCHAR(50) NOT NULL,\n    replication_method VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE region_data (\n    id SERIAL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_replication_factor INT NOT NULL,\n    data_sync_delay INT\n);\n\nCREATE TABLE cloud_data_center (\n    id SERIAL PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    data_center_location VARCHAR(100) NOT NULL,\n    region_id INT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region_data(id)\n);\n\nCREATE TABLE data_replication_logs (\n    log_id SERIAL PRIMARY KEY,\n    operation_type VARCHAR(50) NOT NULL,\n    operation_time TIMESTAMP NOT NULL,\n    data_center_id INT NOT NULL,\n    FOREIGN KEY (data_center_id) REFERENCES cloud_data_center(id)\n);\n\n### STATEMENT\n\nUPDATE cloud_data_center SET data_center_location='New York' WHERE data_center_name='East DC'",
  "### TABLEDATA\n\nCREATE TABLE synchronization_config (\n    id SERIAL PRIMARY KEY,\n    region VARCHAR(50) NOT NULL,\n    data_center VARCHAR(50) NOT NULL,\n    replication_method VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE region_data (\n    id SERIAL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_replication_factor INT NOT NULL,\n    data_sync_delay INT\n);\n\nCREATE TABLE cloud_data_center (\n    id SERIAL PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    data_center_location VARCHAR(100) NOT NULL,\n    region_id INT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region_data(id)\n);\n\nCREATE TABLE data_replication_logs (\n    log_id SERIAL PRIMARY KEY,\n    operation_type VARCHAR(50) NOT NULL,\n    operation_time TIMESTAMP NOT NULL,\n    data_center_id INT NOT NULL,\n    FOREIGN KEY (data_center_id) REFERENCES cloud_data_center(id)\n);\n\n### STATEMENT\n\nUPDATE region_data SET data_sync_delay=30 WHERE region_name='US West'",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n    region_id INT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_center_count INT NOT NULL\n);\n\nCREATE TABLE data_centers (\n    data_center_id INT PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    region_id INT REFERENCES cloud_regions(region_id) ON DELETE CASCADE\n);\n\nCREATE TABLE data_replication (\n    replication_id INT PRIMARY KEY,\n    data_replication_name VARCHAR(50) NOT NULL,\n    data_center_id INT REFERENCES data_centers(data_center_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_jobs (\n    job_id INT PRIMARY KEY,\n    job_name VARCHAR(50) NOT NULL,\n    replication_id INT REFERENCES data_replication(replication_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_logs (\n    log_id INT PRIMARY KEY,\n    log_message TEXT NOT NULL,\n    job_id INT REFERENCES replication_jobs(job_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nUPDATE cloud_regions SET data_center_count = 10 WHERE region_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n    region_id INT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_center_count INT NOT NULL\n);\n\nCREATE TABLE data_centers (\n    data_center_id INT PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    region_id INT REFERENCES cloud_regions(region_id) ON DELETE CASCADE\n);\n\nCREATE TABLE data_replication (\n    replication_id INT PRIMARY KEY,\n    data_replication_name VARCHAR(50) NOT NULL,\n    data_center_id INT REFERENCES data_centers(data_center_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_jobs (\n    job_id INT PRIMARY KEY,\n    job_name VARCHAR(50) NOT NULL,\n    replication_id INT REFERENCES data_replication(replication_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_logs (\n    log_id INT PRIMARY KEY,\n    log_message TEXT NOT NULL,\n    job_id INT REFERENCES replication_jobs(job_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nUPDATE data_centers SET data_center_name = 'New Data Center' WHERE data_center_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n    region_id INT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_center_count INT NOT NULL\n);\n\nCREATE TABLE data_centers (\n    data_center_id INT PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    region_id INT REFERENCES cloud_regions(region_id) ON DELETE CASCADE\n);\n\nCREATE TABLE data_replication (\n    replication_id INT PRIMARY KEY,\n    data_replication_name VARCHAR(50) NOT NULL,\n    data_center_id INT REFERENCES data_centers(data_center_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_jobs (\n    job_id INT PRIMARY KEY,\n    job_name VARCHAR(50) NOT NULL,\n    replication_id INT REFERENCES data_replication(replication_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_logs (\n    log_id INT PRIMARY KEY,\n    log_message TEXT NOT NULL,\n    job_id INT REFERENCES replication_jobs(job_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nUPDATE data_replication SET data_replication_name = 'Updated Replication' WHERE replication_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n    region_id INT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_center_count INT NOT NULL\n);\n\nCREATE TABLE data_centers (\n    data_center_id INT PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    region_id INT REFERENCES cloud_regions(region_id) ON DELETE CASCADE\n);\n\nCREATE TABLE data_replication (\n    replication_id INT PRIMARY KEY,\n    data_replication_name VARCHAR(50) NOT NULL,\n    data_center_id INT REFERENCES data_centers(data_center_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_jobs (\n    job_id INT PRIMARY KEY,\n    job_name VARCHAR(50) NOT NULL,\n    replication_id INT REFERENCES data_replication(replication_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_logs (\n    log_id INT PRIMARY KEY,\n    log_message TEXT NOT NULL,\n    job_id INT REFERENCES replication_jobs(job_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nUPDATE cloud_regions SET data_center_count = data_center_count + 1 WHERE region_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n    region_id INT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_center_count INT NOT NULL\n);\n\nCREATE TABLE data_centers (\n    data_center_id INT PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    region_id INT REFERENCES cloud_regions(region_id) ON DELETE CASCADE\n);\n\nCREATE TABLE data_replication (\n    replication_id INT PRIMARY KEY,\n    data_replication_name VARCHAR(50) NOT NULL,\n    data_center_id INT REFERENCES data_centers(data_center_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_jobs (\n    job_id INT PRIMARY KEY,\n    job_name VARCHAR(50) NOT NULL,\n    replication_id INT REFERENCES data_replication(replication_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_logs (\n    log_id INT PRIMARY KEY,\n    log_message TEXT NOT NULL,\n    job_id INT REFERENCES replication_jobs(job_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nUPDATE data_centers SET region_id = 2 WHERE data_center_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n    region_id INT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_center_count INT NOT NULL\n);\n\nCREATE TABLE data_centers (\n    data_center_id INT PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    region_id INT REFERENCES cloud_regions(region_id) ON DELETE CASCADE\n);\n\nCREATE TABLE data_replication (\n    replication_id INT PRIMARY KEY,\n    data_replication_name VARCHAR(50) NOT NULL,\n    data_center_id INT REFERENCES data_centers(data_center_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_jobs (\n    job_id INT PRIMARY KEY,\n    job_name VARCHAR(50) NOT NULL,\n    replication_id INT REFERENCES data_replication(replication_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_logs (\n    log_id INT PRIMARY KEY,\n    log_message TEXT NOT NULL,\n    job_id INT REFERENCES replication_jobs(job_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nUPDATE replication_jobs SET job_name = 'New Job' WHERE job_id = 5;"
]