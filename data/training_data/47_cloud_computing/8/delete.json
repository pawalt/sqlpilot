[
  "### TABLEDATA\n\nCREATE TABLE cloud_data_replication (\n    id INT PRIMARY KEY,\n    region_name VARCHAR(50),\n    data_center VARCHAR(50),\n    last_sync TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM cloud_data_replication WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_data_replication (\n    id INT PRIMARY KEY,\n    region_name VARCHAR(50),\n    data_center VARCHAR(50),\n    last_sync TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM cloud_data_replication WHERE region_name = 'us-east' AND data_center = 'DC1';",
  "### TABLEDATA\n\nCREATE TABLE cloud_data_replication (\n    id INT PRIMARY KEY,\n    region_name VARCHAR(50),\n    data_center VARCHAR(50),\n    last_sync TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM cloud_data_replication WHERE last_sync < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE cloud_data_replication (\n    id INT PRIMARY KEY,\n    region_name VARCHAR(50),\n    data_center VARCHAR(50),\n    last_sync TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM cloud_data_replication WHERE last_sync < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE cloud_data_replication (\n    id INT PRIMARY KEY,\n    region_name VARCHAR(50),\n    data_center VARCHAR(50),\n    last_sync TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM cloud_data_replication WHERE region_name = 'US' AND data_center = 'East';",
  "### TABLEDATA\n\nCREATE TABLE cloud_data_replication (\n    id INT PRIMARY KEY,\n    region_name VARCHAR(50),\n    data_center VARCHAR(50),\n    last_sync TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM cloud_data_replication WHERE id IN (SELECT id FROM cloud_data_replication WHERE last_sync < '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE data_replication (\n    id INT PRIMARY KEY,\n    region VARCHAR(50),\n    data_center VARCHAR(50),\n    replicated_data TEXT\n);\n\nCREATE TABLE replication_status (\n    id INT PRIMARY KEY,\n    replication_id INT,\n    status VARCHAR(20),\n    last_sync TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM data_replication WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE data_replication (\n    id INT PRIMARY KEY,\n    region VARCHAR(50),\n    data_center VARCHAR(50),\n    replicated_data TEXT\n);\n\nCREATE TABLE replication_status (\n    id INT PRIMARY KEY,\n    replication_id INT,\n    status VARCHAR(20),\n    last_sync TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM replication_status WHERE replication_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE data_replication (\n    id INT PRIMARY KEY,\n    region VARCHAR(50),\n    data_center VARCHAR(50),\n    replicated_data TEXT\n);\n\nCREATE TABLE replication_status (\n    id INT PRIMARY KEY,\n    replication_id INT,\n    status VARCHAR(20),\n    last_sync TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM data_replication WHERE region = 'EU';",
  "### TABLEDATA\n\nCREATE TABLE data_replication (\n    id INT PRIMARY KEY,\n    region VARCHAR(50),\n    data_center VARCHAR(50),\n    replicated_data TEXT\n);\n\nCREATE TABLE replication_status (\n    id INT PRIMARY KEY,\n    replication_id INT,\n    status VARCHAR(20),\n    last_sync TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM data_replication WHERE region = 'US' AND data_center = 'NYC';",
  "### TABLEDATA\n\nCREATE TABLE data_replication (\n    id INT PRIMARY KEY,\n    region VARCHAR(50),\n    data_center VARCHAR(50),\n    replicated_data TEXT\n);\n\nCREATE TABLE replication_status (\n    id INT PRIMARY KEY,\n    replication_id INT,\n    status VARCHAR(20),\n    last_sync TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM replication_status WHERE status = 'error';",
  "### TABLEDATA\n\nCREATE TABLE data_replication (\n    id INT PRIMARY KEY,\n    region VARCHAR(50),\n    data_center VARCHAR(50),\n    replicated_data TEXT\n);\n\nCREATE TABLE replication_status (\n    id INT PRIMARY KEY,\n    replication_id INT,\n    status VARCHAR(20),\n    last_sync TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM data_replication WHERE id IN (SELECT replication_id FROM replication_status WHERE status = 'stopped');",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n  region_id INT PRIMARY KEY,\n  region_name VARCHAR(255) NOT NULL,\n  data_center VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE data_replication (\n  replication_id INT PRIMARY KEY,\n  replication_type VARCHAR(50) NOT NULL,\n  replication_frequency INT NOT NULL,\n  region_id INT NOT NULL,\n  FOREIGN KEY (region_id) REFERENCES cloud_regions(region_id)\n);\n\nCREATE TABLE disaster_recovery (\n  recovery_id INT PRIMARY KEY,\n  recovery_plan TEXT NOT NULL,\n  replication_id INT NOT NULL,\n  FOREIGN KEY (replication_id) REFERENCES data_replication(replication_id)\n);\n\n### STATEMENT\n\nDELETE FROM disaster_recovery WHERE recovery_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n  region_id INT PRIMARY KEY,\n  region_name VARCHAR(255) NOT NULL,\n  data_center VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE data_replication (\n  replication_id INT PRIMARY KEY,\n  replication_type VARCHAR(50) NOT NULL,\n  replication_frequency INT NOT NULL,\n  region_id INT NOT NULL,\n  FOREIGN KEY (region_id) REFERENCES cloud_regions(region_id)\n);\n\nCREATE TABLE disaster_recovery (\n  recovery_id INT PRIMARY KEY,\n  recovery_plan TEXT NOT NULL,\n  replication_id INT NOT NULL,\n  FOREIGN KEY (replication_id) REFERENCES data_replication(replication_id)\n);\n\n### STATEMENT\n\nDELETE FROM cloud_regions WHERE region_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n  region_id INT PRIMARY KEY,\n  region_name VARCHAR(255) NOT NULL,\n  data_center VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE data_replication (\n  replication_id INT PRIMARY KEY,\n  replication_type VARCHAR(50) NOT NULL,\n  replication_frequency INT NOT NULL,\n  region_id INT NOT NULL,\n  FOREIGN KEY (region_id) REFERENCES cloud_regions(region_id)\n);\n\nCREATE TABLE disaster_recovery (\n  recovery_id INT PRIMARY KEY,\n  recovery_plan TEXT NOT NULL,\n  replication_id INT NOT NULL,\n  FOREIGN KEY (replication_id) REFERENCES data_replication(replication_id)\n);\n\n### STATEMENT\n\nDELETE FROM data_replication WHERE replication_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n  region_id INT PRIMARY KEY,\n  region_name VARCHAR(255) NOT NULL,\n  data_center VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE data_replication (\n  replication_id INT PRIMARY KEY,\n  replication_type VARCHAR(50) NOT NULL,\n  replication_frequency INT NOT NULL,\n  region_id INT NOT NULL,\n  FOREIGN KEY (region_id) REFERENCES cloud_regions(region_id)\n);\n\nCREATE TABLE disaster_recovery (\n  recovery_id INT PRIMARY KEY,\n  recovery_plan TEXT NOT NULL,\n  replication_id INT NOT NULL,\n  FOREIGN KEY (replication_id) REFERENCES data_replication(replication_id)\n);\n\n### STATEMENT\n\nDELETE FROM disaster_recovery WHERE recovery_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n  region_id INT PRIMARY KEY,\n  region_name VARCHAR(255) NOT NULL,\n  data_center VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE data_replication (\n  replication_id INT PRIMARY KEY,\n  replication_type VARCHAR(50) NOT NULL,\n  replication_frequency INT NOT NULL,\n  region_id INT NOT NULL,\n  FOREIGN KEY (region_id) REFERENCES cloud_regions(region_id)\n);\n\nCREATE TABLE disaster_recovery (\n  recovery_id INT PRIMARY KEY,\n  recovery_plan TEXT NOT NULL,\n  replication_id INT NOT NULL,\n  FOREIGN KEY (replication_id) REFERENCES data_replication(replication_id)\n);\n\n### STATEMENT\n\nDELETE FROM data_replication WHERE region_id = 3 AND replication_frequency > 5;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n  region_id INT PRIMARY KEY,\n  region_name VARCHAR(255) NOT NULL,\n  data_center VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE data_replication (\n  replication_id INT PRIMARY KEY,\n  replication_type VARCHAR(50) NOT NULL,\n  replication_frequency INT NOT NULL,\n  region_id INT NOT NULL,\n  FOREIGN KEY (region_id) REFERENCES cloud_regions(region_id)\n);\n\nCREATE TABLE disaster_recovery (\n  recovery_id INT PRIMARY KEY,\n  recovery_plan TEXT NOT NULL,\n  replication_id INT NOT NULL,\n  FOREIGN KEY (replication_id) REFERENCES data_replication(replication_id)\n);\n\n### STATEMENT\n\nDELETE FROM cloud_regions WHERE region_name = 'US East' AND data_center = 'Virginia';",
  "### TABLEDATA\n\nCREATE TABLE synchronization_config (\n    id SERIAL PRIMARY KEY,\n    region VARCHAR(50) NOT NULL,\n    data_center VARCHAR(50) NOT NULL,\n    replication_method VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE region_data (\n    id SERIAL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_replication_factor INT NOT NULL,\n    data_sync_delay INT\n);\n\nCREATE TABLE cloud_data_center (\n    id SERIAL PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    data_center_location VARCHAR(100) NOT NULL,\n    region_id INT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region_data(id)\n);\n\nCREATE TABLE data_replication_logs (\n    log_id SERIAL PRIMARY KEY,\n    operation_type VARCHAR(50) NOT NULL,\n    operation_time TIMESTAMP NOT NULL,\n    data_center_id INT NOT NULL,\n    FOREIGN KEY (data_center_id) REFERENCES cloud_data_center(id)\n);\n\n### STATEMENT\n\nDELETE FROM synchronization_config WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE synchronization_config (\n    id SERIAL PRIMARY KEY,\n    region VARCHAR(50) NOT NULL,\n    data_center VARCHAR(50) NOT NULL,\n    replication_method VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE region_data (\n    id SERIAL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_replication_factor INT NOT NULL,\n    data_sync_delay INT\n);\n\nCREATE TABLE cloud_data_center (\n    id SERIAL PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    data_center_location VARCHAR(100) NOT NULL,\n    region_id INT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region_data(id)\n);\n\nCREATE TABLE data_replication_logs (\n    log_id SERIAL PRIMARY KEY,\n    operation_type VARCHAR(50) NOT NULL,\n    operation_time TIMESTAMP NOT NULL,\n    data_center_id INT NOT NULL,\n    FOREIGN KEY (data_center_id) REFERENCES cloud_data_center(id)\n);\n\n### STATEMENT\n\nDELETE FROM region_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE synchronization_config (\n    id SERIAL PRIMARY KEY,\n    region VARCHAR(50) NOT NULL,\n    data_center VARCHAR(50) NOT NULL,\n    replication_method VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE region_data (\n    id SERIAL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_replication_factor INT NOT NULL,\n    data_sync_delay INT\n);\n\nCREATE TABLE cloud_data_center (\n    id SERIAL PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    data_center_location VARCHAR(100) NOT NULL,\n    region_id INT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region_data(id)\n);\n\nCREATE TABLE data_replication_logs (\n    log_id SERIAL PRIMARY KEY,\n    operation_type VARCHAR(50) NOT NULL,\n    operation_time TIMESTAMP NOT NULL,\n    data_center_id INT NOT NULL,\n    FOREIGN KEY (data_center_id) REFERENCES cloud_data_center(id)\n);\n\n### STATEMENT\n\nDELETE FROM cloud_data_center WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE synchronization_config (\n    id SERIAL PRIMARY KEY,\n    region VARCHAR(50) NOT NULL,\n    data_center VARCHAR(50) NOT NULL,\n    replication_method VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE region_data (\n    id SERIAL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_replication_factor INT NOT NULL,\n    data_sync_delay INT\n);\n\nCREATE TABLE cloud_data_center (\n    id SERIAL PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    data_center_location VARCHAR(100) NOT NULL,\n    region_id INT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region_data(id)\n);\n\nCREATE TABLE data_replication_logs (\n    log_id SERIAL PRIMARY KEY,\n    operation_type VARCHAR(50) NOT NULL,\n    operation_time TIMESTAMP NOT NULL,\n    data_center_id INT NOT NULL,\n    FOREIGN KEY (data_center_id) REFERENCES cloud_data_center(id)\n);\n\n### STATEMENT\n\nDELETE FROM synchronization_config WHERE region = 'US-East' AND replication_method = 'SYNC';",
  "### TABLEDATA\n\nCREATE TABLE synchronization_config (\n    id SERIAL PRIMARY KEY,\n    region VARCHAR(50) NOT NULL,\n    data_center VARCHAR(50) NOT NULL,\n    replication_method VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE region_data (\n    id SERIAL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_replication_factor INT NOT NULL,\n    data_sync_delay INT\n);\n\nCREATE TABLE cloud_data_center (\n    id SERIAL PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    data_center_location VARCHAR(100) NOT NULL,\n    region_id INT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region_data(id)\n);\n\nCREATE TABLE data_replication_logs (\n    log_id SERIAL PRIMARY KEY,\n    operation_type VARCHAR(50) NOT NULL,\n    operation_time TIMESTAMP NOT NULL,\n    data_center_id INT NOT NULL,\n    FOREIGN KEY (data_center_id) REFERENCES cloud_data_center(id)\n);\n\n### STATEMENT\n\nDELETE FROM cloud_data_center WHERE data_center_location = 'Virginia' AND region_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE synchronization_config (\n    id SERIAL PRIMARY KEY,\n    region VARCHAR(50) NOT NULL,\n    data_center VARCHAR(50) NOT NULL,\n    replication_method VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE region_data (\n    id SERIAL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_replication_factor INT NOT NULL,\n    data_sync_delay INT\n);\n\nCREATE TABLE cloud_data_center (\n    id SERIAL PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    data_center_location VARCHAR(100) NOT NULL,\n    region_id INT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region_data(id)\n);\n\nCREATE TABLE data_replication_logs (\n    log_id SERIAL PRIMARY KEY,\n    operation_type VARCHAR(50) NOT NULL,\n    operation_time TIMESTAMP NOT NULL,\n    data_center_id INT NOT NULL,\n    FOREIGN KEY (data_center_id) REFERENCES cloud_data_center(id)\n);\n\n### STATEMENT\n\nDELETE FROM data_replication_logs WHERE operation_type = 'DELETE' AND operation_time < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n    region_id INT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_center_count INT NOT NULL\n);\n\nCREATE TABLE data_centers (\n    data_center_id INT PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    region_id INT REFERENCES cloud_regions(region_id) ON DELETE CASCADE\n);\n\nCREATE TABLE data_replication (\n    replication_id INT PRIMARY KEY,\n    data_replication_name VARCHAR(50) NOT NULL,\n    data_center_id INT REFERENCES data_centers(data_center_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_jobs (\n    job_id INT PRIMARY KEY,\n    job_name VARCHAR(50) NOT NULL,\n    replication_id INT REFERENCES data_replication(replication_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_logs (\n    log_id INT PRIMARY KEY,\n    log_message TEXT NOT NULL,\n    job_id INT REFERENCES replication_jobs(job_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nDELETE FROM data_centers WHERE data_center_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n    region_id INT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_center_count INT NOT NULL\n);\n\nCREATE TABLE data_centers (\n    data_center_id INT PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    region_id INT REFERENCES cloud_regions(region_id) ON DELETE CASCADE\n);\n\nCREATE TABLE data_replication (\n    replication_id INT PRIMARY KEY,\n    data_replication_name VARCHAR(50) NOT NULL,\n    data_center_id INT REFERENCES data_centers(data_center_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_jobs (\n    job_id INT PRIMARY KEY,\n    job_name VARCHAR(50) NOT NULL,\n    replication_id INT REFERENCES data_replication(replication_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_logs (\n    log_id INT PRIMARY KEY,\n    log_message TEXT NOT NULL,\n    job_id INT REFERENCES replication_jobs(job_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nDELETE FROM data_replication WHERE replication_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n    region_id INT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_center_count INT NOT NULL\n);\n\nCREATE TABLE data_centers (\n    data_center_id INT PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    region_id INT REFERENCES cloud_regions(region_id) ON DELETE CASCADE\n);\n\nCREATE TABLE data_replication (\n    replication_id INT PRIMARY KEY,\n    data_replication_name VARCHAR(50) NOT NULL,\n    data_center_id INT REFERENCES data_centers(data_center_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_jobs (\n    job_id INT PRIMARY KEY,\n    job_name VARCHAR(50) NOT NULL,\n    replication_id INT REFERENCES data_replication(replication_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_logs (\n    log_id INT PRIMARY KEY,\n    log_message TEXT NOT NULL,\n    job_id INT REFERENCES replication_jobs(job_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nDELETE FROM replication_jobs WHERE job_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n    region_id INT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_center_count INT NOT NULL\n);\n\nCREATE TABLE data_centers (\n    data_center_id INT PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    region_id INT REFERENCES cloud_regions(region_id) ON DELETE CASCADE\n);\n\nCREATE TABLE data_replication (\n    replication_id INT PRIMARY KEY,\n    data_replication_name VARCHAR(50) NOT NULL,\n    data_center_id INT REFERENCES data_centers(data_center_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_jobs (\n    job_id INT PRIMARY KEY,\n    job_name VARCHAR(50) NOT NULL,\n    replication_id INT REFERENCES data_replication(replication_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_logs (\n    log_id INT PRIMARY KEY,\n    log_message TEXT NOT NULL,\n    job_id INT REFERENCES replication_jobs(job_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nDELETE FROM replication_logs WHERE log_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n    region_id INT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_center_count INT NOT NULL\n);\n\nCREATE TABLE data_centers (\n    data_center_id INT PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    region_id INT REFERENCES cloud_regions(region_id) ON DELETE CASCADE\n);\n\nCREATE TABLE data_replication (\n    replication_id INT PRIMARY KEY,\n    data_replication_name VARCHAR(50) NOT NULL,\n    data_center_id INT REFERENCES data_centers(data_center_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_jobs (\n    job_id INT PRIMARY KEY,\n    job_name VARCHAR(50) NOT NULL,\n    replication_id INT REFERENCES data_replication(replication_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_logs (\n    log_id INT PRIMARY KEY,\n    log_message TEXT NOT NULL,\n    job_id INT REFERENCES replication_jobs(job_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nDELETE FROM replication_jobs WHERE job_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_regions (\n    region_id INT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL,\n    data_center_count INT NOT NULL\n);\n\nCREATE TABLE data_centers (\n    data_center_id INT PRIMARY KEY,\n    data_center_name VARCHAR(50) NOT NULL,\n    region_id INT REFERENCES cloud_regions(region_id) ON DELETE CASCADE\n);\n\nCREATE TABLE data_replication (\n    replication_id INT PRIMARY KEY,\n    data_replication_name VARCHAR(50) NOT NULL,\n    data_center_id INT REFERENCES data_centers(data_center_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_jobs (\n    job_id INT PRIMARY KEY,\n    job_name VARCHAR(50) NOT NULL,\n    replication_id INT REFERENCES data_replication(replication_id) ON DELETE CASCADE\n);\n\nCREATE TABLE replication_logs (\n    log_id INT PRIMARY KEY,\n    log_message TEXT NOT NULL,\n    job_id INT REFERENCES replication_jobs(job_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nDELETE FROM data_replication WHERE replication_id = 1;"
]