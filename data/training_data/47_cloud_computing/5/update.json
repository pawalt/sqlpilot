[
  "### TABLEDATA\n\nCREATE TABLE content_management_system ( \n    content_id SERIAL PRIMARY KEY, \n    title VARCHAR(255) NOT NULL, \n    content_type VARCHAR(50) NOT NULL, \n    content_text TEXT, \n    author VARCHAR(100) NOT NULL, \n    created_at TIMESTAMP DEFAULT NOW() \n);\n\n### STATEMENT\n\nUPDATE content_management_system SET title = 'New Title' WHERE content_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE content_management_system ( \n    content_id SERIAL PRIMARY KEY, \n    title VARCHAR(255) NOT NULL, \n    content_type VARCHAR(50) NOT NULL, \n    content_text TEXT, \n    author VARCHAR(100) NOT NULL, \n    created_at TIMESTAMP DEFAULT NOW() \n);\n\n### STATEMENT\n\nUPDATE content_management_system SET content_text = 'Updated content text' WHERE author = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE content_management_system ( \n    content_id SERIAL PRIMARY KEY, \n    title VARCHAR(255) NOT NULL, \n    content_type VARCHAR(50) NOT NULL, \n    content_text TEXT, \n    author VARCHAR(100) NOT NULL, \n    created_at TIMESTAMP DEFAULT NOW() \n);\n\n### STATEMENT\n\nUPDATE content_management_system SET author = 'Jane Doe', created_at = '2022-01-01 12:00:00' WHERE content_type = 'Article';",
  "### TABLEDATA\n\nCREATE TABLE content_management_system ( \n    content_id SERIAL PRIMARY KEY, \n    title VARCHAR(255) NOT NULL, \n    content_type VARCHAR(50) NOT NULL, \n    content_text TEXT, \n    author VARCHAR(100) NOT NULL, \n    created_at TIMESTAMP DEFAULT NOW() \n);\n\n### STATEMENT\n\nUPDATE content_management_system SET content_text = 'Updated text' WHERE content_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE content_management_system ( \n    content_id SERIAL PRIMARY KEY, \n    title VARCHAR(255) NOT NULL, \n    content_type VARCHAR(50) NOT NULL, \n    content_text TEXT, \n    author VARCHAR(100) NOT NULL, \n    created_at TIMESTAMP DEFAULT NOW() \n);\n\n### STATEMENT\n\nUPDATE content_management_system SET author = 'John Doe' WHERE content_type = 'Article';",
  "### TABLEDATA\n\nCREATE TABLE content_management_system ( \n    content_id SERIAL PRIMARY KEY, \n    title VARCHAR(255) NOT NULL, \n    content_type VARCHAR(50) NOT NULL, \n    content_text TEXT, \n    author VARCHAR(100) NOT NULL, \n    created_at TIMESTAMP DEFAULT NOW() \n);\n\n### STATEMENT\n\nUPDATE content_management_system SET title = 'New Title', content_text = 'New Text', author = 'Jane Smith' WHERE content_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE digital_content (\n    content_id INT PRIMARY KEY,\n    content_title TEXT,\n    content_description TEXT,\n    content_type TEXT,\n    content_size INT\n);\n\nCREATE TABLE content_categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPDATE digital_content SET content_title = 'New Title' WHERE content_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE digital_content (\n    content_id INT PRIMARY KEY,\n    content_title TEXT,\n    content_description TEXT,\n    content_type TEXT,\n    content_size INT\n);\n\nCREATE TABLE content_categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPDATE digital_content SET content_description = 'New Description' WHERE content_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE digital_content (\n    content_id INT PRIMARY KEY,\n    content_title TEXT,\n    content_description TEXT,\n    content_type TEXT,\n    content_size INT\n);\n\nCREATE TABLE content_categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPDATE content_categories SET category_name = 'New Category' WHERE category_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE digital_content (\n    content_id INT PRIMARY KEY,\n    content_title TEXT,\n    content_description TEXT,\n    content_type TEXT,\n    content_size INT\n);\n\nCREATE TABLE content_categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPDATE digital_content SET content_title = 'New Title', content_description = 'Updated Description' WHERE content_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE digital_content (\n    content_id INT PRIMARY KEY,\n    content_title TEXT,\n    content_description TEXT,\n    content_type TEXT,\n    content_size INT\n);\n\nCREATE TABLE content_categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPDATE digital_content SET content_type = 'Document', content_size = 1024 WHERE content_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE digital_content (\n    content_id INT PRIMARY KEY,\n    content_title TEXT,\n    content_description TEXT,\n    content_type TEXT,\n    content_size INT\n);\n\nCREATE TABLE content_categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPDATE content_categories SET category_name = 'New Category Name' WHERE category_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE content_management_system (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255) NOT NULL,\n    content_description TEXT,\n    content_type ENUM('article', 'video', 'image')\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE user_content_mapping (\n    mapping_id INT PRIMARY KEY,\n    user_id INT,\n    content_id INT,\n    FOREIGN KEY(user_id) REFERENCES users(user_id),\n    FOREIGN KEY(content_id) REFERENCES content_management_system(content_id)\n);\n\n### STATEMENT\n\nUPDATE content_management_system SET content_title = 'New Title' WHERE content_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE content_management_system (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255) NOT NULL,\n    content_description TEXT,\n    content_type ENUM('article', 'video', 'image')\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE user_content_mapping (\n    mapping_id INT PRIMARY KEY,\n    user_id INT,\n    content_id INT,\n    FOREIGN KEY(user_id) REFERENCES users(user_id),\n    FOREIGN KEY(content_id) REFERENCES content_management_system(content_id)\n);\n\n### STATEMENT\n\nUPDATE users SET email = 'newemail@example.com' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE content_management_system (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255) NOT NULL,\n    content_description TEXT,\n    content_type ENUM('article', 'video', 'image')\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE user_content_mapping (\n    mapping_id INT PRIMARY KEY,\n    user_id INT,\n    content_id INT,\n    FOREIGN KEY(user_id) REFERENCES users(user_id),\n    FOREIGN KEY(content_id) REFERENCES content_management_system(content_id)\n);\n\n### STATEMENT\n\nUPDATE user_content_mapping SET user_id = 2 WHERE mapping_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE content_management_system (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255) NOT NULL,\n    content_description TEXT,\n    content_type ENUM('article', 'video', 'image')\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE user_content_mapping (\n    mapping_id INT PRIMARY KEY,\n    user_id INT,\n    content_id INT,\n    FOREIGN KEY(user_id) REFERENCES users(user_id),\n    FOREIGN KEY(content_id) REFERENCES content_management_system(content_id)\n);\n\n### STATEMENT\n\nUPDATE content_management_system SET content_description = 'New description for this content' WHERE content_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE content_management_system (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255) NOT NULL,\n    content_description TEXT,\n    content_type ENUM('article', 'video', 'image')\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE user_content_mapping (\n    mapping_id INT PRIMARY KEY,\n    user_id INT,\n    content_id INT,\n    FOREIGN KEY(user_id) REFERENCES users(user_id),\n    FOREIGN KEY(content_id) REFERENCES content_management_system(content_id)\n);\n\n### STATEMENT\n\nUPDATE users SET username = 'new_username', email = 'new_email@example.com' WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE content_management_system (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255) NOT NULL,\n    content_description TEXT,\n    content_type ENUM('article', 'video', 'image')\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE user_content_mapping (\n    mapping_id INT PRIMARY KEY,\n    user_id INT,\n    content_id INT,\n    FOREIGN KEY(user_id) REFERENCES users(user_id),\n    FOREIGN KEY(content_id) REFERENCES content_management_system(content_id)\n);\n\n### STATEMENT\n\nUPDATE user_content_mapping SET user_id = 3 WHERE mapping_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Digital_Content (\n  content_id INT PRIMARY KEY,\n  content_title VARCHAR(255),\n  content_type VARCHAR(50),\n  content_url TEXT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  password_hash VARCHAR(255),\n  role ENUM('admin', 'editor', 'viewer'),\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50),\n  parent_category_id INT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Content_Tags (\n  tag_id INT PRIMARY KEY,\n  tag_name VARCHAR(50),\n  content_id INT,\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE Digital_Content SET content_title = 'New Title' WHERE content_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Digital_Content (\n  content_id INT PRIMARY KEY,\n  content_title VARCHAR(255),\n  content_type VARCHAR(50),\n  content_url TEXT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  password_hash VARCHAR(255),\n  role ENUM('admin', 'editor', 'viewer'),\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50),\n  parent_category_id INT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Content_Tags (\n  tag_id INT PRIMARY KEY,\n  tag_name VARCHAR(50),\n  content_id INT,\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE Users SET username = 'new_username' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Digital_Content (\n  content_id INT PRIMARY KEY,\n  content_title VARCHAR(255),\n  content_type VARCHAR(50),\n  content_url TEXT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  password_hash VARCHAR(255),\n  role ENUM('admin', 'editor', 'viewer'),\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50),\n  parent_category_id INT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Content_Tags (\n  tag_id INT PRIMARY KEY,\n  tag_name VARCHAR(50),\n  content_id INT,\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE Categories SET category_name = 'New Category' WHERE category_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Digital_Content (\n  content_id INT PRIMARY KEY,\n  content_title VARCHAR(255),\n  content_type VARCHAR(50),\n  content_url TEXT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  password_hash VARCHAR(255),\n  role ENUM('admin', 'editor', 'viewer'),\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50),\n  parent_category_id INT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Content_Tags (\n  tag_id INT PRIMARY KEY,\n  tag_name VARCHAR(50),\n  content_id INT,\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE Digital_Content SET content_title='New Title' WHERE content_id=1;",
  "### TABLEDATA\n\nCREATE TABLE Digital_Content (\n  content_id INT PRIMARY KEY,\n  content_title VARCHAR(255),\n  content_type VARCHAR(50),\n  content_url TEXT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  password_hash VARCHAR(255),\n  role ENUM('admin', 'editor', 'viewer'),\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50),\n  parent_category_id INT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Content_Tags (\n  tag_id INT PRIMARY KEY,\n  tag_name VARCHAR(50),\n  content_id INT,\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE Users SET role='editor' WHERE user_id=3;",
  "### TABLEDATA\n\nCREATE TABLE Digital_Content (\n  content_id INT PRIMARY KEY,\n  content_title VARCHAR(255),\n  content_type VARCHAR(50),\n  content_url TEXT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  password_hash VARCHAR(255),\n  role ENUM('admin', 'editor', 'viewer'),\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50),\n  parent_category_id INT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE Content_Tags (\n  tag_id INT PRIMARY KEY,\n  tag_name VARCHAR(50),\n  content_id INT,\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE Categories SET parent_category_id=2 WHERE category_id=5;",
  "### TABLEDATA\n\nCREATE TABLE Content { \n    id INT PRIMARY KEY, \n    title VARCHAR(255), \n    content TEXT, \n    published_date DATE \n} \n\n\nCREATE TABLE Users { \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50), \n    email VARCHAR(100), \n    password VARCHAR(50) \n} \n\n\nCREATE TABLE Categories { \n    category_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    description TEXT \n} \n\n\nCREATE TABLE Tags { \n    tag_id INT PRIMARY KEY, \n    tag_name VARCHAR(50) \n} \n\n\nCREATE TABLE Content_Tags { \n    content_id INT, \n    tag_id INT, \n    PRIMARY KEY (content_id, tag_id), \n    FOREIGN KEY (content_id) REFERENCES Content(id), \n    FOREIGN KEY (tag_id) REFERENCES Tags(tag_id) \n}\n\n### STATEMENT\n\nUPDATE Content SET title='Updated Title' WHERE id=1;",
  "### TABLEDATA\n\nCREATE TABLE Content { \n    id INT PRIMARY KEY, \n    title VARCHAR(255), \n    content TEXT, \n    published_date DATE \n} \n\n\nCREATE TABLE Users { \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50), \n    email VARCHAR(100), \n    password VARCHAR(50) \n} \n\n\nCREATE TABLE Categories { \n    category_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    description TEXT \n} \n\n\nCREATE TABLE Tags { \n    tag_id INT PRIMARY KEY, \n    tag_name VARCHAR(50) \n} \n\n\nCREATE TABLE Content_Tags { \n    content_id INT, \n    tag_id INT, \n    PRIMARY KEY (content_id, tag_id), \n    FOREIGN KEY (content_id) REFERENCES Content(id), \n    FOREIGN KEY (tag_id) REFERENCES Tags(tag_id) \n}\n\n### STATEMENT\n\nUPDATE Users SET username='NewUsername' WHERE user_id=10;",
  "### TABLEDATA\n\nCREATE TABLE Content { \n    id INT PRIMARY KEY, \n    title VARCHAR(255), \n    content TEXT, \n    published_date DATE \n} \n\n\nCREATE TABLE Users { \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50), \n    email VARCHAR(100), \n    password VARCHAR(50) \n} \n\n\nCREATE TABLE Categories { \n    category_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    description TEXT \n} \n\n\nCREATE TABLE Tags { \n    tag_id INT PRIMARY KEY, \n    tag_name VARCHAR(50) \n} \n\n\nCREATE TABLE Content_Tags { \n    content_id INT, \n    tag_id INT, \n    PRIMARY KEY (content_id, tag_id), \n    FOREIGN KEY (content_id) REFERENCES Content(id), \n    FOREIGN KEY (tag_id) REFERENCES Tags(tag_id) \n}\n\n### STATEMENT\n\nUPDATE Categories SET description='New Description' WHERE category_id=5;",
  "### TABLEDATA\n\nCREATE TABLE Content { \n    id INT PRIMARY KEY, \n    title VARCHAR(255), \n    content TEXT, \n    published_date DATE \n} \n\n\nCREATE TABLE Users { \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50), \n    email VARCHAR(100), \n    password VARCHAR(50) \n} \n\n\nCREATE TABLE Categories { \n    category_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    description TEXT \n} \n\n\nCREATE TABLE Tags { \n    tag_id INT PRIMARY KEY, \n    tag_name VARCHAR(50) \n} \n\n\nCREATE TABLE Content_Tags { \n    content_id INT, \n    tag_id INT, \n    PRIMARY KEY (content_id, tag_id), \n    FOREIGN KEY (content_id) REFERENCES Content(id), \n    FOREIGN KEY (tag_id) REFERENCES Tags(tag_id) \n}\n\n### STATEMENT\n\nUPDATE Content SET title = 'Updated Title' WHERE id = 1",
  "### TABLEDATA\n\nCREATE TABLE Content { \n    id INT PRIMARY KEY, \n    title VARCHAR(255), \n    content TEXT, \n    published_date DATE \n} \n\n\nCREATE TABLE Users { \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50), \n    email VARCHAR(100), \n    password VARCHAR(50) \n} \n\n\nCREATE TABLE Categories { \n    category_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    description TEXT \n} \n\n\nCREATE TABLE Tags { \n    tag_id INT PRIMARY KEY, \n    tag_name VARCHAR(50) \n} \n\n\nCREATE TABLE Content_Tags { \n    content_id INT, \n    tag_id INT, \n    PRIMARY KEY (content_id, tag_id), \n    FOREIGN KEY (content_id) REFERENCES Content(id), \n    FOREIGN KEY (tag_id) REFERENCES Tags(tag_id) \n}\n\n### STATEMENT\n\nUPDATE Users SET email = 'newemail@example.com' WHERE user_id = 3",
  "### TABLEDATA\n\nCREATE TABLE Content { \n    id INT PRIMARY KEY, \n    title VARCHAR(255), \n    content TEXT, \n    published_date DATE \n} \n\n\nCREATE TABLE Users { \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50), \n    email VARCHAR(100), \n    password VARCHAR(50) \n} \n\n\nCREATE TABLE Categories { \n    category_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    description TEXT \n} \n\n\nCREATE TABLE Tags { \n    tag_id INT PRIMARY KEY, \n    tag_name VARCHAR(50) \n} \n\n\nCREATE TABLE Content_Tags { \n    content_id INT, \n    tag_id INT, \n    PRIMARY KEY (content_id, tag_id), \n    FOREIGN KEY (content_id) REFERENCES Content(id), \n    FOREIGN KEY (tag_id) REFERENCES Tags(tag_id) \n}\n\n### STATEMENT\n\nUPDATE Categories SET description = 'New Description' WHERE category_id = 2"
]