[
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_resource_metrics WHERE instance_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, cpu_usage FROM cloud_resource_metrics;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, disk_usage FROM cloud_resource_metrics WHERE service_name = 'database';",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, memory_usage FROM cloud_resource_metrics WHERE cpu_usage > 50;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_resource_metrics WHERE disk_usage < 20;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_id, service_name FROM cloud_resource_metrics WHERE memory_usage < 70;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_resource_metrics WHERE network_traffic > 1000;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, disk_usage FROM cloud_resource_metrics WHERE memory_usage < 50 AND disk_usage > 30;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_id, service_name FROM cloud_resource_metrics WHERE cpu_usage < 30 AND memory_usage > 80;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_resource_metrics WHERE disk_usage = 0;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, memory_usage FROM cloud_resource_metrics WHERE disk_usage <> 0;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_resource_metrics WHERE network_traffic < 500 AND cpu_usage > 70;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, disk_usage FROM cloud_resource_metrics WHERE memory_usage BETWEEN 40 AND 60;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_id, service_name FROM cloud_resource_metrics WHERE network_traffic BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_resource_metrics WHERE cpu_usage IN (20, 30, 40);",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, memory_usage FROM cloud_resource_metrics ORDER BY memory_usage DESC;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_id, service_name FROM cloud_resource_metrics ORDER BY cpu_usage ASC;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_resource_metrics ORDER BY disk_usage DESC;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, disk_usage FROM cloud_resource_metrics LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_id, service_name FROM cloud_resource_metrics LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_id, instance_name, service_name FROM cloud_resource_metrics WHERE cpu_usage > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_resource_metrics WHERE memory_usage > 0.8 AND disk_usage < 0.3;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, service_name, network_traffic FROM cloud_resource_metrics WHERE cpu_usage < 0.2 AND memory_usage > 0.6;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_resource_metrics WHERE service_name LIKE 'web%';",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_id, instance_name, cpu_usage FROM cloud_resource_metrics WHERE memory_usage > 0.9 AND disk_usage > 0.7;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, memory_usage, disk_usage FROM cloud_resource_metrics WHERE instance_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_resource_metrics WHERE cpu_usage < 0.4 AND network_traffic BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT service_name FROM cloud_resource_metrics WHERE memory_usage > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(cpu_usage), MAX(memory_usage), MIN(disk_usage) FROM cloud_resource_metrics;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_id, instance_name, service_name FROM cloud_resource_metrics ORDER BY cpu_usage DESC;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, disk_usage, network_traffic FROM cloud_resource_metrics ORDER BY memory_usage ASC;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_id, service_name, cpu_usage FROM cloud_resource_metrics ORDER BY disk_usage ASC, network_traffic DESC;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM cloud_resource_metrics WHERE memory_usage < 0.5;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT SUM(cpu_usage), AVG(memory_usage), MAX(disk_usage), MIN(network_traffic) FROM cloud_resource_metrics WHERE service_name = 'database';",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, service_name, disk_usage FROM cloud_resource_metrics WHERE network_traffic > 500 OR disk_usage > 0.6;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_resource_metrics WHERE instance_id IN ('123e4567-e89b-12d3-a456-426614174000', '876e4567-e89b-12d3-a456-426614174111');",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_id, service_name, network_traffic FROM cloud_resource_metrics WHERE cpu_usage < 0.3 AND (memory_usage > 0.7 OR disk_usage < 0.2);",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, cpu_usage, network_traffic FROM cloud_resource_metrics WHERE cpu_usage > memory_usage;",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_id, instance_name, service_name FROM cloud_resource_metrics WHERE service_name = 'app' AND (cpu_usage > 0.6 OR disk_usage < 0.4);",
  "### TABLEDATA\n\nCREATE TABLE cloud_resource_metrics (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(50),\n    service_name VARCHAR(50),\n    cpu_usage DECIMAL,\n    memory_usage DECIMAL,\n    disk_usage DECIMAL,\n    network_traffic DECIMAL\n);\n\n### STATEMENT\n\nSELECT instance_name, memory_usage, disk_usage FROM cloud_resource_metrics WHERE instance_id != '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM resource_usage_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT cpu_usage, memory_usage FROM resource_usage_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(storage_usage) FROM resource_usage_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT instance_id, storage_usage FROM resource_usage_metrics WHERE storage_usage > 100;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT latency, throughput FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT service_id, error_rate FROM performance_metrics WHERE error_rate > 0.05;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(availability) FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT instance_id FROM resource_usage_metrics WHERE memory_usage > 80;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT service_id, latency FROM performance_metrics WHERE latency < 10;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(cpu_usage) FROM resource_usage_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT MIN(network_throughput) FROM resource_usage_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT service_id, throughput FROM performance_metrics WHERE availability > 0.99;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(cpu_usage) FROM resource_usage_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT service_id, throughput FROM performance_metrics ORDER BY throughput DESC;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT instance_id, cpu_usage FROM resource_usage_metrics WHERE cpu_usage < 50;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT SUM(network_throughput) FROM resource_usage_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT instance_id, memory_usage FROM resource_usage_metrics WHERE memory_usage < 30;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM resource_usage_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT service_id, availability FROM performance_metrics WHERE availability < 0.95;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM resource_usage_metrics WHERE cpu_usage > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT instance_id, memory_usage FROM resource_usage_metrics WHERE storage_usage < 100;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM resource_usage_metrics WHERE network_throughput BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(cpu_usage), MAX(memory_usage) FROM resource_usage_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT instance_id FROM resource_usage_metrics WHERE memory_usage > 80 AND storage_usage < 200;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT service_id, latency FROM performance_metrics WHERE throughput > 100;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(throughput) FROM performance_metrics WHERE service_id = '1234-5678-9012';",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM resource_usage_metrics JOIN performance_metrics ON resource_usage_metrics.instance_id = performance_metrics.service_id;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(cpu_usage) FROM resource_usage_metrics WHERE network_throughput > 200;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT instance_id, memory_usage FROM resource_usage_metrics WHERE storage_usage > 150 AND cpu_usage < 0.7;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT SUM(storage_usage) FROM resource_usage_metrics;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE availability < 0.95;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM performance_metrics WHERE error_rate > 0.1;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT instance_id, memory_usage, storage_usage FROM resource_usage_metrics WHERE cpu_usage < 0.5 AND network_throughput > 150;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(availability) FROM performance_metrics WHERE service_id IN ('9876-5432-1098', '3456-7890-1234');",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM resource_usage_metrics ORDER BY storage_usage DESC;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT instance_id FROM resource_usage_metrics WHERE cpu_usage > 0.9 OR memory_usage > 90;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT SUM(throughput) FROM performance_metrics WHERE service_id = '5678-1234-7890';",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT service_id, AVG(error_rate) FROM performance_metrics GROUP BY service_id;",
  "### TABLEDATA\n\nCREATE TABLE resource_usage_metrics (\n    instance_id UUID PRIMARY KEY,\n    cpu_usage FLOAT,\n    memory_usage FLOAT,\n    storage_usage FLOAT,\n    network_throughput FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    service_id UUID PRIMARY KEY,\n    latency FLOAT,\n    throughput FLOAT,\n    error_rate FLOAT,\n    availability FLOAT\n);\n\n### STATEMENT\n\nSELECT instance_id FROM resource_usage_metrics WHERE storage_usage > 200 AND network_throughput < 50;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_instances;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instance_id, instance_name FROM cloud_instances WHERE region = 'us-west-1';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT service_name, service_status FROM services;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instance_name, region FROM cloud_instances WHERE instance_type = 'small';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT service_id, service_metrics FROM services;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_instances INNER JOIN services ON cloud_instances.instance_id = services.service_id;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instance_name, usage_metrics->>'CPU' AS cpu_usage FROM cloud_instances;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT service_name, service_type, service_status FROM services WHERE service_type = 'database';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(metric_value) AS average_metric_value FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(metric_value) AS max_metric_value FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM cloud_instances;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instance_name, instance_type FROM cloud_instances WHERE region = 'us-east-1';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT service_name, service_status FROM services WHERE service_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instance_id, instance_name, service_name FROM cloud_instances JOIN services ON cloud_instances.instance_id = services.service_id;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE metric_value > 50;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT service_name, COUNT(*) AS count_services FROM services GROUP BY service_name;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instance_name, AVG(metric_value) AS avg_metric_value FROM cloud_instances JOIN performance_metrics ON cloud_instances.instance_id = performance_metrics.instance_id GROUP BY instance_name;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instance_name, MAX(metric_value) AS max_metric_value FROM cloud_instances JOIN performance_metrics ON cloud_instances.instance_id = performance_metrics.instance_id GROUP BY instance_name;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT service_type, COUNT(*) AS count_services FROM services GROUP BY service_type;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_instances ci JOIN services s ON ci.instance_id = s.service_id;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT ci.instance_name, s.service_name, p.metric_name, p.metric_value FROM cloud_instances ci JOIN performance_metrics p ON ci.instance_id = p.instance_id JOIN services s ON p.service_id = s.service_id;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT ci.instance_name, s.service_name, p.metric_name, p.metric_value FROM cloud_instances ci LEFT JOIN performance_metrics p ON ci.instance_id = p.instance_id JOIN services s ON p.service_id = s.service_id WHERE p.metric_value > 100;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT count(*) FROM performance_metrics p WHERE p.metric_name LIKE 'CPU%';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT ci.instance_name, s.service_name, p.metric_name, AVG(p.metric_value) AS average_value FROM cloud_instances ci JOIN performance_metrics p ON ci.instance_id = p.instance_id JOIN services s ON p.service_id = s.service_id GROUP BY ci.instance_name, s.service_name, p.metric_name;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_name VARCHAR(100),\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    usage_metrics JSONB\n);\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(100),\n    service_type VARCHAR(50),\n    service_status VARCHAR(20),\n    service_metrics JSONB\n);\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    service_id UUID REFERENCES services(service_id),\n    metric_name VARCHAR(100),\n    metric_value DOUBLE PRECISION,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT ci.region, COUNT(*) AS instances_count FROM cloud_instances ci GROUP BY ci.region...",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_instances;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT instance_id, instance_name, storage_used FROM cloud_instances WHERE provider = 'AWS';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT instance_name, provider FROM cloud_instances WHERE region = 'us-east-1';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM service_metrics WHERE cpu_usage > 80.00;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT service_name, memory_usage FROM service_metrics WHERE timestamp >= '2022-01-01' AND timestamp <= '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM network_traffic WHERE inbound_traffic > 1000.00 OR outbound_traffic > 500.00;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT service_name, inbound_traffic, outbound_traffic FROM network_traffic WHERE timestamp >= '2022-01-01' ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM storage_metrics WHERE total_capacity - used_capacity < 100.00;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT storage_name, used_capacity, total_capacity FROM storage_metrics WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_instances WHERE instance_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT instance_name, provider FROM cloud_instances WHERE instance_id BETWEEN 200 AND 300;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM service_metrics WHERE service_name LIKE '%microservice%';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT service_name, cpu_usage, memory_usage FROM service_metrics WHERE timestamp >= '2022-03-01' AND timestamp < '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM network_traffic WHERE service_name = 'web_app' AND inbound_traffic > outbound_traffic;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT service_name, inbound_traffic + outbound_traffic AS total_traffic FROM network_traffic WHERE timestamp >= '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM storage_metrics WHERE used_capacity > total_capacity * 0.8;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT storage_name, used_capacity / total_capacity * 100 AS used_percentage FROM storage_metrics WHERE timestamp >= '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_instances WHERE provider = 'Azure' AND region = 'us-west-2';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT instance_name, storage_used FROM cloud_instances WHERE storage_used < 500.00;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM service_metrics WHERE memory_usage IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_instances WHERE region = 'us-west-1';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT instance_id, instance_name, provider FROM cloud_instances WHERE storage_used > 1000;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT instance_id, instance_name, storage_used FROM cloud_instances WHERE provider = 'AWS';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM service_metrics WHERE cpu_usage > 80 AND memory_usage < 30;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT service_name, timestamp, cpu_usage FROM service_metrics WHERE timestamp BETWEEN '2022-08-01' AND '2022-08-31';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT service_name, SUM(inbound_traffic) AS total_inbound_traffic FROM network_traffic GROUP BY service_name;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT storage_name, used_capacity, total_capacity FROM storage_metrics WHERE used_capacity > total_capacity * 0.75;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT DISTINCT provider FROM cloud_instances;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT service_name, COUNT(traffic_id) AS traffic_count FROM network_traffic GROUP BY service_name HAVING traffic_count > 100;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_instances ci INNER JOIN service_metrics sm ON ci.instance_id = sm.metric_id;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT ci.instance_name, sm.service_name FROM cloud_instances ci LEFT JOIN service_metrics sm ON ci.instance_id = sm.metric_id;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM cloud_instances WHERE instance_id IN (SELECT instance_id FROM service_metrics WHERE cpu_usage > 90);",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT ci.instance_name, nm.timestamp, nm.inbound_traffic FROM cloud_instances ci JOIN network_traffic nm ON ci.instance_name = nm.service_name;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT ci.instance_name, sm.timestamp, sm.cpu_usage FROM cloud_instances ci JOIN service_metrics sm ON ci.provider = sm.service_name;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT ci.instance_name, sm.timestamp, st.used_capacity FROM cloud_instances ci JOIN service_metrics sm ON ci.instance_name = sm.service_name JOIN storage_metrics st ON sm.storage_name = st.storage_name;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT ci.instance_name, nt.timestamp, nt.inbound_traffic FROM cloud_instances ci JOIN network_traffic nt ON ci.instance_name = nt.service_name WHERE nt.timestamp >= '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT ci.instance_name, sm.timestamp, st.used_capacity FROM cloud_instances ci JOIN service_metrics sm ON ci.instance_name = sm.service_name JOIN storage_metrics st ON sm.timestamp = st.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT AVG(cpu_usage) AS avg_cpu_usage, AVG(memory_usage) AS avg_memory_usage FROM service_metrics;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT service_name, total_capacity - used_capacity AS available_capacity FROM storage_metrics;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id INT PRIMARY KEY,\n    instance_name VARCHAR(255),\n    provider VARCHAR(50),\n    region VARCHAR(50),\n    storage_used DECIMAL(10,2)\n);\n\nCREATE TABLE service_metrics (\n    metric_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    cpu_usage DECIMAL(5,2),\n    memory_usage DECIMAL(5,2)\n);\n\nCREATE TABLE network_traffic (\n    traffic_id INT PRIMARY KEY,\n    service_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    inbound_traffic DECIMAL(10,2),\n    outbound_traffic DECIMAL(10,2)\n);\n\nCREATE TABLE storage_metrics (\n    storage_id INT PRIMARY KEY,\n    storage_name VARCHAR(100),\n    timestamp TIMESTAMP,\n    used_capacity DECIMAL(10,2),\n    total_capacity DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT instance_name, provider, MAX(storage_used) AS max_storage_used FROM cloud_instances;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM cloud_instances;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT instance_id, instance_type, region FROM cloud_instances WHERE region='us-east-1';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM services WHERE provider='AWS';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT service_name, status FROM services WHERE status='active';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT metric_name, value FROM performance_metrics WHERE value > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM alerts WHERE severity='high' ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT alert_type, message FROM alerts WHERE created_at BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE last_login IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT instance_id, MAX(cpu_usage) AS max_cpu_usage FROM cloud_instances GROUP BY instance_id;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(memory_usage) AS avg_memory_usage FROM cloud_instances;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT provider, COUNT(*) AS total_services FROM services GROUP BY provider;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT instance_id, COUNT(*) AS total_alerts FROM alerts GROUP BY instance_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM cloud_instances c JOIN performance_metrics pm ON c.instance_id = pm.instance_id;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.instance_id, c.instance_type, AVG(pm.value) AS avg_metric_value FROM cloud_instances c JOIN performance_metrics pm ON c.instance_id = pm.instance_id GROUP BY c.instance_id;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT service_name, AVG(value) AS avg_value FROM services s JOIN performance_metrics pm ON s.service_id = pm.instance_id GROUP BY service_name;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT instance_id, AVG(value) AS avg_value FROM performance_metrics GROUP BY instance_id HAVING AVG(value) > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT provider, MAX(created_at) AS latest_service_created FROM services GROUP BY provider;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT region, MIN(uptime) AS min_uptime FROM cloud_instances GROUP BY region;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM cloud_instances LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT instance_id, instance_type, region FROM cloud_instances WHERE cpu_usage > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT instance_id, COUNT(instance_id) AS total_alerts FROM alerts GROUP BY instance_id HAVING total_alerts > 5;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT services.service_name, performance_metrics.metric_name, performance_metrics.value FROM services JOIN performance_metrics ON services.service_id = performance_metrics.instance_id;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT(instance_id)) FROM alerts WHERE severity = 'High';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE timestamp > '2022-01-01' AND timestamp < '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT services.service_name, COUNT(alerts.alert_id) AS total_alerts FROM services LEFT JOIN alerts ON services.service_id = alerts.instance_id GROUP BY services.service_name;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT users.username, services.service_id FROM users LEFT JOIN services ON users.user_id = services.service_id WHERE services.status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT users.username, COUNT(alerts.alert_id) AS total_alerts FROM users LEFT JOIN alerts ON users.user_id = alerts.instance_id GROUP BY users.username;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM cloud_instances WHERE region IN ('us-east','us-west') AND uptime > NOW() - INTERVAL '1 day';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT users.username, COUNT(alerts.alert_id) AS total_alerts FROM users FULL JOIN alerts ON users.user_id = alerts.instance_id GROUP BY users.username HAVING total_alerts < 3;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT instance_id, AVG(cpu_usage), AVG(memory_usage) FROM cloud_instances GROUP BY instance_id;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM services WHERE created_at >= '2022-01-01' AND created_at <= '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT users.username, COUNT(alerts.alert_id) AS total_alerts FROM users RIGHT JOIN alerts ON users.user_id = alerts.instance_id GROUP BY users.username HAVING total_alerts > 0;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT instance_id, MAX(value) AS max_value FROM performance_metrics GROUP BY instance_id;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT instance_id, instance_type, COUNT(alerts.alert_id) AS total_alerts FROM cloud_instances LEFT JOIN alerts ON cloud_instances.instance_id = alerts.instance_id GROUP BY instance_id, instance_type;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT(instance_id)) FROM alerts WHERE created_at >= '2022-01-01' AND created_at <= '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT services.service_name, AVG(performance_metrics.value) AS avg_value FROM services INNER JOIN performance_metrics ON services.service_id = performance_metrics.instance_id GROUP BY services.service_name;",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT users.username, services.service_name FROM users INNER JOIN services ON users.user_id = services.service_id WHERE services.provider = 'AWS';",
  "### TABLEDATA\n\nCREATE TABLE cloud_instances (\n    instance_id UUID PRIMARY KEY,\n    instance_type VARCHAR(50),\n    region VARCHAR(50),\n    uptime TIMESTAMP,\n    cpu_usage FLOAT,\n    memory_usage FLOAT\n)\n\nCREATE TABLE services (\n    service_id UUID PRIMARY KEY,\n    service_name VARCHAR(50),\n    provider VARCHAR(50),\n    status VARCHAR(20),\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    metric_name VARCHAR(50),\n    value FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE alerts (\n    alert_id UUID PRIMARY KEY,\n    instance_id UUID REFERENCES cloud_instances(instance_id),\n    alert_type VARCHAR(50),\n    severity VARCHAR(10),\n    message TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    created_at TIMESTAMP,\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT instance_id, SUM(value) AS total_value FROM performance_metrics GROUP BY instance_id HAVING total_value > 1000;"
]