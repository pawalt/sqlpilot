[
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT * FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_content, engagement_likes FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_content, engagement_comments FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_content, engagement_shares FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_date, user_id FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_date, engagement_likes FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_date, engagement_comments FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_date, engagement_shares FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, engagement_likes FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, engagement_comments FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, engagement_shares FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_id, post_content, engagement_likes FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_id, post_content, engagement_comments FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_id, post_content, engagement_shares FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_id, post_content, post_date FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_id, post_content, user_id FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT engagement_likes, engagement_comments, engagement_shares FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT engagement_likes, engagement_comments, post_date FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT engagement_likes, engagement_comments, user_id FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT engagement_likes, engagement_shares, post_date FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_id, post_content, engagement_likes, engagement_comments, engagement_shares, post_date, user_id FROM SocialMediaEngagement WHERE post_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT * FROM SocialMediaEngagement WHERE engagement_likes > 100 AND engagement_comments > 50;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_id, post_content, engagement_likes, engagement_comments FROM SocialMediaEngagement WHERE post_date > '2022-01-01' ORDER BY engagement_likes DESC;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_posts FROM SocialMediaEngagement GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, AVG(engagement_likes) AS avg_likes FROM SocialMediaEngagement GROUP BY user_id HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, post_date, SUM(engagement_likes) AS total_likes FROM SocialMediaEngagement GROUP BY user_id, post_date HAVING total_likes > 100;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(engagement_likes) AS total_likes, SUM(engagement_comments) AS total_comments FROM SocialMediaEngagement GROUP BY user_id HAVING total_likes > 500 AND total_comments > 100;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, post_date, engagement_likes FROM SocialMediaEngagement WHERE user_id = 1 ORDER BY post_date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, engagement_shares FROM SocialMediaEngagement WHERE engagement_shares IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT post_id, post_content, engagement_likes, engagement_comments, engagement_shares, post_date, user_id FROM SocialMediaEngagement WHERE post_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(post_id) AS total_posts FROM SocialMediaEngagement GROUP BY user_id ORDER BY total_posts DESC;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, engagement_likes, engagement_comments FROM SocialMediaEngagement WHERE engagement_likes > 50 OR engagement_comments > 20;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, AVG(engagement_likes) AS avg_likes FROM SocialMediaEngagement WHERE post_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY user_id ORDER BY avg_likes DESC;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, MAX(engagement_likes) AS max_likes FROM SocialMediaEngagement GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, MIN(engagement_comments) AS min_comments FROM SocialMediaEngagement GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, engagement_likes, engagement_comments FROM SocialMediaEngagement WHERE user_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, post_date, engagement_shares FROM SocialMediaEngagement WHERE engagement_shares > 50 AND user_id IN (4, 5, 6);",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, AVG(engagement_likes) AS avg_likes FROM SocialMediaEngagement WHERE engagement_likes > 20 GROUP BY user_id HAVING avg_likes > 30;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(engagement_likes) AS total_likes FROM SocialMediaEngagement WHERE user_id IN (7, 8, 9) GROUP BY user_id HAVING total_likes > 100;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_posts FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaEngagement (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    engagement_likes INT,\n    engagement_comments INT,\n    engagement_shares INT,\n    post_date TIMESTAMP,\n    user_id INT\n)\n\n### STATEMENT\n\nSELECT AVG(engagement_likes) AS avg_likes, AVG(engagement_comments) AS avg_comments FROM SocialMediaEngagement;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT * FROM social_media_engagement;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT id, post FROM social_media_engagement;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT engagement_count FROM social_media_engagement;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT created_at FROM social_media_engagement;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_analysis;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT id, campaign_name FROM marketing_analysis;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT engagement_score FROM marketing_analysis;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post_id FROM marketing_analysis;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT * FROM social_media_engagement JOIN marketing_analysis ON social_media_engagement.id = marketing_analysis.post_id;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT id, post, campaign_name FROM social_media_engagement JOIN marketing_analysis ON social_media_engagement.id = marketing_analysis.post_id;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count, campaign_name, engagement_score FROM social_media_engagement JOIN marketing_analysis ON social_media_engagement.id = marketing_analysis.post_id;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT * FROM social_media_engagement WHERE engagement_count > 100;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_analysis WHERE engagement_score < 3.5;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT * FROM social_media_engagement WHERE created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_score FROM social_media_engagement JOIN marketing_analysis ON social_media_engagement.id = marketing_analysis.post_id WHERE engagement_score > 4.0;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT id, post, engagement_count FROM social_media_engagement JOIN marketing_analysis ON social_media_engagement.id = marketing_analysis.post_id WHERE engagement_count > 200;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_analysis WHERE campaign_name LIKE 'Summer%';",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post_id, engagement_score FROM marketing_analysis INNER JOIN social_media_engagement ON marketing_analysis.post_id = social_media_engagement.id;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT id, post, campaign_name FROM social_media_engagement LEFT JOIN marketing_analysis ON social_media_engagement.id = marketing_analysis.post_id;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT * FROM social_media_engagement RIGHT JOIN marketing_analysis ON social_media_engagement.id = marketing_analysis.post_id;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count FROM social_media_engagement WHERE created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT campaign_name, engagement_score FROM marketing_analysis WHERE post_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count, created_at FROM social_media_engagement WHERE engagement_count > 100 AND post LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count, created_at FROM social_media_engagement WHERE engagement_count > 500 ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count, campaign_name, engagement_score FROM social_media_engagement INNER JOIN marketing_analysis ON social_media_engagement.id = marketing_analysis.post_id;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count, campaign_name, engagement_score FROM social_media_engagement LEFT JOIN marketing_analysis ON social_media_engagement.id = marketing_analysis.post_id;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, SUM(engagement_count) AS total_engagement FROM social_media_engagement GROUP BY post;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT campaign_name, engagement_score FROM marketing_analysis WHERE engagement_score > 8;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count FROM social_media_engagement WHERE created_at BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count FROM social_media_engagement WHERE engagement_count > (SELECT AVG(engagement_count) FROM social_media_engagement);",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count, campaign_name, engagement_score FROM social_media_engagement INNER JOIN marketing_analysis ON social_media_engagement.id = marketing_analysis.post_id WHERE engagement_score > 7;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count, campaign_name, engagement_score FROM social_media_engagement INNER JOIN marketing_analysis ON social_media_engagement.id = marketing_analysis.post_id WHERE engagement_score < 5;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count FROM social_media_engagement WHERE post ILIKE '%interesting%' OR post ILIKE '%exciting%';",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count FROM social_media_engagement WHERE engagement_count BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count FROM social_media_engagement WHERE engagement_count > 500 UNION SELECT post, engagement_count FROM social_media_engagement WHERE engagement_count < 50;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count FROM social_media_engagement WHERE post LIKE '%promotion%' ORDER BY engagement_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count FROM social_media_engagement WHERE post NOT LIKE '%spam%' AND engagement_count > 10;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count FROM social_media_engagement WHERE engagement_count = (SELECT MAX(engagement_count) FROM social_media_engagement);",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count FROM social_media_engagement WHERE engagement_count < (SELECT AVG(engagement_count) FROM social_media_engagement);",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    id INT PRIMARY KEY,\n    post TEXT,\n    engagement_count INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE marketing_analysis (\n    id INT PRIMARY KEY,\n    post_id INT,\n    campaign_name TEXT,\n    engagement_score FLOAT,\n    FOREIGN KEY (post_id) REFERENCES social_media_engagement(id)\n);\n\n### STATEMENT\n\nSELECT post, engagement_count FROM social_media_engagement WHERE engagement_count IN (SELECT engagement_count FROM marketing_analysis WHERE engagement_score > 6);",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM social_media_engagement;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, likes FROM social_media_engagement;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT post_id, comments FROM social_media_engagement;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, post_id, likes FROM social_media_engagement;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, post_id, comments FROM social_media_engagement;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM user_profile;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profile;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, email, followers FROM user_profile;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, following FROM user_profile;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_analysis;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT post_id, engagement_score FROM marketing_analysis;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT post_id, marketing_campaign FROM marketing_analysis;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT post_id, analysis_date FROM marketing_analysis;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT engagement_score, marketing_campaign FROM marketing_analysis;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT post_id, engagement_score, marketing_campaign FROM marketing_analysis;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, post_id, likes, comments FROM social_media_engagement WHERE likes > 100;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, post_id, likes, shares FROM social_media_engagement WHERE shares > 50;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, followers FROM user_profile WHERE followers > 1000;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, following FROM user_profile WHERE following > 500;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT post_id, engagement_score, marketing_campaign FROM marketing_analysis WHERE engagement_score > 7.5;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_profile.username, social_media_engagement.likes FROM user_profile JOIN social_media_engagement ON user_profile.user_id = social_media_engagement.user_id WHERE social_media_engagement.likes > 100",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_profile.username, user_profile.followers, social_media_engagement.likes FROM user_profile LEFT JOIN social_media_engagement ON user_profile.user_id = social_media_engagement.user_id WHERE user_profile.followers > 500",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_profile.username, user_profile.email, marketing_analysis.engagement_score FROM user_profile JOIN marketing_analysis ON user_profile.user_id = marketing_analysis.post_id WHERE marketing_analysis.engagement_score > 0.8",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_profile.username, user_profile.email, social_media_engagement.likes, marketing_analysis.marketing_campaign FROM user_profile INNER JOIN social_media_engagement ON user_profile.user_id = social_media_engagement.user_id INNER JOIN marketing_analysis ON social_media_engagement.post_id = marketing_analysis.post_id WHERE marketing_analysis.analysis_date = '2022-10-15'",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_profile.username, user_profile.following, social_media_engagement.comments, marketing_analysis.analysis_date FROM user_profile LEFT JOIN social_media_engagement ON user_profile.user_id = social_media_engagement.user_id LEFT JOIN marketing_analysis ON social_media_engagement.post_id = marketing_analysis.post_id WHERE user_profile.following < 200",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT social_media_engagement.user_id, SUM(likes) AS total_likes FROM social_media_engagement GROUP BY social_media_engagement.user_id HAVING total_likes > 500",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_profile.username, AVG(social_media_engagement.comments) AS avg_comments FROM user_profile JOIN social_media_engagement ON user_profile.user_id = social_media_engagement.user_id GROUP BY user_profile.username",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_profile.username, MAX(social_media_engagement.likes) AS max_likes FROM user_profile JOIN social_media_engagement ON user_profile.user_id = social_media_engagement.user_id GROUP BY user_profile.username",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_profile.username, social_media_engagement.likes, marketing_analysis.analysis_date FROM user_profile JOIN social_media_engagement ON user_profile.user_id = social_media_engagement.user_id JOIN marketing_analysis ON social_media_engagement.post_id = marketing_analysis.post_id WHERE social_media_engagement.likes > 50 AND marketing_analysis.engagement_score > 0.7",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement (\n    user_id INT,\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    followers INT,\n    following INT\n);\n\n\nCREATE TABLE marketing_analysis (\n    post_id INT,\n    engagement_score FLOAT,\n    marketing_campaign VARCHAR(255),\n    analysis_date DATE\n);\n\n### STATEMENT\n\nSELECT user_profile.username, COUNT(social_media_engagement.post_id) AS total_posts FROM user_profile LEFT JOIN social_media_engagement ON user_profile.user_id = social_media_engagement.user_id GROUP BY user_profile.username HAVING total_posts < 5",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT * FROM SocialMediaUsers;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT user_id, followers FROM SocialMediaUsers;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT username FROM SocialMediaUsers WHERE engagement_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT * FROM Posts;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT post_id, user_id, timestamp FROM Posts WHERE likes > 100;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT post_content, likes, comments FROM Posts WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT * FROM AdCampaigns;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT campaign_name, target_audience FROM AdCampaigns WHERE end_date > '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT * FROM Analytics;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT analytics_id, engagement_rate, conversion_rate FROM Analytics WHERE reach > 1000;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT user_id, post_content, likes FROM Posts JOIN SocialMediaUsers ON Posts.user_id = SocialMediaUsers.user_id;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT campaign_name, start_date, end_date FROM AdCampaigns WHERE start_date <= '2022-01-01' AND end_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT post_content, engagement_rate, conversion_rate FROM Posts JOIN Analytics ON Posts.post_id = Analytics.post_id;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT username, followers, engagement_score FROM SocialMediaUsers WHERE followers < 1000;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT campaign_name, target_audience, start_date, end_date FROM AdCampaigns WHERE start_date < end_date;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT * FROM SocialMediaUsers WHERE username LIKE '%user%';",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT post_content, likes, comments FROM Posts WHERE likes = (SELECT MAX(likes) FROM Posts);",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT campaign_name, target_audience, start_date FROM AdCampaigns WHERE start_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT username, followers, engagement_score FROM SocialMediaUsers ORDER BY followers DESC;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT post_content, likes, comments FROM Posts ORDER BY timestamp DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT campaign_name, target_audience, start_date, end_date FROM AdCampaigns ORDER BY start_date ASC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT * FROM SocialMediaUsers;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT username, followers FROM SocialMediaUsers WHERE followers > 1000;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT * FROM Posts WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT campaign_name, start_date, end_date FROM AdCampaigns WHERE start_date < '2022-06-01' AND end_date > '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT SocialMediaUsers.username, Posts.post_content FROM SocialMediaUsers INNER JOIN Posts ON SocialMediaUsers.user_id = Posts.user_id;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT SocialMediaUsers.username, Analytics.engagement_rate FROM SocialMediaUsers LEFT JOIN Analytics ON SocialMediaUsers.user_id = Posts.post_id;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT username, followers, engagement_score FROM SocialMediaUsers WHERE followers > 5000 AND engagement_score > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT * FROM Posts WHERE likes > 100 ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT campaign_name, target_audience, start_date, end_date FROM AdCampaigns WHERE start_date < '2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_posts FROM Posts;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT AVG(likes) AS average_likes, MAX(likes) AS max_likes, MIN(likes) AS min_likes FROM Posts;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT AVG(followers) AS average_followers FROM SocialMediaUsers;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT campaign_name, COUNT(*) AS total_posts FROM AdCampaigns INNER JOIN Posts ON AdCampaigns.campaign_id = Posts.campaign_id GROUP BY campaign_name;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT username, followers, engagement_score FROM SocialMediaUsers WHERE followers > (SELECT AVG(followers) FROM SocialMediaUsers);",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT campaign_name, start_date, end_date FROM AdCampaigns WHERE start_date BETWEEN '2022-04-01' AND '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT SocialMediaUsers.username, SUM(Posts.likes) AS total_likes FROM SocialMediaUsers INNER JOIN Posts ON SocialMediaUsers.user_id = Posts.user_id GROUP BY SocialMediaUsers.username;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT campaign_name, AVG(reach) AS average_reach FROM AdCampaigns INNER JOIN Analytics ON AdCampaigns.campaign_id = Analytics.analytic_id GROUP BY campaign_name;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT * FROM SocialMediaUsers WHERE username LIKE '%john%';",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT post_content, likes, comments FROM Posts WHERE post_id IN (SELECT post_id FROM Analytics WHERE engagement_rate > 0.5);",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaUsers (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    followers INT,\n    engagement_score FLOAT\n);\n\nCREATE TABLE Posts (\n    post_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES SocialMediaUsers(user_id),\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE AdCampaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name STRING,\n    target_audience STRING,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Analytics (\n    analytics_id UUID PRIMARY KEY,\n    post_id UUID REFERENCES Posts(post_id),\n    engagement_rate FLOAT,\n    conversion_rate FLOAT,\n    reach INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT target_audience FROM AdCampaigns;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM social_media_accounts",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, followers_count FROM social_media_accounts",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM posts",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT post_id, account_id, created_at FROM posts",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM comments",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT commenter_name, comment_text FROM comments",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM engagements",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT post_id, account_id, reaction_type FROM engagements",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM marketing_data",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT campaign_name, reach_count FROM marketing_data",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM social_media_accounts WHERE followers_count > 10000",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, followers_count FROM social_media_accounts WHERE followers_count > 10000",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM posts WHERE likes_count > 500",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT post_id, account_id, likes_count FROM posts WHERE likes_count > 500",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM comments WHERE commenter_name = 'Alice'",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT commenter_name, comment_text FROM comments WHERE commenter_name = 'Bob'",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM engagements WHERE reaction_type = 'like'",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT post_id, account_id, reaction_type FROM engagements WHERE reaction_type = 'comment'",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM marketing_data WHERE reach_count > 5000",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT campaign_name, conversion_rate FROM marketing_data WHERE conversion_rate >= 0.5",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM social_media_accounts;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, followers_count FROM social_media_accounts WHERE followers_count > 1000;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, engagement_rate FROM social_media_accounts WHERE engagement_rate >= 0.05;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, followers_count, engagement_rate FROM social_media_accounts WHERE followers_count > 5000 AND engagement_rate >= 0.07;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM posts INNER JOIN social_media_accounts ON posts.account_id = social_media_accounts.id;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT post_content, likes_count, comments_count FROM posts WHERE comments_count > 50;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT post_content, likes_count, comments_count FROM posts WHERE likes_count > 100 AND comments_count > 20;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT posts.post_content, engagements.reaction_type FROM posts INNER JOIN engagements ON posts.post_id = engagements.post_id WHERE engagements.reaction_type = 'like';",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, campaign_name, reach_count FROM social_media_accounts s INNER JOIN marketing_data m ON s.id = m.account_id WHERE m.reach_count > 5000;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT post_content, commenter_name, comment_text FROM posts p INNER JOIN comments c ON p.post_id = c.post_id;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, followers_count, engagement_rate FROM social_media_accounts s LEFT JOIN marketing_data m ON s.id = m.account_id;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT campaign_name, reach_count, conversion_rate FROM marketing_data WHERE conversion_rate >= 0.1;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM posts WHERE created_at BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, engagement_rate FROM social_media_accounts WHERE engagement_rate < 0.03 OR followers_count < 1000;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, engagement_rate, reach_count FROM social_media_accounts s LEFT JOIN marketing_data m ON s.id = m.account_id WHERE m.reach_count > 3000;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, followers_count, engagement_rate FROM social_media_accounts WHERE account_name LIKE 'I%';",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, followers_count, engagement_rate FROM social_media_accounts WHERE account_name LIKE '%Media%';",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM engagements WHERE engagement_time >= '2022-08-01';",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, campaign_name, conversion_rate FROM social_media_accounts s INNER JOIN marketing_data m ON s.id = m.account_id WHERE m.conversion_rate > 0.05;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, followers_count, engagement_rate FROM social_media_accounts ORDER BY followers_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE social_media_accounts (\n    id INT PRIMARY KEY,\n    account_name VARCHAR(255),\n    followers_count INT,\n    engagement_rate FLOAT\n)\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    account_id INT,\n    post_content TEXT,\n    likes_count INT,\n    comments_count INT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n    comment_id INT PRIMARY KEY,\n    post_id INT,\n    commenter_name VARCHAR(255),\n    comment_text TEXT,\n    created_at TIMESTAMP\n)\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    post_id INT,\n    account_id INT,\n    reaction_type ENUM('like', 'comment', 'share'),\n    engagement_time TIMESTAMP\n)\n\nCREATE TABLE marketing_data (\n    data_id INT PRIMARY KEY,\n    account_id INT,\n    campaign_name VARCHAR(255),\n    reach_count INT,\n    conversion_rate FLOAT\n)\n\n### STATEMENT\n\nSELECT account_name, followers_count, engagement_rate FROM social_media_accounts ORDER BY engagement_rate ASC;"
]