[
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT first_name, last_name FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, email_address FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT first_name, last_name FROM CustomerContactInformation WHERE email_address = 'example@example.com';",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation WHERE phone_number LIKE '%1234%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT DISTINCT email_address FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, email_address FROM CustomerContactInformation ORDER BY last_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation WHERE first_name LIKE 'A%' AND last_name LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, CONCAT(first_name, ' ', last_name) AS full_name FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation WHERE email_address IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT email_address) FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT MAX(email_address) FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT MIN(phone_number) FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation WHERE first_name = 'John' OR last_name = 'Doe';",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation WHERE customer_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, LENGTH(first_name) AS name_length FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, email_address FROM CustomerContactInformation WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, phone_number FROM CustomerContactInformation WHERE customer_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation WHERE email_address LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation WHERE last_name = 'Smith';",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, email_address FROM CustomerContactInformation WHERE phone_number LIKE '%123%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM CustomerContactInformation WHERE customer_id = 5 OR customer_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT first_name, last_name FROM CustomerContactInformation WHERE first_name <> last_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation ORDER BY last_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerContactInformation WHERE customer_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, CONCAT(first_name, ' ', last_name) AS full_name FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT DISTINCT email_address FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT email_address) FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM CustomerContactInformation WHERE first_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT MAX(customer_id) FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT MIN(customer_id) FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT SUM(customer_id) FROM CustomerContactInformation;",
  "### TABLEDATA\n\nCREATE TABLE CustomerContactInformation (\n    customer_id INT PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    email_address STRING,\n    phone_number STRING\n)\n\n### STATEMENT\n\nSELECT first_name, last_name FROM CustomerContactInformation WHERE customer_id = (SELECT MAX(customer_id) FROM CustomerContactInformation);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT campaign_name, start_date FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT campaign_id, end_date FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM campaigns WHERE campaign_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, name FROM customers WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT campaign_id, campaign_name FROM campaigns WHERE start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, email FROM customers WHERE customer_id BETWEEN 1 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY customer_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) FROM customers GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers JOIN campaigns ON customers.customer_id = campaigns.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers LEFT JOIN campaigns ON customers.customer_id = campaigns.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email FROM customers JOIN campaigns ON customers.customer_id = campaigns.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE name = 'John' AND email = 'john@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM campaigns WHERE start_date <= '2022-06-30' AND end_date >= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email FROM customers INNER JOIN campaigns ON customers.customer_id = campaigns.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE name = 'Alice' OR name = 'Bob';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE name LIKE '%Doe%' AND email LIKE '%example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) FROM customers GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) FROM customers GROUP BY customer_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers UNION SELECT * FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id BETWEEN 1 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(255),\n  start_date DATE,\n  end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY customer_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT * FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT campaign_id, campaign_name FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT * FROM contacts;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT contact_id, customer_id, campaign_id FROM contacts;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, cm.campaign_name FROM customers c JOIN contacts con ON c.customer_id = con.customer_id JOIN campaigns cm ON con.campaign_id = cm.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, cm.campaign_name, con.contact_date FROM customers c JOIN contacts con ON c.customer_id = con.customer_id JOIN campaigns cm ON con.campaign_id = cm.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, cm.campaign_id, cm.campaign_name FROM customers c, campaigns cm, contacts con WHERE c.customer_id = con.customer_id AND con.campaign_id = cm.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, cm.campaign_name FROM customers c LEFT JOIN contacts con ON c.customer_id = con.customer_id LEFT JOIN campaigns cm ON con.campaign_id = cm.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, cm.campaign_name FROM customers c RIGHT JOIN contacts con ON c.customer_id = con.customer_id RIGHT JOIN campaigns cm ON con.campaign_id = cm.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT MAX(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT MIN(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT MAX(campaign_id) FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT MIN(campaign_id) FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM contacts;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT MAX(contact_id) FROM contacts;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT MIN(contact_id) FROM contacts;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, email FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customers ORDER BY last_name, first_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customers WHERE first_name = 'John' AND last_name = 'Doe';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT campaign_id, campaign_name, start_date, end_date FROM campaigns WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT campaign_id, campaign_name, start_date, end_date FROM campaigns WHERE end_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT campaign_id, campaign_name, start_date, end_date FROM campaigns WHERE campaign_name LIKE '%Summer%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT contact_id, customer_id, campaign_id, contact_date FROM contacts WHERE customer_id = 1 AND campaign_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, cm.campaign_name, ct.contact_date FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, cm.campaign_name, ct.contact_date FROM customers c LEFT JOIN contacts ct ON c.customer_id = ct.customer_id LEFT JOIN campaigns cm ON ct.campaign_id = cm.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, cm.campaign_name, ct.contact_date FROM customers c RIGHT JOIN contacts ct ON c.customer_id = ct.customer_id RIGHT JOIN campaigns cm ON ct.campaign_id = cm.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT c.customer_id, c.first_name, c.last_name, cm.campaign_name, ct.contact_date FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id WHERE ct.contact_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, cm.campaign_name, ct.contact_date FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id GROUP BY c.customer_id, cm.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, COUNT(*) AS total_contacts FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT cm.campaign_name, COUNT(*) AS total_contacts FROM campaigns cm JOIN contacts ct ON cm.campaign_id = ct.campaign_id GROUP BY cm.campaign_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, COALESCE(SUM(DATEDIFF(ct.contact_date, cm.start_date)), 0) AS total_days_active FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, SUM(DATEDIFF(ct.contact_date, cm.start_date)) AS total_days_active FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id GROUP BY c.customer_id HAVING total_days_active > 30;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, AVG(DATEDIFF(ct.contact_date, cm.start_date)) AS avg_days_active FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id GROUP BY c.customer_id HAVING avg_days_active > 15;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT UNIQUE\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n  contact_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  contact_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\n### STATEMENT\n\nSELECT c1.customer_id AS customer_id_1, c1.first_name AS first_name_1, c2.customer_id AS customer_id_2, c2.first_name AS first_name_2 FROM customers c1 CROSS JOIN customers c2 WHERE c1.customer_id < c2.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT campaign_name, start_date, end_date FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM contacts;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT contact_id, customer_id, campaign_id FROM contacts;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM subscriptions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, email_notifications FROM subscriptions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT customers.first_name, customers.last_name, campaigns.campaign_name FROM customers JOIN contacts ON customers.customer_id = contacts.customer_id JOIN campaigns ON contacts.campaign_id = campaigns.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT customers.customer_id, customers.first_name, campaigns.campaign_name FROM customers JOIN contacts ON customers.customer_id = contacts.customer_id JOIN campaigns ON contacts.campaign_id = campaigns.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT customers.first_name, COUNT(subscriptions.subscription_id) AS num_subscriptions FROM customers LEFT JOIN subscriptions ON customers.customer_id = subscriptions.customer_id GROUP BY customers.first_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT campaigns.campaign_name, COUNT(contacts.contact_id) AS num_contacts FROM campaigns LEFT JOIN contacts ON campaigns.campaign_id = contacts.campaign_id GROUP BY campaigns.campaign_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT customers.first_name, subscriptions.email_notifications FROM customers JOIN subscriptions ON customers.customer_id = subscriptions.customer_id WHERE subscriptions.email_notifications = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT customers.first_name, campaigns.campaign_name, subscriptions.email_notifications FROM customers JOIN contacts ON customers.customer_id = contacts.customer_id JOIN campaigns ON contacts.campaign_id = campaigns.campaign_id JOIN subscriptions ON customers.customer_id = subscriptions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE first_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM campaigns WHERE start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM contacts WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM subscriptions WHERE email_notifications = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT customers.first_name, campaigns.campaign_name FROM customers JOIN contacts ON customers.customer_id = contacts.customer_id JOIN campaigns ON contacts.campaign_id = campaigns.campaign_id WHERE campaigns.start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT customers.first_name, campaigns.campaign_name FROM customers JOIN contacts ON customers.customer_id = contacts.customer_id JOIN campaigns ON contacts.campaign_id = campaigns.campaign_id WHERE customers.first_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE first_name = 'John';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customers ORDER BY last_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE first_name = 'Alice' AND last_name = 'Smith';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM campaigns WHERE start_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, cm.campaign_name FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, s.email_notifications FROM customers c JOIN subscriptions s ON c.customer_id = s.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, cm.campaign_name, s.email_notifications FROM customers c LEFT JOIN contacts ct ON c.customer_id = ct.customer_id LEFT JOIN campaigns cm ON ct.campaign_id = cm.campaign_id LEFT JOIN subscriptions s ON c.customer_id = s.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers c WHERE NOT EXISTS (SELECT * FROM subscriptions s WHERE c.customer_id = s.customer_id);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, cm.campaign_name FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id WHERE c.first_name IN ('Alice', 'Bob');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, COUNT(s.subscription_id) AS num_subscriptions FROM customers c LEFT JOIN subscriptions s ON c.customer_id = s.customer_id GROUP BY c.customer_id, c.first_name, c.last_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT cm.campaign_name, COUNT(DISTINCT ct.customer_id) AS num_customers FROM campaigns cm JOIN contacts ct ON cm.campaign_id = ct.campaign_id GROUP BY cm.campaign_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, cm.campaign_name, s.email_notifications, CASE WHEN s.email_notifications THEN 'Subscribed' ELSE 'Not Subscribed' END AS subscription_status FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id JOIN subscriptions s ON c.customer_id = s.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, COUNT(cm.campaign_id) AS num_campaigns FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id GROUP BY c.customer_id, c.first_name, c.last_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, cm.campaign_name, s.email_notifications FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id JOIN subscriptions s ON c.customer_id = s.customer_id WHERE s.email_notifications = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT cm.campaign_name, AVG(DATE_PART('day', cm.end_date - cm.start_date)) AS average_duration_days FROM campaigns cm GROUP BY cm.campaign_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, COUNT(DISTINCT cm.campaign_id) AS num_campaigns FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id GROUP BY c.customer_id, c.first_name, c.last_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, s.email_notifications, CASE WHEN s.email_notifications THEN COUNT(cm.campaign_id) ELSE 0 END AS num_campaigns FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN subscriptions s ON c.customer_id = s.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, c.email, COUNT(cm.campaign_id) AS num_campaigns FROM customers c JOIN contacts ct ON c.customer_id = ct.customer_id JOIN campaigns cm ON ct.campaign_id = cm.campaign_id GROUP BY c.customer_id, c.first_name, c.last_name, c.email;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE campaigns (\n    campaign_id SERIAL PRIMARY KEY,\n    campaign_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\nCREATE TABLE contacts (\n    contact_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    campaign_id INT NOT NULL\n);\n\nCREATE TABLE subscriptions (\n    subscription_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    email_notifications BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, CASE WHEN s.email_notifications THEN 'Yes' ELSE 'No' END AS receives_notifications FROM customers c LEFT JOIN subscriptions s ON c.customer_id = s.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customers.first_name, campaigns.campaign_name FROM customers JOIN subscriptions ON customers.customer_id = subscriptions.customer_id JOIN campaigns ON subscriptions.campaign_id = campaigns.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT count(*) FROM subscriptions WHERE campaign_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, campaign_id FROM subscriptions WHERE customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT list_name FROM contact_list WHERE list_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT list_name FROM contact_list WHERE list_description LIKE '%marketing%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, action_type FROM contact_history WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(history_id) FROM contact_history;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM subscriptions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(start_date) FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT campaign_name FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT campaign_id) FROM subscriptions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT last_name, COUNT(*) FROM customers GROUP BY last_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_subscriptions FROM subscriptions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(TIMESTAMPDIFF(HOUR, start_date, end_date)) AS avg_duration FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(timestamp) AS last_action_time FROM contact_history GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customers WHERE last_name LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM subscriptions WHERE customer_id IN (SELECT customer_id FROM customers WHERE first_name = 'John');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM subscriptions ORDER BY customer_id DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customers.customer_id, customers.first_name, campaigns.campaign_name FROM customers JOIN subscriptions ON customers.customer_id = subscriptions.customer_id JOIN campaigns ON subscriptions.campaign_id = campaigns.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT campaigns.campaign_name, COUNT(subscriptions.customer_id) AS total_subscriptions FROM campaigns LEFT JOIN subscriptions ON campaigns.campaign_id = subscriptions.campaign_id GROUP BY campaigns.campaign_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM customers WHERE first_name LIKE '%A%' AND last_name LIKE '%B%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customers.first_name, campaigns.campaign_name, subscriptions.campaign_id FROM customers JOIN subscriptions ON customers.customer_id = subscriptions.customer_id JOIN campaigns ON subscriptions.campaign_id = campaigns.campaign_id WHERE customers.customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(campaign_id) AS total_campaigns FROM subscriptions GROUP BY customer_id HAVING COUNT(campaign_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT campaign_name FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customers WHERE customer_id IN (SELECT customer_id FROM subscriptions WHERE campaign_id = 3);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM contact_list ORDER BY list_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM subscriptions);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, timestamp FROM customers JOIN contact_history ON customers.customer_id = contact_history.customer_id WHERE action_type = 'click';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT list_name, list_description FROM contact_list WHERE list_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, campaign_id, action_type FROM contact_history WHERE timestamp BETWEEN '2021-01-01' AND '2021-02-28';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(customer_id) AS max_customer_id FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) AS average_customer_id FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT CONCAT(first_name, ' ', last_name) AS full_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, campaign_name, action_type FROM customers JOIN contact_history ON customers.customer_id = contact_history.customer_id JOIN campaigns ON contact_history.campaign_id = campaigns.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = (SELECT MAX(customer_id) FROM customers);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE campaigns (\n  campaign_id INT PRIMARY KEY,\n  campaign_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE subscriptions (\n  subscription_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT\n);\n\nCREATE TABLE contact_list (\n  list_id INT PRIMARY KEY,\n  list_name VARCHAR(100),\n  list_description VARCHAR(255)\n);\n\nCREATE TABLE contact_history (\n  history_id INT PRIMARY KEY,\n  customer_id INT,\n  campaign_id INT,\n  action_type VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, email FROM customers WHERE customer_id = (SELECT customer_id FROM subscriptions WHERE campaign_id = (SELECT MAX(campaign_id) FROM subscriptions));"
]