[
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, email_address FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT interaction_type FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE email_address = 'example@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE interaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type FROM customer_interactions WHERE interaction_type = 'click';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE interaction_timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, email_address FROM customer_interactions WHERE email_address LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions ORDER BY interaction_timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(interaction_timestamp) FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT interaction_type FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) FROM customer_interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, MIN(interaction_timestamp) FROM customer_interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(customer_id), interaction_type FROM customer_interactions WHERE interaction_type = 'click' GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS interaction_count FROM customer_interactions GROUP BY customer_id HAVING interaction_count > 2;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, email_address FROM customer_interactions WHERE interaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, email_address, interaction_timestamp FROM customer_interactions WHERE interaction_timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT interaction_type FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM customer_interactions WHERE interaction_type = 'click';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(interaction_timestamp) FROM customer_interactions WHERE customer_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_interactions FROM customer_interactions GROUP BY customer_id HAVING total_interactions > 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions ORDER BY interaction_timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, AVG(DATEDIFF(CURRENT_DATE, interaction_timestamp)) AS average_days_since_last_interaction FROM customer_interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_interactions FROM customer_interactions WHERE interaction_type IN ('click', 'view') GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, COUNT(*) AS interaction_count FROM customer_interactions GROUP BY customer_id, interaction_type HAVING interaction_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE email_address LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, DATE_FORMAT(interaction_timestamp, '%Y-%m-%d') AS interaction_date FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_interactions FROM customer_interactions WHERE MONTH(interaction_timestamp) = 1 GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, DATE_FORMAT(interaction_timestamp, '%Y-%m-%d') AS interaction_date FROM customer_interactions WHERE interaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, COUNT(*) AS interaction_count FROM customer_interactions WHERE MONTH(interaction_timestamp) = 1 GROUP BY customer_id, interaction_type HAVING interaction_count > 3;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, interaction_timestamp FROM customer_interactions WHERE YEAR(interaction_timestamp) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, interaction_timestamp FROM customer_interactions WHERE interaction_timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n  customer_id INT PRIMARY KEY,\n  email_address VARCHAR(255),\n  interaction_type VARCHAR(50),\n  interaction_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, interaction_timestamp FROM customer_interactions WHERE interaction_timestamp >= '2022-01-01' AND interaction_timestamp < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_emails",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address FROM customer_emails",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT interaction_time, interaction_type FROM customer_emails",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM email_engagement",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT email_subject, sent_time FROM email_engagement",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT open_count, click_count FROM email_engagement",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address, interaction_time FROM customer_emails",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT email_id, email_subject, open_count FROM email_engagement",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_emails WHERE customer_id = 123",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT email_address, interaction_type FROM customer_emails WHERE customer_id IN (1, 2, 3)",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM email_engagement WHERE open_count > 10",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT email_id, email_subject, click_count FROM email_engagement WHERE click_count < 5",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address FROM customer_emails WHERE interaction_time < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT email_id, email_subject FROM email_engagement WHERE sent_time BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id FROM customer_emails ORDER BY interaction_time DESC",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT email_id FROM email_engagement ORDER BY open_count ASC",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_emails LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM email_engagement LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT AVG(open_count) FROM email_engagement",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT MAX(open_count), MIN(click_count) FROM email_engagement",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM customer_emails",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_emails WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT email_address, interaction_time FROM customer_emails WHERE interaction_type = 'purchase' ORDER BY interaction_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address, interaction_time FROM customer_emails WHERE interaction_time > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address, interaction_time FROM customer_emails WHERE interaction_type = 'interaction' AND interaction_time BETWEEN '2021-01-01' AND '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_emails FROM customer_emails;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(NOW(), interaction_time)) AS avg_interaction_age FROM customer_emails;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address, open_count, click_count FROM customer_emails JOIN email_engagement ON customer_id = email_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT c.*, e.email_subject FROM customer_emails c JOIN email_engagement e ON c.customer_id = e.email_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.email_address, e.open_count, e.click_count FROM customer_emails c INNER JOIN email_engagement e ON c.customer_id = e.email_id WHERE e.open_count > 0 AND e.click_count > 0;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, e.email_subject, COUNT(*) AS total_interactions FROM customer_emails c JOIN email_engagement e ON c.customer_id = e.email_id GROUP BY c.customer_id, e.email_subject;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address, interaction_time, interaction_type FROM customer_emails UNION SELECT email_id, email_subject, sent_time, 'email' AS interaction_type FROM email_engagement;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address FROM customer_emails WHERE customer_id NOT IN (SELECT email_id FROM email_engagement);",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address FROM customer_emails WHERE customer_id IN (SELECT email_id FROM email_engagement WHERE click_count > 10);",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address FROM customer_emails WHERE customer_id IN (SELECT email_id FROM email_engagement WHERE open_count > 5);",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT e.*, c.customer_id, c.interaction_time FROM email_engagement e LEFT JOIN customer_emails c ON e.email_id = c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT e.*, c.customer_id, c.interaction_time FROM email_engagement e RIGHT JOIN customer_emails c ON e.email_id = c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(open_count) AS total_opens, SUM(click_count) AS total_clicks FROM customer_emails JOIN email_engagement ON customer_id = email_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(open_count) AS avg_opens, AVG(click_count) AS avg_clicks FROM customer_emails JOIN email_engagement ON customer_id = email_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address, interaction_time, interaction_type, 'customer' AS entity_type FROM customer_emails UNION ALL SELECT email_id, email_subject, sent_time, 'email' AS interaction_type, 'email' AS entity_type FROM email_engagement;",
  "### TABLEDATA\n\nCREATE TABLE customer_emails (\n    customer_id INT PRIMARY KEY,\n    email_address VARCHAR(255),\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50)\n);\n\nCREATE TABLE email_engagement (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    sent_time TIMESTAMP,\n    open_count INT,\n    click_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address, interaction_time, interaction_type FROM customer_emails WHERE customer_id = (SELECT MAX(customer_id) FROM customer_emails);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM emails;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT email_subject, email_body FROM emails;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM email_engagement;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT engagement_id, customer_id, email_id FROM email_engagement;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT engagement_type, engagement_date FROM email_engagement;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email_subject FROM customers INNER JOIN emails ON customers.customer_id = emails.email_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email_subject, engagement_type FROM customers INNER JOIN emails ON customers.customer_id = emails.email_id INNER JOIN email_engagement ON customers.customer_id = email_engagement.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM emails WHERE send_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM email_engagement WHERE engagement_type = 'Opened';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email_subject FROM customers WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT email_subject, email_body FROM emails WHERE email_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email_subject, engagement_type FROM customers INNER JOIN emails ON customers.customer_id = emails.email_id WHERE customers.customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY customer_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM emails ORDER BY send_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM email_engagement ORDER BY engagement_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email_subject FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email_subject, engagement_type FROM customers INNER JOIN emails ON customers.customer_id = emails.email_id WHERE customers.customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE phone_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT e.email_subject, e.email_body, ce.engagement_type FROM emails e INNER JOIN email_engagement ce ON e.email_id = ce.email_id WHERE ce.customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.email_subject, ce.engagement_type, ce.engagement_date FROM customers c INNER JOIN email_engagement ce ON c.customer_id = ce.customer_id INNER JOIN emails e ON ce.email_id = e.email_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.email_subject, ce.engagement_type, ce.engagement_date FROM customers c INNER JOIN email_engagement ce ON c.customer_id = ce.customer_id INNER JOIN emails e ON ce.email_id = e.email_id WHERE c.customer_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.email_subject, ce.engagement_type, ce.engagement_date FROM customers c INNER JOIN email_engagement ce ON c.customer_id = ce.customer_id INNER JOIN emails e ON ce.email_id = e.email_id WHERE c.customer_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) as total_engagements, ce.customer_id FROM email_engagement ce GROUP BY ce.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(engagement_date) as last_engagement_date FROM email_engagement WHERE customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) as total_engagements FROM email_engagement GROUP BY customer_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(engagement_date) as first_engagement_date FROM email_engagement GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM email_engagement;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT e.email_subject, e.send_date, c.customer_name FROM emails e INNER JOIN email_engagement ce ON e.email_id = ce.email_id INNER JOIN customers c ON ce.customer_id = c.customer_id WHERE c.customer_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.email_subject, ce.engagement_type, ce.engagement_date FROM customers c LEFT JOIN email_engagement ce ON c.customer_id = ce.customer_id LEFT JOIN emails e ON ce.email_id = e.email_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(*) as total_engagements FROM customers c LEFT JOIN email_engagement ce ON c.customer_id = ce.customer_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.email_subject, ce.engagement_type, ce.engagement_date FROM customers c LEFT JOIN email_engagement ce ON c.customer_id = ce.customer_id LEFT JOIN emails e ON ce.email_id = e.email_id WHERE ce.customer_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE email IN (SELECT email FROM emails WHERE send_date > '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(LENGTH(e.email_body)) as total_characters FROM emails e INNER JOIN email_engagement ce ON e.email_id = ce.email_id INNER JOIN customers c ON ce.customer_id = c.customer_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    email_subject VARCHAR(255),\n    email_body TEXT,\n    send_date TIMESTAMP\n);\n\nCREATE TABLE email_engagement (\n    engagement_id INT PRIMARY KEY,\n    customer_id INT,\n    email_id INT,\n    engagement_type VARCHAR(20),\n    engagement_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(DISTINCT e.email_id) as total_emails_sent FROM emails e INNER JOIN email_engagement ce ON e.email_id = ce.email_id INNER JOIN customers c ON ce.customer_id = c.customer_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT first_name, last_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM marketing_emails;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT subject, send_date FROM marketing_emails;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM email_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT interaction_date, interaction_type FROM email_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM email_clicks;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT click_date, link_clicked FROM email_clicks;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customers WHERE email = 'example@email.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT email_id, subject FROM marketing_emails WHERE send_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type FROM email_interactions WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT click_id, link_clicked FROM email_clicks WHERE click_date >= '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customers WHERE first_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM marketing_emails WHERE opened = true;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM email_interactions WHERE interaction_type = 'clicked';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM email_clicks WHERE link_clicked LIKE '%example.com%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customers ORDER BY last_name, first_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT count(*) AS total_customers FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT avg(opened::int) AS average_open_rate FROM marketing_emails;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT distinct interaction_type FROM email_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, count(*) AS total_interactions FROM email_interactions GROUP BY customer_id HAVING count(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM marketing_emails WHERE opened = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT email_id, subject, body FROM marketing_emails WHERE send_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM email_interactions WHERE interaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, interaction_date FROM email_interactions WHERE interaction_type = 'click';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM email_clicks WHERE click_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM email_interactions WHERE interaction_type = 'open';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_interactions FROM email_interactions GROUP BY customer_id HAVING total_interactions > 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_clicks FROM email_interactions JOIN email_clicks ON email_interactions.interaction_id = email_clicks.interaction_id WHERE click_date > '2022-01-01' GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, AVG(DATE_PART('day', interaction_date::timestamp) - DATE_PART('day', send_date::timestamp)) AS avg_response_time FROM email_interactions JOIN marketing_emails ON email_interactions.email_id = marketing_emails.email_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_clicks, SUM(CASE WHEN interaction_type = 'open' THEN 1 ELSE 0 END) AS total_opens FROM email_interactions WHERE interaction_date > '2022-01-01' GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, opened, send_date, click_date FROM customers JOIN email_interactions ON customers.customer_id = email_interactions.customer_id JOIN email_clicks ON email_interactions.interaction_id = email_clicks.interaction_id WHERE click_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, AVG(CASE WHEN interaction_type = 'click' THEN 1 ELSE 0 END) AS click_rate FROM email_interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT email_id, subject, COUNT(*) AS total_clicks FROM marketing_emails JOIN email_interactions ON marketing_emails.email_id = email_interactions.email_id JOIN email_clicks ON email_interactions.interaction_id = email_clicks.interaction_id GROUP BY email_id, subject;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, MIN(interaction_date) AS first_interaction_date, MAX(interaction_date) AS last_interaction_date FROM email_interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(DISTINCT email_id) AS total_emails_sent FROM email_interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, ARRAY_AGG(DISTINCT subject) AS email_subjects FROM email_interactions JOIN marketing_emails ON email_interactions.email_id = marketing_emails.email_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, COUNT(*) AS total_interactions FROM email_interactions GROUP BY customer_id, interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT recipient_ids[1] AS main_recipient, COUNT(*) AS total_interactions FROM marketing_emails GROUP BY main_recipient ORDER BY total_interactions DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100)\n)\n\nCREATE TABLE marketing_emails (\n  email_id SERIAL PRIMARY KEY,\n  subject VARCHAR(255),\n  body TEXT,\n  send_date TIMESTAMP,\n  recipient_ids UUID[],\n  opened BOOLEAN\n)\n\nCREATE TABLE email_interactions (\n  interaction_id SERIAL PRIMARY KEY,\n  email_id INT REFERENCES marketing_emails(email_id),\n  customer_id UUID REFERENCES customers(customer_id),\n  interaction_type VARCHAR(50),\n  interaction_date TIMESTAMP\n)\n\nCREATE TABLE email_clicks (\n  click_id SERIAL PRIMARY KEY,\n  interaction_id INT REFERENCES email_interactions(interaction_id),\n  link_clicked TEXT,\n  click_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT opened, AVG(CASE WHEN interaction_type = 'click' THEN 1 ELSE 0 END) AS click_rate FROM email_interactions GROUP BY opened ORDER BY click_rate DESC LIMIT 5;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Customer_Interactions;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Emails_Sent;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Email_Responses;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Email_Clicks;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Email_Conversions;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT email FROM Customer_Interactions WHERE customer_id = 123;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT count(*) FROM Emails_Sent WHERE sent_date = '2022-01-01';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT response_time FROM Email_Responses WHERE response_type = 'positive';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Email_Clicks WHERE click_timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-01-01 23:59:59';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT conversion_rate FROM Email_Conversions WHERE conversion_date >= '2022-01-01';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT customer_id, email_subject FROM Customer_Interactions WHERE interaction_type = 'email';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT count(*) FROM Emails_Sent WHERE sent_date = '2022-02-01';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT response_date, response_time FROM Email_Responses WHERE response_type = 'negative';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Email_Clicks WHERE email_id = 456;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT DISTINCT email FROM Customer_Interactions WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT max(click_time) FROM Email_Clicks;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Email_Conversions WHERE conversion_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT customer_id, response_type FROM Email_Responses WHERE response_date = '2022-02-15';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Customer_Interactions WHERE customer_id = 456 AND interaction_type = 'email';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT avg(conversion_rate) FROM Email_Conversions WHERE conversion_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT distinct email_subject FROM Customer_Interactions WHERE interaction_date = '2022-01-01';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Customer_Interactions WHERE interaction_type='purchase';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Customer_Interactions WHERE date >= '2022-01-01' AND date < '2022-02-01' ORDER BY date DESC;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Customer_Interactions WHERE customer_id = 123456;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) FROM Customer_Interactions GROUP BY customer_id HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Emails_Sent JOIN Email_Responses ON Emails_Sent.email_id = Email_Responses.email_id;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT Email_Responses.email_id, COUNT(*) FROM Email_Responses JOIN Email_Clicks ON Email_Responses.email_id = Email_Clicks.email_id GROUP BY Email_Responses.email_id;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT Email_Responses.email_id, SUM(Email_Clicks.clicks) FROM Email_Responses JOIN Email_Clicks ON Email_Responses.email_id = Email_Clicks.email_id GROUP BY Email_Responses.email_id;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT Email_Responses.email_id, AVG(Email_Clicks.clicks) FROM Email_Responses JOIN Email_Clicks ON Email_Responses.email_id = Email_Clicks.email_id GROUP BY Email_Responses.email_id;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT email_id, COUNT(*) FROM Email_Conversions GROUP BY email_id HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Emails_Sent WHERE date >= '2022-01-01' AND date < '2022-02-01';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Email_Responses WHERE response_type='positive' ORDER BY date DESC;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Email_Clicks WHERE clicks > 10 ORDER BY clicks DESC;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Email_Conversions WHERE conversion_type='purchase' ORDER BY date DESC;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) FROM Customer_Interactions WHERE interaction_type='visit' GROUP BY customer_id HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT Customer_Interactions.date, COUNT(*) FROM Emails_Sent JOIN Customer_Interactions ON Emails_Sent.customer_id = Customer_Interactions.customer_id GROUP BY Customer_Interactions.date;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT customer_id, AVG(Customer_Interactions.rating) FROM Customer_Interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT Customer_Interactions.customer_id, AVG(Customer_Interactions.rating) FROM Customer_Interactions JOIN Email_Conversions ON Customer_Interactions.customer_id = Email_Conversions.customer_id GROUP BY Customer_Interactions.customer_id;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) FROM Email_Responses JOIN Email_Conversions ON Email_Responses.email_id = Email_Conversions.email_id GROUP BY customer_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Emails_Sent WHERE email_type='newsletter';",
  "### TABLEDATA\n\nCustomer_Interactions\n\nEmails_Sent\n\nEmail_Responses\n\nEmail_Clicks\n\nEmail_Conversions\n\n### STATEMENT\n\nSELECT * FROM Email_Responses WHERE response_type='negative' ORDER BY date DESC;"
]