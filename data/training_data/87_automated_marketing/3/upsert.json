[
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (1, 'example1@example.com', 'criteria1', '2022-01-01 10:00:00', TRUE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (2, 'example2@example.com', 'criteria2', '2022-01-02 10:00:00', FALSE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (3, 'example3@example.com', 'criteria3', '2022-01-03 10:00:00', TRUE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (4, 'example4@example.com', 'criteria4', '2022-01-04 10:00:00', FALSE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (5, 'example5@example.com', 'criteria5', '2022-01-05 10:00:00', TRUE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (6, 'example6@example.com', 'criteria6', '2022-01-06 10:00:00', FALSE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (7, 'example7@example.com', 'criteria7', '2022-01-07 10:00:00', TRUE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (8, 'example8@example.com', 'criteria8', '2022-01-08 10:00:00', FALSE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (9, 'example9@example.com', 'criteria9', '2022-01-09 10:00:00', TRUE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (10, 'example10@example.com', 'criteria10', '2022-01-10 10:00:00', FALSE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (11, 'example11@example.com', 'criteria11', '2022-01-11 10:00:00', TRUE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (12, 'example12@example.com', 'criteria12', '2022-01-12 10:00:00', FALSE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (13, 'example13@example.com', 'criteria13', '2022-01-13 10:00:00', TRUE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (14, 'example14@example.com', 'criteria14', '2022-01-14 10:00:00', FALSE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (15, 'example15@example.com', 'criteria15', '2022-01-15 10:00:00', TRUE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (16, 'example16@example.com', 'criteria16', '2022-01-16 10:00:00', FALSE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (17, 'example17@example.com', 'criteria17', '2022-01-17 10:00:00', TRUE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (18, 'example18@example.com', 'criteria18', '2022-01-18 10:00:00', FALSE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (19, 'example19@example.com', 'criteria19', '2022-01-19 10:00:00', TRUE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (20, 'example20@example.com', 'criteria20', '2022-01-20 10:00:00', FALSE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (1, 'example1@example.com', 'Segment A', NOW(), TRUE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (2, 'example2@example.com', 'Segment B', NOW(), FALSE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (3, 'example3@example.com', 'Segment C', NOW(), TRUE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (4, 'example4@example.com', 'Segment A', NOW(), FALSE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (5, 'example5@example.com', 'Segment B', NOW(), TRUE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (6, 'example6@example.com', 'Segment C', NOW(), FALSE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (7, 'example7@example.com', 'Segment A', NOW(), TRUE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (8, 'example8@example.com', 'Segment B', NOW(), FALSE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (9, 'example9@example.com', 'Segment C', NOW(), TRUE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (10, 'example10@example.com', 'Segment A', NOW(), FALSE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (11, 'example11@example.com', 'Segment B', NOW(), TRUE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (12, 'example12@example.com', 'Segment C', NOW(), FALSE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (13, 'example13@example.com', 'Segment A', NOW(), TRUE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (14, 'example14@example.com', 'Segment B', NOW(), FALSE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (15, 'example15@example.com', 'Segment C', NOW(), TRUE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (16, 'example16@example.com', 'Segment A', NOW(), FALSE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (17, 'example17@example.com', 'Segment B', NOW(), TRUE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (18, 'example18@example.com', 'Segment C', NOW(), FALSE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (19, 'example19@example.com', 'Segment A', NOW(), TRUE, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE segmentation_emails (\n  email_id INT PRIMARY KEY,\n  email_address VARCHAR(255) NOT NULL,\n  segmentation_criteria VARCHAR(255) NOT NULL,\n  send_date TIMESTAMP NOT NULL,\n  opened BOOLEAN,\n  clicked BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_emails (email_id, email_address, segmentation_criteria, send_date, opened, clicked) VALUES (20, 'example20@example.com', 'Segment B', NOW(), FALSE, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (1, 'John Doe', 'john.doe@example.com', 1, '2022-01-01') ON DUPLICATE KEY UPDATE customer_name='John Doe', email='john.doe@example.com', segment_id=1, last_purchase_date='2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (2, 'Jane Smith', 'jane.smith@example.com', 2, '2022-02-02') ON DUPLICATE KEY UPDATE customer_name='Jane Smith', email='jane.smith@example.com', segment_id=2, last_purchase_date='2022-02-02';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', 1, '2022-03-03') ON DUPLICATE KEY UPDATE customer_name='Alice Johnson', email='alice.johnson@example.com', segment_id=1, last_purchase_date='2022-03-03';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (4, 'Bob Brown', 'bob.brown@example.com', 3, '2022-04-04') ON DUPLICATE KEY UPDATE customer_name='Bob Brown', email='bob.brown@example.com', segment_id=3, last_purchase_date='2022-04-04';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (5, 'Eve Williams', 'eve.williams@example.com', 2, '2022-05-05') ON DUPLICATE KEY UPDATE customer_name='Eve Williams', email='eve.williams@example.com', segment_id=2, last_purchase_date='2022-05-05';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (6, 'Mike Anderson', 'mike.anderson@example.com', 3, '2022-06-06') ON DUPLICATE KEY UPDATE customer_name='Mike Anderson', email='mike.anderson@example.com', segment_id=3, last_purchase_date='2022-06-06';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (7, 'Cathy Davis', 'cathy.davis@example.com', 1, '2022-07-07') ON DUPLICATE KEY UPDATE customer_name='Cathy Davis', email='cathy.davis@example.com', segment_id=1, last_purchase_date='2022-07-07';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (8, 'Tom Wilson', 'tom.wilson@example.com', 2, '2022-08-08') ON DUPLICATE KEY UPDATE customer_name='Tom Wilson', email='tom.wilson@example.com', segment_id=2, last_purchase_date='2022-08-08';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (9, 'Sara Martinez', 'sara.martinez@example.com', 3, '2022-09-09') ON DUPLICATE KEY UPDATE customer_name='Sara Martinez', email='sara.martinez@example.com', segment_id=3, last_purchase_date='2022-09-09';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (10, 'Alex Johnson', 'alex.johnson@example.com', 1, '2022-10-10') ON DUPLICATE KEY UPDATE customer_name='Alex Johnson', email='alex.johnson@example.com', segment_id=1, last_purchase_date='2022-10-10';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (11, 'Grace Brown', 'grace.brown@example.com', 2, '2022-11-11') ON DUPLICATE KEY UPDATE customer_name='Grace Brown', email='grace.brown@example.com', segment_id=2, last_purchase_date='2022-11-11';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (12, 'Peter White', 'peter.white@example.com', 3, '2022-12-12') ON DUPLICATE KEY UPDATE customer_name='Peter White', email='peter.white@example.com', segment_id=3, last_purchase_date='2022-12-12';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (13, 'Laura Taylor', 'laura.taylor@example.com', 1, '2023-01-01') ON DUPLICATE KEY UPDATE customer_name='Laura Taylor', email='laura.taylor@example.com', segment_id=1, last_purchase_date='2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (14, 'Kevin Clark', 'kevin.clark@example.com', 2, '2023-02-02') ON DUPLICATE KEY UPDATE customer_name='Kevin Clark', email='kevin.clark@example.com', segment_id=2, last_purchase_date='2023-02-02';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (15, 'Olivia Adams', 'olivia.adams@example.com', 3, '2023-03-03') ON DUPLICATE KEY UPDATE customer_name='Olivia Adams', email='olivia.adams@example.com', segment_id=3, last_purchase_date='2023-03-03';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (16, 'Henry Scott', 'henry.scott@example.com', 1, '2023-04-04') ON DUPLICATE KEY UPDATE customer_name='Henry Scott', email='henry.scott@example.com', segment_id=1, last_purchase_date='2023-04-04';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (17, 'Emma Phillips', 'emma.phillips@example.com', 2, '2023-05-05') ON DUPLICATE KEY UPDATE customer_name='Emma Phillips', email='emma.phillips@example.com', segment_id=2, last_purchase_date='2023-05-05';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (18, 'Jacob Young', 'jacob.young@example.com', 3, '2023-06-06') ON DUPLICATE KEY UPDATE customer_name='Jacob Young', email='jacob.young@example.com', segment_id=3, last_purchase_date='2023-06-06';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (19, 'Sophia Baker', 'sophia.baker@example.com', 1, '2023-07-07') ON DUPLICATE KEY UPDATE customer_name='Sophia Baker', email='sophia.baker@example.com', segment_id=1, last_purchase_date='2023-07-07';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (20, 'Nathan Allen', 'nathan.allen@example.com', 2, '2023-08-08') ON DUPLICATE KEY UPDATE customer_name='Nathan Allen', email='nathan.allen@example.com', segment_id=2, last_purchase_date='2023-08-08';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (1, 'John Doe', 'john.doe@example.com', 1, '2022-01-15') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', email = 'john.doe@example.com', segment_id = 1, last_purchase_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (2, 'Jane Smith', 'jane.smith@example.com', 2, '2022-02-20') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', email = 'jane.smith@example.com', segment_id = 2, last_purchase_date = '2022-02-20';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (3, 'Alice Brown', 'alice.brown@example.com', 3, '2022-03-25') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Brown', email = 'alice.brown@example.com', segment_id = 3, last_purchase_date = '2022-03-25';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (4, 'Bob White', 'bob.white@example.com', 1, '2022-04-30') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob White', email = 'bob.white@example.com', segment_id = 1, last_purchase_date = '2022-04-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (5, 'Eve Green', 'eve.green@example.com', 2, '2022-05-05') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Eve Green', email = 'eve.green@example.com', segment_id = 2, last_purchase_date = '2022-05-05';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (6, 'Charlie Black', 'charlie.black@example.com', 3, '2022-06-10') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Charlie Black', email = 'charlie.black@example.com', segment_id = 3, last_purchase_date = '2022-06-10';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (7, 'Grace Grey', 'grace.grey@example.com', 1, '2022-07-15') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Grace Grey', email = 'grace.grey@example.com', segment_id = 1, last_purchase_date = '2022-07-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (8, 'David Blue', 'david.blue@example.com', 2, '2022-08-20') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David Blue', email = 'david.blue@example.com', segment_id = 2, last_purchase_date = '2022-08-20';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (9, 'Sarah Red', 'sarah.red@example.com', 3, '2022-09-25') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sarah Red', email = 'sarah.red@example.com', segment_id = 3, last_purchase_date = '2022-09-25';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (10, 'Peter Purple', 'peter.purple@example.com', 1, '2022-10-30') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Peter Purple', email = 'peter.purple@example.com', segment_id = 1, last_purchase_date = '2022-10-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (11, 'Linda Orange', 'linda.orange@example.com', 2, '2022-11-05') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Linda Orange', email = 'linda.orange@example.com', segment_id = 2, last_purchase_date = '2022-11-05';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (12, 'Mike Yellow', 'mike.yellow@example.com', 3, '2022-12-10') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mike Yellow', email = 'mike.yellow@example.com', segment_id = 3, last_purchase_date = '2022-12-10';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (13, 'Olivia Pink', 'olivia.pink@example.com', 1, '2023-01-15') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Olivia Pink', email = 'olivia.pink@example.com', segment_id = 1, last_purchase_date = '2023-01-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (14, 'Tom Brown', 'tom.brown@example.com', 2, '2023-02-20') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Tom Brown', email = 'tom.brown@example.com', segment_id = 2, last_purchase_date = '2023-02-20';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (15, 'Sophie Green', 'sophie.green@example.com', 3, '2023-03-25') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sophie Green', email = 'sophie.green@example.com', segment_id = 3, last_purchase_date = '2023-03-25';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (16, 'Henry Black', 'henry.black@example.com', 1, '2023-04-30') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Henry Black', email = 'henry.black@example.com', segment_id = 1, last_purchase_date = '2023-04-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (17, 'Isabella Grey', 'isabella.grey@example.com', 2, '2023-05-05') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Isabella Grey', email = 'isabella.grey@example.com', segment_id = 2, last_purchase_date = '2023-05-05';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (18, 'Jacob Blue', 'jacob.blue@example.com', 3, '2023-06-10') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jacob Blue', email = 'jacob.blue@example.com', segment_id = 3, last_purchase_date = '2023-06-10';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (19, 'Ava Red', 'ava.red@example.com', 1, '2023-07-15') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Ava Red', email = 'ava.red@example.com', segment_id = 1, last_purchase_date = '2023-07-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    segment_id INT,\n    last_purchase_date DATE\n);\n\nCREATE TABLE segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(50),\n    segment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segment_id, last_purchase_date) VALUES (20, 'William Purple', 'william.purple@example.com', 2, '2023-08-20') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'William Purple', email = 'william.purple@example.com', segment_id = 2, last_purchase_date = '2023-08-20';",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO segmentations(segmentation_id, segmentation_name, criteria) VALUES (1, 'Segment A', 'Age >= 30') ON DUPLICATE KEY UPDATE segmentation_name = VALUES(segmentation_name), criteria = VALUES(criteria);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior(customer_id, email, purchase_history, click_history) VALUES (1, 'john.doe@example.com', 'Purchased product X', 'Clicked on ad Y') ON DUPLICATE KEY UPDATE email = VALUES(email), purchase_history = VALUES(purchase_history), click_history = VALUES(click_history);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO promotional_emails(email_id, email_content, segmentation_id) VALUES (1, 'Promotional Email 1 Content', 1) ON DUPLICATE KEY UPDATE email_content = VALUES(email_content), segmentation_id = VALUES(segmentation_id);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO segmentations(segmentation_id, segmentation_name, criteria) VALUES (2, 'Segment B', 'Gender = Female') ON DUPLICATE KEY UPDATE segmentation_name = VALUES(segmentation_name), criteria = VALUES(criteria);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior(customer_id, email, purchase_history, click_history) VALUES (2, 'jane.smith@example.com', 'Purchased product Y', 'Clicked on ad Z') ON DUPLICATE KEY UPDATE email = VALUES(email), purchase_history = VALUES(purchase_history), click_history = VALUES(click_history);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO promotional_emails(email_id, email_content, segmentation_id) VALUES (2, 'Promotional Email 2 Content', 2) ON DUPLICATE KEY UPDATE email_content = VALUES(email_content), segmentation_id = VALUES(segmentation_id);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO segmentations(segmentation_id, segmentation_name, criteria) VALUES (3, 'Segment C', 'Interests = Travel') ON DUPLICATE KEY UPDATE segmentation_name = VALUES(segmentation_name), criteria = VALUES(criteria);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior(customer_id, email, purchase_history, click_history) VALUES (3, 'alice.wong@example.com', 'Purchased product Z', 'Clicked on ad A') ON DUPLICATE KEY UPDATE email = VALUES(email), purchase_history = VALUES(purchase_history), click_history = VALUES(click_history);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO promotional_emails(email_id, email_content, segmentation_id) VALUES (3, 'Promotional Email 3 Content', 3) ON DUPLICATE KEY UPDATE email_content = VALUES(email_content), segmentation_id = VALUES(segmentation_id);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO segmentations(segmentation_id, segmentation_name, criteria) VALUES (4, 'Segment D', 'Location = USA') ON DUPLICATE KEY UPDATE segmentation_name = VALUES(segmentation_name), criteria = VALUES(criteria);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior(customer_id, email, purchase_history, click_history) VALUES (4, 'samuel.jackson@example.com', 'Purchased product A', 'Clicked on ad B') ON DUPLICATE KEY UPDATE email = VALUES(email), purchase_history = VALUES(purchase_history), click_history = VALUES(click_history);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO promotional_emails(email_id, email_content, segmentation_id) VALUES (4, 'Promotional Email 4 Content', 4) ON DUPLICATE KEY UPDATE email_content = VALUES(email_content), segmentation_id = VALUES(segmentation_id);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO segmentations(segmentation_id, segmentation_name, criteria) VALUES (5, 'Segment E', 'Income > $50K') ON DUPLICATE KEY UPDATE segmentation_name = VALUES(segmentation_name), criteria = VALUES(criteria);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior(customer_id, email, purchase_history, click_history) VALUES (5, 'emily.parker@example.com', 'Purchased product B', 'Clicked on ad C') ON DUPLICATE KEY UPDATE email = VALUES(email), purchase_history = VALUES(purchase_history), click_history = VALUES(click_history);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO promotional_emails(email_id, email_content, segmentation_id) VALUES (5, 'Promotional Email 5 Content', 5) ON DUPLICATE KEY UPDATE email_content = VALUES(email_content), segmentation_id = VALUES(segmentation_id);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO segmentations(segmentation_id, segmentation_name, criteria) VALUES (6, 'Segment F', 'Activity Level = High') ON DUPLICATE KEY UPDATE segmentation_name = VALUES(segmentation_name), criteria = VALUES(criteria);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior(customer_id, email, purchase_history, click_history) VALUES (6, 'david.wilson@example.com', 'Purchased product C', 'Clicked on ad D') ON DUPLICATE KEY UPDATE email = VALUES(email), purchase_history = VALUES(purchase_history), click_history = VALUES(click_history);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO promotional_emails(email_id, email_content, segmentation_id) VALUES (6, 'Promotional Email 6 Content', 6) ON DUPLICATE KEY UPDATE email_content = VALUES(email_content), segmentation_id = VALUES(segmentation_id);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO segmentations(segmentation_id, segmentation_name, criteria) VALUES (7, 'Segment G', 'Purchase Frequency = Weekly') ON DUPLICATE KEY UPDATE segmentation_name = VALUES(segmentation_name), criteria = VALUES(criteria);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior(customer_id, email, purchase_history, click_history) VALUES (7, 'susan.cooper@example.com', 'Purchased product D', 'Clicked on ad E') ON DUPLICATE KEY UPDATE email = VALUES(email), purchase_history = VALUES(purchase_history), click_history = VALUES(click_history);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO promotional_emails(email_id, email_content, segmentation_id) VALUES (7, 'Promotional Email 7 Content', 7) ON DUPLICATE KEY UPDATE email_content = VALUES(email_content), segmentation_id = VALUES(segmentation_id);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO segmentations(segmentation_id, segmentation_name, criteria) VALUES (8, 'Segment H', 'Age < 30') ON DUPLICATE KEY UPDATE segmentation_name = VALUES(segmentation_name), criteria = VALUES(criteria);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior(customer_id, email, purchase_history, click_history) VALUES (8, 'michael.smith@example.com', 'Purchased product D', 'Clicked on ad E') ON DUPLICATE KEY UPDATE email = VALUES(email), purchase_history = VALUES(purchase_history), click_history = VALUES(click_history);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO promotional_emails(email_id, email_content, segmentation_id) VALUES (8, 'Promotional Email 8 Content', 8) ON DUPLICATE KEY UPDATE email_content = VALUES(email_content), segmentation_id = VALUES(segmentation_id);",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO segmentations (segmentation_id, segmentation_name, criteria) VALUES (1, 'Segment A', 'Age > 30 AND Location = New York') ON CONFLICT (segmentation_id) DO UPDATE SET segmentation_name = 'Segment A Updated', criteria = 'Age > 30 AND Location = New York Updated';",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO segmentations (segmentation_id, segmentation_name, criteria) VALUES (2, 'Segment B', 'Gender = Female AND Purchase Frequency > 5') ON CONFLICT (segmentation_id) DO UPDATE SET segmentation_name = 'Segment B Updated', criteria = 'Gender = Female AND Purchase Frequency > 5 Updated';",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO segmentations (segmentation_id, segmentation_name, criteria) VALUES (3, 'Segment C', 'Location = Los Angeles AND Clicks Count < 10') ON CONFLICT (segmentation_id) DO UPDATE SET segmentation_name = 'Segment C Updated', criteria = 'Location = Los Angeles AND Clicks Count < 10 Updated';",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO segmentations (segmentation_id, segmentation_name, criteria) VALUES (4, 'Segment D', 'Age < 25 AND Gender = Male') ON CONFLICT (segmentation_id) DO UPDATE SET segmentation_name = 'Segment D Updated', criteria = 'Age < 25 AND Gender = Male Updated';",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (customer_id, email, purchase_history, click_history) VALUES (101, 'customer1@example.com', 'ProductA, ProductB', 'Clicked ProductA, Viewed ProductB') ON CONFLICT (customer_id) DO UPDATE SET email = 'customer1@example.com', purchase_history = 'ProductA, ProductB Updated', click_history = 'Clicked ProductA, Viewed ProductB Updated';",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (customer_id, email, purchase_history, click_history) VALUES (102, 'customer2@example.com', 'ProductC, ProductD', 'Clicked ProductC, Viewed ProductD') ON CONFLICT (customer_id) DO UPDATE SET email = 'customer2@example.com', purchase_history = 'ProductC, ProductD Updated', click_history = 'Clicked ProductC, Viewed ProductD Updated';",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (customer_id, email, purchase_history, click_history) VALUES (103, 'customer3@example.com', 'ProductE, ProductF', 'Clicked ProductE, Viewed ProductF') ON CONFLICT (customer_id) DO UPDATE SET email = 'customer3@example.com', purchase_history = 'ProductE, ProductF Updated', click_history = 'Clicked ProductE, Viewed ProductF Updated';",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (customer_id, email, purchase_history, click_history) VALUES (104, 'customer4@example.com', 'ProductG, ProductH', 'Clicked ProductG, Viewed ProductH') ON CONFLICT (customer_id) DO UPDATE SET email = 'customer4@example.com', purchase_history = 'ProductG, ProductH Updated', click_history = 'Clicked ProductG, Viewed ProductH Updated';",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO promotional_emails (email_id, email_content, segmentation_id) VALUES (201, 'Special Offer for Segment A', 1) ON CONFLICT (email_id) DO UPDATE SET email_content = 'Special Offer for Segment A Updated', segmentation_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO promotional_emails (email_id, email_content, segmentation_id) VALUES (202, 'Exclusive Deal for Segment B', 2) ON CONFLICT (email_id) DO UPDATE SET email_content = 'Exclusive Deal for Segment B Updated', segmentation_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO promotional_emails (email_id, email_content, segmentation_id) VALUES (203, 'Limited Time Offer for Segment C', 3) ON CONFLICT (email_id) DO UPDATE SET email_content = 'Limited Time Offer for Segment C Updated', segmentation_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE segmentations (\n    segmentation_id INT PRIMARY KEY,\n    segmentation_name STRING,\n    criteria STRING\n);\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email STRING,\n    purchase_history STRING,\n    click_history STRING\n);\n\nCREATE TABLE promotional_emails (\n    email_id INT PRIMARY KEY,\n    email_content STRING,\n    segmentation_id INT,\n    FOREIGN KEY (segmentation_id) REFERENCES segmentations(segmentation_id)\n);\n\n### STATEMENT\n\nINSERT INTO promotional_emails (email_id, email_content, segmentation_id) VALUES (204, 'Discount Code for Segment D', 4) ON CONFLICT (email_id) DO UPDATE SET email_content = 'Discount Code for Segment D Updated', segmentation_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (1, 'John', 'Doe', 'johndoe@example.com', 'Segment A') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (2, 'Jane', 'Smith', 'janesmith@example.com', 'Segment B') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (3, 'Alice', 'Johnson', 'alicejohnson@example.com', 'Segment C') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (4, 'Bob', 'Williams', 'bobwilliams@example.com', 'Segment A') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (5, 'Emma', 'Brown', 'emmabrown@example.com', 'Segment B') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (6, 'Michael', 'Taylor', 'michaeltaylor@example.com', 'Segment C') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (7, 'Sarah', 'Anderson', 'sarahanderson@example.com', 'Segment A') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (8, 'David', 'Martinez', 'davidmartinez@example.com', 'Segment B') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (9, 'Sophia', 'Garcia', 'sophiagarcia@example.com', 'Segment C') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (10, 'James', 'Martinez', 'jamesmartinez@example.com', 'Segment A') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (11, 'Olivia', 'Gonzalez', 'oliviagonzalez@example.com', 'Segment B') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (12, 'Ethan', 'Ramirez', 'ethanramirez@example.com', 'Segment C') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (13, 'Liam', 'Nguyen', 'liamnguyen@example.com', 'Segment A') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (14, 'Mia', 'Wright', 'miawright@example.com', 'Segment B') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (15, 'Elijah', 'Hernandez', 'elijahhernandez@example.com', 'Segment C') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (16, 'Ava', 'Perez', 'avaperez@example.com', 'Segment A') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (17, 'Logan', 'Torres', 'logantorres@example.com', 'Segment B') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (18, 'Sophia', 'Morales', 'sophiamorales@example.com', 'Segment C') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (19, 'Ethan', 'Ramirez', 'ethanramirez@example.com', 'Segment A') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (20, 'Mia', 'Wright', 'miawright@example.com', 'Segment B') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (1, 'John', 'Doe', 'john.doe@example.com', 'Premium') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, segment = EXCLUDED.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO segments (segment_id, segment_name) VALUES (1, 'Premium') ON CONFLICT (segment_id) DO UPDATE SET segment_name = EXCLUDED.segment_name;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO behaviors (behavior_id, behavior_name) VALUES (1, 'High Value') ON CONFLICT (behavior_id) DO UPDATE SET behavior_name = EXCLUDED.behavior_name;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO emails (email_id, customer_id, sent_date, opened, clicked) VALUES (1, 1, '2022-01-01 09:00:00', TRUE, TRUE) ON CONFLICT (email_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, sent_date = EXCLUDED.sent_date, opened = EXCLUDED.opened, clicked = EXCLUDED.clicked;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (2, 'Jane', 'Smith', 'jane.smith@example.com', 'Regular') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, segment = EXCLUDED.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO segments (segment_id, segment_name) VALUES (2, 'Regular') ON CONFLICT (segment_id) DO UPDATE SET segment_name = EXCLUDED.segment_name;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO behaviors (behavior_id, behavior_name) VALUES (2, 'Low Value') ON CONFLICT (behavior_id) DO UPDATE SET behavior_name = EXCLUDED.behavior_name;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO emails (email_id, customer_id, sent_date, opened, clicked) VALUES (2, 2, '2022-01-02 10:00:00', TRUE, FALSE) ON CONFLICT (email_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, sent_date = EXCLUDED.sent_date, opened = EXCLUDED.opened, clicked = EXCLUDED.clicked;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (3, 'Michael', 'Johnson', 'michael.johnson@example.com', 'Premium') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, segment = EXCLUDED.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO segments (segment_id, segment_name) VALUES (3, 'Premium') ON CONFLICT (segment_id) DO UPDATE SET segment_name = EXCLUDED.segment_name;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO behaviors (behavior_id, behavior_name) VALUES (3, 'Regular Value') ON CONFLICT (behavior_id) DO UPDATE SET behavior_name = EXCLUDED.behavior_name;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO emails (email_id, customer_id, sent_date, opened, clicked) VALUES (3, 3, '2022-01-03 11:00:00', FALSE, FALSE) ON CONFLICT (email_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, sent_date = EXCLUDED.sent_date, opened = EXCLUDED.opened, clicked = EXCLUDED.clicked;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (4, 'Sarah', 'Williams', 'sarah.williams@example.com', 'Regular') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, segment = EXCLUDED.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO segments (segment_id, segment_name) VALUES (4, 'Regular') ON CONFLICT (segment_id) DO UPDATE SET segment_name = EXCLUDED.segment_name;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO behaviors (behavior_id, behavior_name) VALUES (4, 'High Value') ON CONFLICT (behavior_id) DO UPDATE SET behavior_name = EXCLUDED.behavior_name;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO emails (email_id, customer_id, sent_date, opened, clicked) VALUES (4, 4, '2022-01-04 12:00:00', TRUE, TRUE) ON CONFLICT (email_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, sent_date = EXCLUDED.sent_date, opened = EXCLUDED.opened, clicked = EXCLUDED.clicked;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, segment) VALUES (5, 'Emily', 'Brown', 'emily.brown@example.com', 'Premium') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, segment = EXCLUDED.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO segments (segment_id, segment_name) VALUES (5, 'Premium') ON CONFLICT (segment_id) DO UPDATE SET segment_name = EXCLUDED.segment_name;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO behaviors (behavior_id, behavior_name) VALUES (5, 'Low Value') ON CONFLICT (behavior_id) DO UPDATE SET behavior_name = EXCLUDED.behavior_name;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    first_name VARCHAR(50), \n    last_name VARCHAR(50), \n    email VARCHAR(100), \n    segment VARCHAR(50) \n);\n\nCREATE TABLE segments ( \n    segment_id INT PRIMARY KEY, \n    segment_name VARCHAR(50) \n);\n\nCREATE TABLE behaviors ( \n    behavior_id INT PRIMARY KEY, \n    behavior_name VARCHAR(50) \n);\n\nCREATE TABLE emails ( \n    email_id INT PRIMARY KEY, \n    customer_id INT, \n    sent_date TIMESTAMP, \n    opened BOOLEAN, \n    clicked BOOLEAN \n);\n\n### STATEMENT\n\nINSERT INTO emails (email_id, customer_id, sent_date, opened, clicked) VALUES (5, 5, '2022-01-05 13:00:00', FALSE, TRUE) ON CONFLICT (email_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, sent_date = EXCLUDED.sent_date, opened = EXCLUDED.opened, clicked = EXCLUDED.clicked;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segmentation) VALUES (1, 'John Doe', 'john.doe@example.com', 'Premium') ON DUPLICATE KEY UPDATE customer_name='John Doe', email='john.doe@example.com', segmentation='Premium';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segmentation) VALUES (2, 'Jane Smith', 'jane.smith@example.com', 'Regular') ON DUPLICATE KEY UPDATE customer_name='Jane Smith', email='jane.smith@example.com', segmentation='Regular';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, segmentation) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', 'VIP') ON DUPLICATE KEY UPDATE customer_name='Alice Johnson', email='alice.johnson@example.com', segmentation='VIP';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2022-01-20', 100.50) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2022-01-20', total_amount=100.50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (2, 2, '2022-02-15', 75.20) ON DUPLICATE KEY UPDATE customer_id=2, order_date='2022-02-15', total_amount=75.20;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (3, 3, '2022-03-10', 150.75) ON DUPLICATE KEY UPDATE customer_id=3, order_date='2022-03-10', total_amount=150.75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name='Product A', price=50.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (2, 'Product B', 75.00) ON DUPLICATE KEY UPDATE product_name='Product B', price=75.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (3, 'Product C', 100.00) ON DUPLICATE KEY UPDATE product_name='Product C', price=100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO segmentation_rules (rule_id, rule_name, segmentation) VALUES (1, 'Rule 1', 'Basic') ON DUPLICATE KEY UPDATE rule_name='Rule 1', segmentation='Basic';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO segmentation_rules (rule_id, rule_name, segmentation) VALUES (2, 'Rule 2', 'Premium') ON DUPLICATE KEY UPDATE rule_name='Rule 2', segmentation='Premium';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO segmentation_rules (rule_id, rule_name, segmentation) VALUES (3, 'Rule 3', 'VIP') ON DUPLICATE KEY UPDATE rule_name='Rule 3', segmentation='VIP';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, campaign_type, segmentation) VALUES (1, 'Campaign 1', 'Newsletter', 'Basic') ON DUPLICATE KEY UPDATE campaign_name='Campaign 1', campaign_type='Newsletter', segmentation='Basic';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, campaign_type, segmentation) VALUES (2, 'Campaign 2', 'Promotion', 'Premium') ON DUPLICATE KEY UPDATE campaign_name='Campaign 2', campaign_type='Promotion', segmentation='Premium';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, campaign_type, segmentation) VALUES (3, 'Campaign 3', 'Special Offer', 'VIP') ON DUPLICATE KEY UPDATE campaign_name='Campaign 3', campaign_type='Special Offer', segmentation='VIP';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, segmentation) VALUES (1, 'Alice', 'alice@example.com', 'VIP');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, segmentation) VALUES (2, 'Bob', 'bob@example.com', 'Regular');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, segmentation) VALUES (3, 'Charlie', 'charlie@example.com', 'Premium');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-01', 100.50);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (2, 2, '2021-10-02', 75.20);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (3, 3, '2021-10-03', 120.75);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price) VALUES (1, 'Product A', 50.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price) VALUES (2, 'Product B', 30.50);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price) VALUES (3, 'Product C', 70.25);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_rules (rule_id, rule_name, segmentation) VALUES (1, 'Rule 1', 'VIP');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_rules (rule_id, rule_name, segmentation) VALUES (2, 'Rule 2', 'Regular');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_rules (rule_id, rule_name, segmentation) VALUES (3, 'Rule 3', 'Premium');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO email_campaigns (campaign_id, campaign_name, campaign_type, segmentation) VALUES (1, 'Campaign 1', 'Promotional', 'VIP');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO email_campaigns (campaign_id, campaign_name, campaign_type, segmentation) VALUES (2, 'Campaign 2', 'Reminder', 'Regular');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO email_campaigns (campaign_id, campaign_name, campaign_type, segmentation) VALUES (3, 'Campaign 3', 'New Arrivals', 'Premium');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, segmentation) VALUES (4, 'David', 'david@example.com', 'Regular');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (4, 4, '2021-10-04', 90.80);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price) VALUES (4, 'Product D', 45.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO segmentation_rules (rule_id, rule_name, segmentation) VALUES (4, 'Rule 4', 'Regular');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE segmentation_rules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    segmentation VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(255),\n    campaign_type VARCHAR(50),\n    segmentation VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO email_campaigns (campaign_id, campaign_name, campaign_type, segmentation) VALUES (4, 'Campaign 4', 'Special Offer', 'Regular');"
]