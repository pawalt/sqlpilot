[
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM A_B_testing;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, conversion_rate FROM A_B_testing;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT country FROM A_B_testing;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM A_B_testing WHERE conversion_rate > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(conversion_rate) FROM A_B_testing;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, AVG(conversion_rate) AS avg_conversion_rate FROM A_B_testing GROUP BY country;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, marketing_strategy, conversion_rate FROM A_B_testing WHERE marketing_strategy = 'SEO';",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM A_B_testing ORDER BY country ASC;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM A_B_testing ORDER BY conversion_rate DESC;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM A_B_testing WHERE country = 'USA';",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_rows FROM A_B_testing;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, COUNT(*) AS total_tests FROM A_B_testing GROUP BY country;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM A_B_testing WHERE conversion_rate BETWEEN 0.3 AND 0.7;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(conversion_rate) FROM A_B_testing;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, marketing_strategy, conversion_rate FROM A_B_testing WHERE conversion_rate > 0.5 AND marketing_strategy = 'PPC';",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, SUM(conversion_rate) AS total_conversions FROM A_B_testing GROUP BY country;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM A_B_testing WHERE country LIKE 'U%';",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(conversion_rate) AS avg_conversion_rate FROM A_B_testing WHERE country = 'UK';",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, MAX(conversion_rate) AS max_conversion_rate FROM A_B_testing GROUP BY country;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT marketing_strategy FROM A_B_testing;",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(conversion_rate) FROM A_B_testing WHERE country = 'USA'",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(conversion_rate) FROM A_B_testing WHERE marketing_strategy = 'Social Media'",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT MIN(conversion_rate) FROM A_B_testing WHERE country = 'Germany' AND marketing_strategy = 'Email Marketing'",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, SUM(conversion_rate) FROM A_B_testing GROUP BY country",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT marketing_strategy FROM A_B_testing",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM A_B_testing WHERE conversion_rate > 0.5",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM A_B_testing ORDER BY conversion_rate DESC",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(conversion_rate) AS avg_rate, COUNT(*) AS total_rows FROM A_B_testing",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, marketing_strategy, conversion_rate FROM A_B_testing WHERE conversion_rate BETWEEN 0.3 AND 0.7",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, marketing_strategy, conversion_rate FROM A_B_testing WHERE country LIKE '%land%'",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, AVG(conversion_rate) FROM A_B_testing GROUP BY country HAVING AVG(conversion_rate) > 0.4",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT marketing_strategy, COUNT(*) FROM A_B_testing GROUP BY marketing_strategy HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM A_B_testing WHERE country IN ('USA', 'Canada')",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, marketing_strategy, conversion_rate FROM A_B_testing WHERE conversion_rate < 0.2",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(conversion_rate) FROM A_B_testing WHERE marketing_strategy IN ('Social Media', 'Email Marketing')",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, SUM(conversion_rate) FROM A_B_testing WHERE marketing_strategy = 'SEO' GROUP BY country",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, MAX(conversion_rate) FROM A_B_testing GROUP BY country ORDER BY MAX(conversion_rate) DESC",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT marketing_strategy, AVG(conversion_rate) FROM A_B_testing GROUP BY marketing_strategy",
  "### TABLEDATA\n\nCREATE TABLE A_B_testing (\n  country VARCHAR(50),\n  marketing_strategy VARCHAR(50),\n  conversion_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT country, marketing_strategy, conversion_rate FROM A_B_testing WHERE conversion_rate IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_name, audience_size FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM test_results;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT test_id, strategy_id, test_date FROM test_results;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_name, conversion_rate FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_name, audience_size, conversion_rate FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_strategies WHERE audience_size > 100000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_strategies WHERE strategy_name LIKE 'Digital%';",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM test_results WHERE successful_conversions >= 50;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM test_results WHERE total_visits < 50000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_name, conversion_rate FROM marketing_strategies WHERE conversion_rate > 0.05;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_strategies FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT AVG(conversion_rate) AS avg_conversion_rate FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT MAX(audience_size) AS max_audience_size FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT MIN(conversion_rate) AS min_conversion_rate FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT SUM(successful_conversions) AS total_conversions FROM test_results;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT test_id, SUM(successful_conversions) AS total_successful_conversions FROM test_results GROUP BY test_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_name, AVG(conversion_rate) AS avg_conversion_rate FROM marketing_strategies GROUP BY strategy_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_name, MAX(audience_size) AS max_audience_size FROM marketing_strategies GROUP BY strategy_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_name, COUNT(test_id) AS total_tests FROM test_results GROUP BY strategy_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, strategy_name, audience_size FROM marketing_strategies WHERE audience_size > 500;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, strategy_name, audience_size, conversion_rate FROM marketing_strategies WHERE conversion_rate >= 0.5;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, strategy_name, audience_size, conversion_rate FROM marketing_strategies ORDER BY conversion_rate DESC;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_strategies WHERE strategy_name LIKE '%digital%';",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM test_results;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT test_id, strategy_id, test_date FROM test_results ORDER BY test_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, SUM(successful_conversions) AS total_conversions FROM test_results GROUP BY strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, AVG(total_visits) AS avg_visits FROM test_results GROUP BY strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, COUNT(test_id) AS num_tests FROM test_results GROUP BY strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, AVG(successful_conversions) / AVG(total_visits) AS conversion_rate FROM test_results GROUP BY strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT s.strategy_id, s.strategy_name, t.test_date, t.successful_conversions, t.total_visits FROM marketing_strategies s JOIN test_results t ON s.strategy_id = t.strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT s.strategy_id, s.strategy_name, COUNT(t.test_id) AS num_tests FROM marketing_strategies s LEFT JOIN test_results t ON s.strategy_id = t.strategy_id GROUP BY s.strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT s.strategy_id, s.strategy_name, MAX(t.successful_conversions) AS max_conversions FROM marketing_strategies s JOIN test_results t ON s.strategy_id = t.strategy_id GROUP BY s.strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT s.strategy_id, s.strategy_name, t.test_date, t.successful_conversions, t.total_visits FROM marketing_strategies s LEFT JOIN test_results t ON s.strategy_id = t.strategy_id WHERE t.test_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT s.strategy_id, s.strategy_name, t.test_date, t.successful_conversions, t.total_visits FROM marketing_strategies s LEFT JOIN test_results t ON s.strategy_id = t.strategy_id WHERE t.successful_conversions > 100;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT s.strategy_id, s.strategy_name, t.test_date, t.successful_conversions, t.total_visits FROM marketing_strategies s LEFT JOIN test_results t ON s.strategy_id = t.strategy_id WHERE t.total_visits / t.successful_conversions >= 2;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT s.strategy_id, s.strategy_name, t.test_date, t.successful_conversions, t.total_visits FROM marketing_strategies s JOIN test_results t ON s.strategy_id = t.strategy_id WHERE t.test_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50) NOT NULL,\n    audience_size INT,\n    conversion_rate FLOAT\n);\n\nCREATE TABLE test_results (\n    test_id INT PRIMARY KEY,\n    strategy_id INT,\n    test_date TIMESTAMP,\n    successful_conversions INT,\n    total_visits INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT s.strategy_id, s.strategy_name, t.test_date, t.successful_conversions, t.total_visits FROM marketing_strategies s JOIN test_results t ON s.strategy_id = t.strategy_id WHERE t.total_visits > 1000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT strategy_name, conversion_rate FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, name, email FROM user_data;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM user_data WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT experiment_name, conversion_rate FROM experiment_results;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM experiment_results WHERE significant = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT strategy_name, user_id FROM marketing_strategies JOIN user_data ON marketing_strategies.id = user_data.strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT strategy_name, name, email FROM marketing_strategies JOIN user_data ON marketing_strategies.id = user_data.strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT strategy_name, conversion_rate FROM marketing_strategies WHERE conversion_rate > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_strategies ORDER BY strategy_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM user_data ORDER BY name DESC;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT AVG(conversion_rate) FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT MAX(conversion_rate) FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT MIN(conversion_rate) FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT SUM(conversion_rate) FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT AVG(conversion_rate) AS avg_rate FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT strategy_name, COUNT(*) FROM marketing_strategies GROUP BY strategy_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT strategy_name) FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_strategies WHERE id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT strategy_name FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, name, email FROM user_data WHERE strategy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM user_data ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM user_data WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT strategy_name, conversion_rate FROM marketing_strategies WHERE conversion_rate > 10.00;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT name, email FROM user_data WHERE strategy_id IN (SELECT id FROM marketing_strategies WHERE conversion_rate < 5.00);",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_strategies JOIN user_data ON marketing_strategies.id = user_data.strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT strategy_name, AVG(conversion_rate) AS avg_conversion_rate FROM marketing_strategies GROUP BY strategy_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users FROM user_data;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT MAX(conversion_rate) AS max_conversion_rate FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT experiment_name, AVG(conversion_rate) AS avg_conversion_rate FROM experiment_results WHERE significant = TRUE GROUP BY experiment_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT strategy_id) AS total_strategies FROM user_data;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT name, email, strategy_name FROM user_data JOIN marketing_strategies ON user_data.strategy_id = marketing_strategies.id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT strategy_name, SUM(conversion_rate) AS total_conversion FROM marketing_strategies JOIN user_data ON marketing_strategies.id = user_data.strategy_id GROUP BY strategy_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT experiment_name, SUM(conversion_rate) AS total_conversion FROM experiment_results GROUP BY experiment_name HAVING SUM(conversion_rate) > 100;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT name, email, strategy_name FROM user_data JOIN marketing_strategies ON user_data.strategy_id = marketing_strategies.id WHERE marketing_strategies.conversion_rate > 8.00;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM (SELECT * FROM user_data WHERE strategy_id = 1) AS subquery;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT experiment_name, conversion_rate FROM experiment_results WHERE result_id IN (SELECT strategy_id FROM user_data);",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT DISTINCT name FROM user_data;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT strategy_name, conversion_rate FROM marketing_strategies WHERE strategy_name LIKE '%strategy%';",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\n\nCREATE TABLE user_data (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    strategy_id INT\n);\n\n\nCREATE TABLE experiment_results (\n    result_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2),\n    significant BOOLEAN\n);\n\n### STATEMENT\n\nSELECT strategy_name, COUNT(*) AS total_users FROM marketing_strategies JOIN user_data ON marketing_strategies.id = user_data.strategy_id GROUP BY strategy_name ORDER BY total_users DESC;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_name, conversion_rate FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, strategy_name, conversion_rate FROM marketing_strategies WHERE conversion_rate > 1.5;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT username, email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE username LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM experiment_results;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT experiment_id, conversion_status FROM experiment_results WHERE conversion_status = 'converted';",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM ab_tests;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT test_name, start_date, end_date FROM ab_tests;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT test_id, test_name FROM ab_tests WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT ms.strategy_id, ar.user_id FROM marketing_strategies ms JOIN experiment_results ar ON ms.strategy_id = ar.strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT u.username, ar.experiment_id FROM users u JOIN experiment_results ar ON u.user_id = ar.user_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT ms.strategy_name, at.test_name FROM marketing_strategies ms JOIN ab_tests at ON ms.strategy_id = at.strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT u.username, at.test_name, ar.conversion_status FROM users u JOIN ab_tests at ON u.user_id = at.strategy_id JOIN experiment_results ar ON at.strategy_id = ar.strategy_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT u.username, ar.conversion_status FROM users u JOIN experiment_results ar ON u.user_id = ar.user_id WHERE ar.conversion_status = 'converted';",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(strategy_id) AS total_strategies FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT AVG(conversion_rate) AS avg_conversion_rate FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(test_id) AS total_tests FROM ab_tests WHERE strategy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT MAX(conversion_rate) AS max_conversion_rate FROM marketing_strategies;",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_strategies",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, strategy_name FROM marketing_strategies",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, strategy_name, conversion_rate FROM marketing_strategies WHERE conversion_rate > 1.5",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE email LIKE '%@gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM experiment_results",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT experiment_id, strategy_id, user_id FROM experiment_results",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT experiment_id, conversion_status FROM experiment_results WHERE conversion_status = 'converted'",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT test_id, test_name FROM ab_tests",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT test_id, start_date, end_date FROM ab_tests WHERE start_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, test_id FROM ab_tests WHERE test_name LIKE '%control%'",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, user_id FROM experiment_results WHERE experiment_id = 1",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, user_id FROM experiment_results WHERE experiment_id = (SELECT MAX(experiment_id) FROM experiment_results)",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT count(*) FROM users",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT AVG(conversion_rate) FROM marketing_strategies",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT test_id, COUNT(DISTINCT strategy_id) AS total_strategies FROM ab_tests GROUP BY test_id",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT strategy_id, AVG(conversion_rate) AS avg_conversion_rate FROM marketing_strategies GROUP BY strategy_id HAVING AVG(conversion_rate) > 2",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT users.user_id, users.username, experiment_results.conversion_status FROM users JOIN experiment_results ON users.user_id = experiment_results.user_id",
  "### TABLEDATA\n\nCREATE TABLE marketing_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(255),\n    conversion_rate DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE experiment_results (\n    experiment_id INT PRIMARY KEY,\n    strategy_id INT,\n    user_id INT,\n    conversion_status ENUM('converted', 'not_converted'),\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE ab_tests (\n    test_id INT PRIMARY KEY,\n    test_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    strategy_id INT,\n    FOREIGN KEY (strategy_id) REFERENCES marketing_strategies(strategy_id)\n);\n\n### STATEMENT\n\nSELECT marketing_strategies.strategy_name, experiment_results.conversion_status FROM marketing_strategies JOIN experiment_results ON marketing_strategies.strategy_id = experiment_results.strategy_id",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Strategy1;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, name FROM Strategy2;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT description FROM Strategy3;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT start_date, end_date FROM Strategy4;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, name, start_date FROM Strategy5;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Strategy1 WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT name FROM Strategy2 WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, description FROM Strategy3 WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Strategy4 WHERE start_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, name FROM Strategy5 WHERE end_date = '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Strategy1 LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Strategy2 OFFSET 2;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, name FROM Strategy3 ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT description FROM Strategy4 ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, name, start_date FROM Strategy5 WHERE name LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Strategy1 WHERE end_date > '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, description FROM Strategy2 WHERE start_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Strategy3 WHERE id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT name FROM Strategy4 WHERE description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Strategy5 WHERE start_date = end_date;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Strategy1;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, name FROM Strategy2 WHERE end_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, description FROM Strategy3 WHERE start_date < '2022-07-01' AND end_date > '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT name FROM Strategy4 WHERE name LIKE '%ABC%';",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, description FROM Strategy5 WHERE start_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Strategy1 WHERE end_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, name, start_date FROM Strategy2 ORDER BY start_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, description FROM Strategy3 WHERE end_date < '2023-01-01' ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, start_date FROM Strategy4 WHERE name = 'Example' AND description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, name FROM Strategy5 WHERE end_date IS NOT NULL AND description LIKE '%XYZ%';",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT name FROM Strategy1;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, description FROM Strategy2 WHERE start_date >= '2022-01-01' OR end_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, name FROM Strategy3 WHERE description = 'Important' AND start_date < end_date;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT name, description FROM Strategy4 WHERE id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, start_date, end_date FROM Strategy5 WHERE name IN ('Alpha', 'Beta', 'Gamma');",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(id) FROM Strategy1;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(start_date) FROM Strategy2;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(id) FROM Strategy3;",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(id) FROM Strategy4 WHERE name <> 'Test';",
  "### TABLEDATA\n\nCREATE TABLE Strategy1 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy2 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy3 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy4 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE Strategy5 (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, name, description, start_date FROM Strategy5 WHERE id > 5 AND id < 10;"
]