<t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_type TEXT, location TEXT, status TEXT)

CREATE TABLE readings (reading_id INT PRIMARY KEY, sensor_id INT, value FLOAT, timestamp TIMESTAMP)</t><s>INSERT INTO sensors (sensor_id, sensor_type, location, status) VALUES (1, 'Temperature', 'Living Room', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = excluded.sensor_type, location = excluded.location, status = excluded.status</s>
<t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_type TEXT, location TEXT, status TEXT)

CREATE TABLE readings (reading_id INT PRIMARY KEY, sensor_id INT, value FLOAT, timestamp TIMESTAMP)</t><s>insert into sensors (sensor_id, sensor_type, location, status) values (1, 'temperature', 'living room', 'active') on conflict (sensor_id) do update set sensor_type = excluded.sensor_type, location = excluded.location, status = excluded.status</s>
<t>CREATE TABLE readings (reading_id INT PRIMARY KEY, sensor_id INT, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_type TEXT, location TEXT, status TEXT)</t><s>INSERT INTO sensors (sensor_id, sensor_type, location, status) VALUES (1, 'Temperature', 'Living Room', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = excluded.sensor_type, location = excluded.location, status = excluded.status</s>
<t>CREATE TABLE readings (reading_id INT PRIMARY KEY, sensor_id INT, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_type TEXT, location TEXT, status TEXT)</t><s>insert into sensors (sensor_id, sensor_type, location, status) values (1, 'temperature', 'living room', 'active') on conflict (sensor_id) do update set sensor_type = excluded.sensor_type, location = excluded.location, status = excluded.status</s>
<t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_type TEXT, location TEXT, status TEXT)

CREATE TABLE readings (reading_id INT PRIMARY KEY, sensor_id INT, value FLOAT, timestamp TIMESTAMP)</t><s>INSERT INTO readings (reading_id, sensor_id, value, timestamp) VALUES (1, 1, 22.5, '2022-01-01 08:00:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, value = excluded.value, timestamp = excluded.timestamp</s>
<t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_type TEXT, location TEXT, status TEXT)

CREATE TABLE readings (reading_id INT PRIMARY KEY, sensor_id INT, value FLOAT, timestamp TIMESTAMP)</t><s>insert into readings (reading_id, sensor_id, value, timestamp) values (1, 1, 22.5, '2022-01-01 08:00:00') on conflict (reading_id) do update set sensor_id = excluded.sensor_id, value = excluded.value, timestamp = excluded.timestamp</s>
<t>CREATE TABLE readings (reading_id INT PRIMARY KEY, sensor_id INT, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_type TEXT, location TEXT, status TEXT)</t><s>INSERT INTO readings (reading_id, sensor_id, value, timestamp) VALUES (1, 1, 22.5, '2022-01-01 08:00:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, value = excluded.value, timestamp = excluded.timestamp</s>
<t>CREATE TABLE readings (reading_id INT PRIMARY KEY, sensor_id INT, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_type TEXT, location TEXT, status TEXT)</t><s>insert into readings (reading_id, sensor_id, value, timestamp) values (1, 1, 22.5, '2022-01-01 08:00:00') on conflict (reading_id) do update set sensor_id = excluded.sensor_id, value = excluded.value, timestamp = excluded.timestamp</s>
<t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_type TEXT, location TEXT, status TEXT)

CREATE TABLE readings (reading_id INT PRIMARY KEY, sensor_id INT, value FLOAT, timestamp TIMESTAMP)</t><s>INSERT INTO readings (reading_id, sensor_id, value, timestamp) VALUES (2, 2, 18.9, '2022-01-01 09:00:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, value = excluded.value, timestamp = excluded.timestamp</s>
<t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_type TEXT, location TEXT, status TEXT)

CREATE TABLE readings (reading_id INT PRIMARY KEY, sensor_id INT, value FLOAT, timestamp TIMESTAMP)</t><s>insert into readings (reading_id, sensor_id, value, timestamp) values (2, 2, 18.9, '2022-01-01 09:00:00') on conflict (reading_id) do update set sensor_id = excluded.sensor_id, value = excluded.value, timestamp = excluded.timestamp</s>
<t>CREATE TABLE readings (reading_id INT PRIMARY KEY, sensor_id INT, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_type TEXT, location TEXT, status TEXT)</t><s>INSERT INTO readings (reading_id, sensor_id, value, timestamp) VALUES (2, 2, 18.9, '2022-01-01 09:00:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, value = excluded.value, timestamp = excluded.timestamp</s>
<t>CREATE TABLE readings (reading_id INT PRIMARY KEY, sensor_id INT, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_type TEXT, location TEXT, status TEXT)</t><s>insert into readings (reading_id, sensor_id, value, timestamp) values (2, 2, 18.9, '2022-01-01 09:00:00') on conflict (reading_id) do update set sensor_id = excluded.sensor_id, value = excluded.value, timestamp = excluded.timestamp</s>
<t>CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);
</t><s>UPSERT INTO smart_streetlights (id, location, status, brightness) VALUES (1, 'Main Street', 'ON', 80) ON DUPLICATE KEY UPDATE status='ON', brightness=80;</s>
<t>CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);
</t><s>upsert into smart_streetlights (id, location, status, brightness) values (1, 'main street', 'on', 80) on duplicate key update status='on', brightness=80;</s>
<t>CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);
</t><s>UPSERT INTO smart_streetlights (id, location, status, brightness) VALUES (1, 'Main Street', 'ON', 80) ON DUPLICATE KEY UPDATE status='ON', brightness=80;</s>
<t>CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);
</t><s>upsert into smart_streetlights (id, location, status, brightness) values (1, 'main street', 'on', 80) on duplicate key update status='on', brightness=80;</s>
<t>CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);
</t><s>UPSERT INTO smart_streetlights (id, location, status, brightness) VALUES (1, 'Main Street', 'ON', 80) ON DUPLICATE KEY UPDATE status='ON', brightness=80;</s>
<t>CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);
</t><s>upsert into smart_streetlights (id, location, status, brightness) values (1, 'main street', 'on', 80) on duplicate key update status='on', brightness=80;</s>
<t>CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);
</t><s>UPSERT INTO smart_streetlights (id, location, status, brightness) VALUES (1, 'Main Street', 'ON', 80) ON DUPLICATE KEY UPDATE status='ON', brightness=80;</s>
<t>CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);
</t><s>upsert into smart_streetlights (id, location, status, brightness) values (1, 'main street', 'on', 80) on duplicate key update status='on', brightness=80;</s>
<t>CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);
</t><s>UPSERT INTO smart_streetlights (id, location, status, brightness) VALUES (1, 'Main Street', 'ON', 80) ON DUPLICATE KEY UPDATE status='ON', brightness=80;</s>
<t>CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);
</t><s>upsert into smart_streetlights (id, location, status, brightness) values (1, 'main street', 'on', 80) on duplicate key update status='on', brightness=80;</s>
<t>CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);
</t><s>UPSERT INTO smart_streetlights (id, location, status, brightness) VALUES (1, 'Main Street', 'ON', 80) ON DUPLICATE KEY UPDATE status='ON', brightness=80;</s>
<t>CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);
</t><s>upsert into smart_streetlights (id, location, status, brightness) values (1, 'main street', 'on', 80) on duplicate key update status='on', brightness=80;</s>
<t>CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);
</t><s>UPSERT INTO traffic_cameras (camera_id, location, camera_type, status) VALUES (1, 'Intersection A', 'PTZ', 'Active') ON DUPLICATE KEY UPDATE camera_type='PTZ', status='Active';</s>
<t>CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);
</t><s>upsert into traffic_cameras (camera_id, location, camera_type, status) values (1, 'intersection a', 'ptz', 'active') on duplicate key update camera_type='ptz', status='active';</s>
<t>CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);
</t><s>UPSERT INTO traffic_cameras (camera_id, location, camera_type, status) VALUES (1, 'Intersection A', 'PTZ', 'Active') ON DUPLICATE KEY UPDATE camera_type='PTZ', status='Active';</s>
<t>CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);
</t><s>upsert into traffic_cameras (camera_id, location, camera_type, status) values (1, 'intersection a', 'ptz', 'active') on duplicate key update camera_type='ptz', status='active';</s>
<t>CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);
</t><s>UPSERT INTO traffic_cameras (camera_id, location, camera_type, status) VALUES (1, 'Intersection A', 'PTZ', 'Active') ON DUPLICATE KEY UPDATE camera_type='PTZ', status='Active';</s>
<t>CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);
</t><s>upsert into traffic_cameras (camera_id, location, camera_type, status) values (1, 'intersection a', 'ptz', 'active') on duplicate key update camera_type='ptz', status='active';</s>
<t>CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);
</t><s>UPSERT INTO traffic_cameras (camera_id, location, camera_type, status) VALUES (1, 'Intersection A', 'PTZ', 'Active') ON DUPLICATE KEY UPDATE camera_type='PTZ', status='Active';</s>
<t>CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);
</t><s>upsert into traffic_cameras (camera_id, location, camera_type, status) values (1, 'intersection a', 'ptz', 'active') on duplicate key update camera_type='ptz', status='active';</s>
<t>CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);
</t><s>UPSERT INTO traffic_cameras (camera_id, location, camera_type, status) VALUES (1, 'Intersection A', 'PTZ', 'Active') ON DUPLICATE KEY UPDATE camera_type='PTZ', status='Active';</s>
<t>CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);
</t><s>upsert into traffic_cameras (camera_id, location, camera_type, status) values (1, 'intersection a', 'ptz', 'active') on duplicate key update camera_type='ptz', status='active';</s>
<t>CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);
</t><s>UPSERT INTO traffic_cameras (camera_id, location, camera_type, status) VALUES (1, 'Intersection A', 'PTZ', 'Active') ON DUPLICATE KEY UPDATE camera_type='PTZ', status='Active';</s>
<t>CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);
</t><s>upsert into traffic_cameras (camera_id, location, camera_type, status) values (1, 'intersection a', 'ptz', 'active') on duplicate key update camera_type='ptz', status='active';</s>
<t>CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);
</t><s>UPSERT INTO weather_sensors (sensor_id, location, temperature, humidity) VALUES (1, 'Central Park', 25.7, 60.5) ON DUPLICATE KEY UPDATE temperature=25.7, humidity=60.5;</s>
<t>CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);
</t><s>upsert into weather_sensors (sensor_id, location, temperature, humidity) values (1, 'central park', 25.7, 60.5) on duplicate key update temperature=25.7, humidity=60.5;</s>
<t>CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);
</t><s>UPSERT INTO weather_sensors (sensor_id, location, temperature, humidity) VALUES (1, 'Central Park', 25.7, 60.5) ON DUPLICATE KEY UPDATE temperature=25.7, humidity=60.5;</s>
<t>CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);
</t><s>upsert into weather_sensors (sensor_id, location, temperature, humidity) values (1, 'central park', 25.7, 60.5) on duplicate key update temperature=25.7, humidity=60.5;</s>
<t>CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);
</t><s>UPSERT INTO weather_sensors (sensor_id, location, temperature, humidity) VALUES (1, 'Central Park', 25.7, 60.5) ON DUPLICATE KEY UPDATE temperature=25.7, humidity=60.5;</s>
<t>CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);
</t><s>upsert into weather_sensors (sensor_id, location, temperature, humidity) values (1, 'central park', 25.7, 60.5) on duplicate key update temperature=25.7, humidity=60.5;</s>
<t>CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);
</t><s>UPSERT INTO weather_sensors (sensor_id, location, temperature, humidity) VALUES (1, 'Central Park', 25.7, 60.5) ON DUPLICATE KEY UPDATE temperature=25.7, humidity=60.5;</s>
<t>CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);
</t><s>upsert into weather_sensors (sensor_id, location, temperature, humidity) values (1, 'central park', 25.7, 60.5) on duplicate key update temperature=25.7, humidity=60.5;</s>
<t>CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);
</t><s>UPSERT INTO weather_sensors (sensor_id, location, temperature, humidity) VALUES (1, 'Central Park', 25.7, 60.5) ON DUPLICATE KEY UPDATE temperature=25.7, humidity=60.5;</s>
<t>CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);
</t><s>upsert into weather_sensors (sensor_id, location, temperature, humidity) values (1, 'central park', 25.7, 60.5) on duplicate key update temperature=25.7, humidity=60.5;</s>
<t>CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);
</t><s>UPSERT INTO weather_sensors (sensor_id, location, temperature, humidity) VALUES (1, 'Central Park', 25.7, 60.5) ON DUPLICATE KEY UPDATE temperature=25.7, humidity=60.5;</s>
<t>CREATE TABLE weather_sensors (
    sensor_id INT PRIMARY KEY,
    location VARCHAR(255),
    temperature FLOAT,
    humidity FLOAT
);


CREATE TABLE traffic_cameras (
    camera_id INT PRIMARY KEY,
    location VARCHAR(255),
    camera_type VARCHAR(50),
    status VARCHAR(50)
);


CREATE TABLE smart_streetlights (
    id INT PRIMARY KEY,
    location VARCHAR(255),
    status VARCHAR(50),
    brightness INT
);
</t><s>upsert into weather_sensors (sensor_id, location, temperature, humidity) values (1, 'central park', 25.7, 60.5) on duplicate key update temperature=25.7, humidity=60.5;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO city (city_id, city_name, population) VALUES (1, 'New York', 8000000) ON DUPLICATE KEY UPDATE city_name = 'New York', population = 8000000;</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into city (city_id, city_name, population) values (1, 'new york', 8000000) on duplicate key update city_name = 'new york', population = 8000000;</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO sensors (sensor_id, sensor_type, location, city_id) VALUES (1, 'Temperature', 'Room A', 1) ON DUPLICATE KEY UPDATE sensor_type = 'Temperature', location = 'Room A';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into sensors (sensor_id, sensor_type, location, city_id) values (1, 'temperature', 'room a', 1) on duplicate key update sensor_type = 'temperature', location = 'room a';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>UPSERT INTO events (event_id, event_name, event_date, city_id) VALUES (1, 'Music Festival', '2022-09-10', 1) ON DUPLICATE KEY UPDATE event_name = 'Music Festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE weather (
    weather_id INT PRIMARY KEY,
    temperature INT,
    humidity FLOAT,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE events (
    event_id INT PRIMARY KEY,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE sensors (
    sensor_id INT PRIMARY KEY,
    sensor_type VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    city_id INT,
    FOREIGN KEY (city_id) REFERENCES city(city_id)
);


CREATE TABLE city (
    city_id INT PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    population INT
);
</t><s>upsert into events (event_id, event_name, event_date, city_id) values (1, 'music festival', '2022-09-10', 1) on duplicate key update event_name = 'music festival', event_date = '2022-09-10';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO users(user_id, name, age, city) VALUES ('1', 'John Doe', 30, 'New York') ON CONFLICT (user_id) DO UPDATE SET name = 'John Doe', age = 30, city = 'New York';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into users(user_id, name, age, city) values ('1', 'john doe', 30, 'new york') on conflict (user_id) do update set name = 'john doe', age = 30, city = 'new york';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO devices(device_id, device_name, user_id, location) VALUES ('1', 'Mobile Phone', '1', 'Home') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Mobile Phone', user_id = '1', location = 'Home';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into devices(device_id, device_name, user_id, location) values ('1', 'mobile phone', '1', 'home') on conflict (device_id) do update set device_name = 'mobile phone', user_id = '1', location = 'home';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>INSERT INTO sensors(sensor_id, sensor_type, device_id, status) VALUES ('1', 'Temperature Sensor', '1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_type = 'Temperature Sensor', device_id = '1', status = 'Active';</s>
<t>CREATE TABLE events (event_id UUID PRIMARY KEY, event_name STRING, sensor_id UUID REFERENCES sensors(sensor_id), event_type STRING)

CREATE TABLE locations (location_id UUID PRIMARY KEY, location_name STRING, city STRING)

CREATE TABLE sensors (sensor_id UUID PRIMARY KEY, sensor_type STRING, device_id UUID REFERENCES devices(device_id), status STRING)

CREATE TABLE devices (device_id UUID PRIMARY KEY, device_name STRING, user_id UUID REFERENCES users(user_id), location STRING)

CREATE TABLE users (user_id UUID PRIMARY KEY, name STRING, age INT, city STRING)</t><s>insert into sensors(sensor_id, sensor_type, device_id, status) values ('1', 'temperature sensor', '1', 'active') on conflict (sensor_id) do update set sensor_type = 'temperature sensor', device_id = '1', status = 'active';</s>
