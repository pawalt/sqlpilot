[
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE log_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT action, timestamp FROM audit_logs WHERE user_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT log_id, details FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM audit_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(log_id) FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(user_id) FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM audit_logs ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT user_id, MIN(timestamp) FROM audit_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT log_id, action, timestamp FROM audit_logs WHERE action LIKE '%delete%';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT log_id, details FROM audit_logs WHERE details IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(log_id) FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM audit_logs WHERE user_id IN (1, 2, 3) GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT log_id, action, timestamp FROM audit_logs WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(log_id), MIN(log_id) FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT user_id) FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM audit_logs LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT SUM(user_id) FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE user_id = 1 AND action = 'login';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT log_id, action, timestamp FROM audit_logs WHERE user_id = 2 ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(log_id), MAX(user_id) FROM audit_logs WHERE action LIKE '%delete%';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM audit_logs WHERE action = 'logout' OR action = 'session_expired';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_logs FROM audit_logs GROUP BY user_id HAVING total_logs > 10;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT action FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_logs FROM audit_logs GROUP BY user_id ORDER BY total_logs DESC;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT action, COUNT(*) AS action_count FROM audit_logs GROUP BY action HAVING action_count > 100;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(log_id) AS total_logs FROM audit_logs GROUP BY user_id HAVING total_logs > 1000;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT action, AVG(user_id) AS avg_user_id FROM audit_logs GROUP BY action;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE details IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(timestamp), MAX(timestamp) FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE user_id IN (1, 2, 3) AND action != 'logout' ORDER BY timestamp ASC;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT action, COUNT(*) AS action_count FROM audit_logs WHERE user_id BETWEEN 1 AND 10 GROUP BY action;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_logs FROM audit_logs WHERE timestamp > '2022-06-01' GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT action, SUM(user_id) AS total_user_id FROM audit_logs GROUP BY action ORDER BY total_user_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT user_id, MAX(log_id) FROM audit_logs GROUP BY user_id HAVING MAX(log_id) > 500;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT log_id, action, details FROM audit_logs WHERE action LIKE '%error%' OR details LIKE '%error%' ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nSELECT action, COUNT(*) AS action_count FROM audit_logs GROUP BY action HAVING action_count < 50;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, action FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, timestamp FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_roles;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, role FROM user_roles;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, role FROM user_roles WHERE role='admin';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT role FROM user_roles;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, role FROM user_roles ORDER BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT action, COUNT(*) AS num_actions FROM audit_logs GROUP BY action;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS num_actions FROM audit_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(timestamp) AS last_activity FROM audit_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(timestamp) AS first_activity FROM audit_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, role FROM user_roles JOIN audit_logs ON user_roles.user_id = audit_logs.user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, role FROM user_roles LEFT JOIN audit_logs ON user_roles.user_id = audit_logs.user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, role FROM user_roles RIGHT JOIN audit_logs ON user_roles.user_id = audit_logs.user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, role FROM user_roles INNER JOIN audit_logs ON user_roles.user_id = audit_logs.user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, role FROM user_roles JOIN audit_logs ON user_roles.user_id = audit_logs.user_id WHERE role='user';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, role FROM user_roles JOIN audit_logs ON user_roles.user_id = audit_logs.user_id ORDER BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, role FROM user_roles JOIN audit_logs ON user_roles.user_id = audit_logs.user_id GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, role FROM user_roles JOIN audit_logs ON user_roles.user_id = audit_logs.user_id HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, action FROM audit_logs WHERE action LIKE '%login%';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM audit_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT a.user_id, a.action, u.role FROM audit_logs a JOIN user_roles u ON a.user_id = u.user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM audit_logs WHERE action = 'create' GROUP BY user_id HAVING COUNT(*) >= 3;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(timestamp) AS last_timestamp FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(timestamp) AS last_action_time FROM audit_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(timestamp) AS avg_action_time FROM audit_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(timestamp) AS first_action_time, MAX(timestamp) AS last_action_time FROM audit_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, action, timestamp FROM audit_logs ORDER BY timestamp DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_actions FROM audit_logs GROUP BY user_id ORDER BY total_actions DESC;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(timestamp) - MIN(timestamp) AS time_difference FROM audit_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT user_id) AS total_users FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT u.role, COUNT(*) AS action_count FROM audit_logs a JOIN user_roles u ON a.user_id = u.user_id GROUP BY u.role;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(DATEDIFF(timestamp, '2022-01-01')) AS avg_days_since_last_action FROM audit_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT u.role, COUNT(*) AS user_count FROM user_roles u JOIN audit_logs a ON u.user_id = a.user_id GROUP BY u.role HAVING COUNT(*) >= 3;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, DATEDIFF(MAX(timestamp), MIN(timestamp)) AS time_range_days FROM audit_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, DATE(timestamp) AS date, COUNT(*) AS actions_count FROM audit_logs GROUP BY user_id, date;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(DISTINCT action) AS unique_actions_count FROM audit_logs GROUP BY user_id HAVING COUNT(DISTINCT action) > 1;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, CONCAT(action, ' - ', role) AS action_role FROM audit_logs a JOIN user_roles u ON a.user_id = u.user_id ORDER BY timestamp DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE log_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE user_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT action, action_timestamp FROM audit_logs WHERE log_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM audit_trail WHERE trail_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, trail_timestamp FROM audit_trail WHERE trail_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE user_id = 15;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, action_timestamp FROM audit_logs WHERE log_id = 8;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, created_at FROM users WHERE email = 'example@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT action, action_timestamp FROM audit_logs WHERE log_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM audit_trail WHERE log_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE user_id = 20;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE user_id = 12;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT trail_id, trail_timestamp FROM audit_trail WHERE trail_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE username = 'alice_smith';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, action FROM audit_logs WHERE user_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, created_at FROM users WHERE user_id = 18;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM audit_trail WHERE log_id = 9;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, action_timestamp FROM audit_logs WHERE user_id = 11;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE user_id = 25;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, action FROM audit_logs WHERE action_timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE created_at BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM audit_trail WHERE trail_timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, action_details FROM audit_trail WHERE trail_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE username LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM audit_logs JOIN users ON audit_logs.user_id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM audit_trail JOIN audit_logs ON audit_trail.log_id = audit_logs.log_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, action FROM audit_logs WHERE user_id = (SELECT user_id FROM users WHERE username = 'alice');",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE user_id IN (SELECT user_id FROM audit_logs WHERE action = 'delete');",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, action_details FROM audit_trail WHERE log_id IN (SELECT log_id FROM audit_logs WHERE user_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE action LIKE '%login%';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM audit_trail WHERE action_details REGEXP '[0-9]+';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, action_timestamp FROM audit_logs WHERE action_timestamp = (SELECT MAX(action_timestamp) FROM audit_logs);",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(trail_timestamp) FROM audit_trail GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(log_id) FROM audit_logs GROUP BY user_id HAVING COUNT(log_id) >= 3;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, COUNT(log_id) AS total_actions FROM users JOIN audit_logs ON users.user_id = audit_logs.user_id GROUP BY username;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(trail_id) AS total_trail FROM audit_trail GROUP BY user_id HAVING COUNT(trail_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM audit_log;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT log_id, user_id, action, timestamp FROM audit_log;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, username FROM user;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM user WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT action_id, action_name FROM action_type;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT description, completed FROM compliance_efforts;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT log_id, user_id, action, timestamp FROM audit_log WHERE user_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, email FROM user WHERE username = 'example_username';",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT action_id, action_name FROM action_type WHERE action_name = 'example_action';",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM audit_log ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM user WHERE username LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_efforts LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM audit_log WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT AVG(user_id) FROM user;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM action_type;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT MAX(user_id) FROM user;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT action_id, COUNT(*) FROM audit_log GROUP BY action_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(CASE WHEN completed = true THEN 1 ELSE 0 END) AS completed_count FROM compliance_efforts GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT AVG(user_id) AS avg_user_id FROM user WHERE username <> 'admin';",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM audit_log WHERE user_id IN (SELECT user_id FROM user WHERE username = 'example_username');",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM audit_log WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, email FROM user WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT action_name FROM action_type WHERE action_id = 1",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT description FROM compliance_efforts WHERE effort_id = 1",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM audit_log WHERE timestamp >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT username FROM user WHERE email = 'example@email.com'",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM action_type WHERE action_name LIKE '%update%'",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_efforts WHERE completed = TRUE",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT user.username, audit_log.action, audit_log.timestamp FROM user JOIN audit_log ON user.user_id = audit_log.user_id",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT user.username, audit_log.action, audit_log.timestamp FROM user LEFT JOIN audit_log ON user.user_id = audit_log.user_id",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT user.username, audit_log.action, audit_log.timestamp FROM user RIGHT JOIN audit_log ON user.user_id = audit_log.user_id",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM user WHERE user_id IN (SELECT user_id FROM audit_log)",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT user.username, audit_log.action, audit_log.timestamp FROM user INNER JOIN audit_log ON user.user_id = audit_log.user_id",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT user.username, COUNT(*) as total_logs FROM user JOIN audit_log ON user.user_id = audit_log.user_id GROUP BY user.username",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT user.username, action_type.action_name, audit_log.timestamp FROM user JOIN audit_log ON user.user_id = audit_log.user_id JOIN action_type ON action_type.action_id = audit_log.action_id",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT user.username, action_type.action_name, audit_log.timestamp FROM user JOIN audit_log ON user.user_id = audit_log.user_id JOIN action_type ON action_type.action_id = audit_log.action_id WHERE audit_log.timestamp >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT user.username, audit_log.action, audit_log.timestamp FROM user JOIN audit_log ON user.user_id = audit_log.user_id WHERE user.username = 'JohnDoe'",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT user.username, COUNT(*) as total_efforts FROM user JOIN compliance_efforts ON user.user_id = compliance_efforts.user_id GROUP BY user.username",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nSELECT user.username, AVG(cast(compliance_efforts.completed as INTEGER)) as avg_completed FROM user JOIN compliance_efforts ON user.user_id = compliance_efforts.user_id GROUP BY user.username",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM AuditLog;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT id, action_type FROM AuditLog;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT user_id, timestamp FROM AuditLog;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM UserAccount;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM UserAccount;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT password, email FROM UserAccount;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM UserRole;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT role_id, role_name FROM UserRole;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM UserLog;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT log_id, user_id, login_time FROM UserLog;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT user_id, logout_time FROM UserLog;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM AuditTrail;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT trail_id, action_id, action_type FROM AuditTrail;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT timestamp, user_id FROM AuditTrail;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT id, action_type, user_id FROM AuditLog WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT username FROM UserAccount WHERE username = 'example_username';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM UserLog WHERE user_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT user_id, action_type FROM AuditTrail WHERE action_type = 'login';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT user_id, timestamp FROM AuditTrail WHERE user_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT trail_id, action_id, action_type FROM AuditTrail WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM AuditLog ORDER BY timestamp DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM AuditLog WHERE user_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT action_type, timestamp FROM AuditLog WHERE action_type = 'CREATE';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT user_id, timestamp FROM AuditLog WHERE action_type = 'DELETE' AND user_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT action_type, user_id, timestamp FROM AuditLog WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM UserAccount WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM UserAccount WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM UserRole WHERE role_name = 'Admin';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM UserRole WHERE role_name = 'User';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM UserLog WHERE user_id = 10 AND logout_time IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM UserLog WHERE login_time >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM AuditTrail WHERE action_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM AuditTrail WHERE action_type = 'UPDATE' ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT user_id, action_type, timestamp FROM AuditTrail WHERE user_id = 5 AND action_type = 'LOGIN' ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM UserAccount INNER JOIN UserRole ON UserAccount.user_id = UserRole.role_id;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT ua.username, ur.role_name FROM UserAccount ua INNER JOIN UserRole ur ON ua.user_id = ur.role_id WHERE ur.role_name = 'Admin';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT a.action_type, u.username, a.timestamp FROM AuditLog a JOIN UserAccount u ON a.user_id = u.user_id;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT u.username, a.action_type, a.timestamp FROM AuditLog a JOIN UserAccount u ON a.user_id = u.user_id WHERE u.username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT al.action_type, al.timestamp, ua.username FROM AuditLog al JOIN UserAccount ua ON al.user_id = ua.user_id WHERE al.user_id IN (SELECT user_id FROM UserLog WHERE logout_time IS NULL);",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_logins FROM UserLog WHERE logout_time IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM UserLog;"
]