[
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (1, 'Login', '2022-01-01 12:00:00', 1001, 'User logged in')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (2, 'Logout', '2022-01-02 15:30:00', 1002, 'User logged out')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (3, 'Update Profile', '2022-01-03 08:45:00', 1003, 'User updated profile')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (4, 'Create Post', '2022-01-04 10:20:00', 1001, 'User created a new post')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (5, 'Delete Post', '2022-01-05 14:10:00', 1002, 'User deleted a post')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (6, 'Like Post', '2022-01-06 11:00:00', 1003, 'User liked a post')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (7, 'Unlike Post', '2022-01-07 16:55:00', 1001, 'User unliked a post')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (8, 'Comment on Post', '2022-01-08 13:30:00', 1002, 'User commented on a post')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (9, 'Share Post', '2022-01-09 09:20:00', 1001, 'User shared a post')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (10, 'Send Message', '2022-01-10 17:40:00', 1003, 'User sent a message')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (11, 'Receive Message', '2022-01-11 18:15:00', 1002, 'User received a message')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (12, 'Create Event', '2022-01-12 10:05:00', 1003, 'User created an event')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (13, 'Join Event', '2022-01-13 07:30:00', 1001, 'User joined an event')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (14, 'Cancel Event', '2022-01-14 16:00:00', 1002, 'User canceled an event')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (15, 'Update Settings', '2022-01-15 12:50:00', 1003, 'User updated settings')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (16, 'Change Password', '2022-01-16 09:35:00', 1001, 'User changed password')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (17, 'Add Friend', '2022-01-17 15:25:00', 1002, 'User added a friend')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (18, 'Remove Friend', '2022-01-18 11:10:00', 1001, 'User removed a friend')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (19, 'Block User', '2022-01-19 19:00:00', 1003, 'User blocked another user')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (20, 'Unblock User', '2022-01-20 14:20:00', 1002, 'User unblocked a user')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (1, 'Login', '2022-01-01 08:00:00', 1001, 'User login success')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (2, 'Logout', '2022-01-02 12:00:00', 1002, 'User logout')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (3, 'Update Profile', '2022-01-03 09:30:00', 1001, 'User profile updated')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (4, 'Insert Record', '2022-01-04 14:15:00', 1003, 'New record inserted')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (5, 'Delete Record', '2022-01-05 10:45:00', 1004, 'Record deleted')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (6, 'Login', '2022-01-06 11:30:00', 1002, 'User login success')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (7, 'Update Profile', '2022-01-07 13:20:00', 1003, 'User profile updated')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (8, 'Logout', '2022-01-08 15:10:00', 1001, 'User logout')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (9, 'Insert Record', '2022-01-09 09:00:00', 1004, 'New record inserted')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (10, 'Delete Record', '2022-01-10 16:30:00', 1002, 'Record deleted')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (11, 'Login', '2022-01-11 17:45:00', 1003, 'User login success')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (12, 'Update Profile', '2022-01-12 18:20:00', 1004, 'User profile updated')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (13, 'Logout', '2022-01-13 19:00:00', 1001, 'User logout')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (14, 'Insert Record', '2022-01-14 20:30:00', 1002, 'New record inserted')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (15, 'Delete Record', '2022-01-15 21:15:00', 1003, 'Record deleted')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (16, 'Login', '2022-01-16 22:45:00', 1004, 'User login success')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (17, 'Update Profile', '2022-01-17 23:10:00', 1001, 'User profile updated')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (18, 'Logout', '2022-01-18 08:30:00', 1002, 'User logout')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (19, 'Insert Record', '2022-01-19 10:20:00', 1003, 'New record inserted')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT,\n    details TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO audit_logs (log_id, action, timestamp, user_id, details) VALUES (20, 'Delete Record', '2022-01-20 11:50:00', 1004, 'Record deleted')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (1, 'create', 1001, '2022-09-15 10:00:00')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO user_roles (user_id, role) VALUES (1001, 'admin')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (2, 'update', 1002, '2022-09-16 11:30:00')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO user_roles (user_id, role) VALUES (1002, 'editor')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (3, 'delete', 1003, '2022-09-17 13:45:00')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO user_roles (user_id, role) VALUES (1003, 'viewer')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (4, 'create', 1004, '2022-09-18 15:15:00')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO user_roles (user_id, role) VALUES (1004, 'admin')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (5, 'update', 1005, '2022-09-19 17:20:00')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO user_roles (user_id, role) VALUES (1005, 'editor')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (6, 'delete', 1006, '2022-09-20 19:30:00')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO user_roles (user_id, role) VALUES (1006, 'viewer')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (7, 'create', 1007, '2022-09-21 21:45:00')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO user_roles (user_id, role) VALUES (1007, 'admin')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (8, 'update', 1008, '2022-09-22 23:10:00')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO user_roles (user_id, role) VALUES (1008, 'editor')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (9, 'delete', 1009, '2022-09-23 01:25:00')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO user_roles (user_id, role) VALUES (1009, 'viewer')",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (1, 'login', 1001, '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE action = 'loginUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (2, 'logout', 1002, CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE action = 'logoutUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (3, 'updateProfile', 1003, '2022-01-02 10:30:00') ON DUPLICATE KEY UPDATE action = 'updateProfileUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (4, 'deleteAccount', 1004, '2022-01-03 11:00:00') ON DUPLICATE KEY UPDATE action = 'deleteAccountUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (5, 'login', 1005, CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE action = 'loginUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (6, 'logout', 1006, '2022-01-04 12:00:00') ON DUPLICATE KEY UPDATE action = 'logoutUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (7, 'updateProfile', 1007, '2022-01-05 13:00:00') ON DUPLICATE KEY UPDATE action = 'updateProfileUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (8, 'deleteAccount', 1008, CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE action = 'deleteAccountUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (9, 'login', 1009, '2022-01-06 14:00:00') ON DUPLICATE KEY UPDATE action = 'loginUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (10, 'logout', 1010, '2022-01-07 15:00:00') ON DUPLICATE KEY UPDATE action = 'logoutUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (11, 'updateProfile', 1011, CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE action = 'updateProfileUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (12, 'deleteAccount', 1012, '2022-01-08 16:00:00') ON DUPLICATE KEY UPDATE action = 'deleteAccountUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (13, 'login', 1013, '2022-01-09 17:00:00') ON DUPLICATE KEY UPDATE action = 'loginUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (14, 'logout', 1014, '2022-01-10 18:00:00') ON DUPLICATE KEY UPDATE action = 'logoutUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (15, 'updateProfile', 1015, '2022-01-11 19:00:00') ON DUPLICATE KEY UPDATE action = 'updateProfileUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (16, 'deleteAccount', 1016, '2022-01-12 20:00:00') ON DUPLICATE KEY UPDATE action = 'deleteAccountUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (17, 'login', 1017, '2022-01-13 21:00:00') ON DUPLICATE KEY UPDATE action = 'loginUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (18, 'logout', 1018, '2022-01-14 22:00:00') ON DUPLICATE KEY UPDATE action = 'logoutUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (19, 'updateProfile', 1019, '2022-01-15 23:00:00') ON DUPLICATE KEY UPDATE action = 'updateProfileUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n    id INT PRIMARY KEY,\n    action VARCHAR(255),\n    user_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_roles (\n    user_id INT PRIMARY KEY,\n    role VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_logs (id, action, user_id, timestamp) VALUES (20, 'deleteAccount', 1020, CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE action = 'deleteAccountUpdated';",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (1, 1001, 'Login', '2022-07-15 08:00:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, action = excluded.action, action_timestamp = excluded.action_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (2, 1002, 'Logout', '2022-07-16 09:00:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, action = excluded.action, action_timestamp = excluded.action_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (3, 1003, 'Update Profile', '2022-07-17 10:00:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, action = excluded.action, action_timestamp = excluded.action_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (4, 1004, 'Create Post', '2022-07-18 11:00:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, action = excluded.action, action_timestamp = excluded.action_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (5, 1005, 'Delete Post', '2022-07-19 12:00:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, action = excluded.action, action_timestamp = excluded.action_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (6, 1006, 'Add Friend', '2022-07-20 13:00:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, action = excluded.action, action_timestamp = excluded.action_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (7, 1007, 'Remove Friend', '2022-07-21 14:00:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, action = excluded.action, action_timestamp = excluded.action_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (8, 1008, 'Like Post', '2022-07-22 15:00:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, action = excluded.action, action_timestamp = excluded.action_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (9, 1009, 'Comment on Post', '2022-07-23 16:00:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, action = excluded.action, action_timestamp = excluded.action_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (10, 1010, 'Share Post', '2022-07-24 17:00:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, action = excluded.action, action_timestamp = excluded.action_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1001, 'john_doe', 'john.doe@example.com', '2022-07-15 08:00:00') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1002, 'jane_smith', 'jane.smith@example.com', '2022-07-16 09:00:00') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1003, 'alice_jones', 'alice.jones@example.com', '2022-07-17 10:00:00') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1004, 'bob_smith', 'bob.smith@example.com', '2022-07-18 11:00:00') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1005, 'emma_wilson', 'emma.wilson@example.com', '2022-07-19 12:00:00') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1006, 'david_jones', 'david.jones@example.com', '2022-07-20 13:00:00') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1007, 'sarah_brown', 'sarah.brown@example.com', '2022-07-21 14:00:00') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1008, 'tom_wilson', 'tom.wilson@example.com', '2022-07-22 15:00:00') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1009, 'lisa_smith', 'lisa.smith@example.com', '2022-07-23 16:00:00') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1010, 'michael_brown', 'michael.brown@example.com', '2022-07-24 17:00:00') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (1, 1, 'User logged in', '2022-07-15 08:00:00') ON CONFLICT (trail_id) DO UPDATE SET log_id = excluded.log_id, action_details = excluded.action_details, trail_timestamp = excluded.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (2, 2, 'User logged out', '2022-07-16 09:00:00') ON CONFLICT (trail_id) DO UPDATE SET log_id = excluded.log_id, action_details = excluded.action_details, trail_timestamp = excluded.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (3, 3, 'Profile updated', '2022-07-17 10:00:00') ON CONFLICT (trail_id) DO UPDATE SET log_id = excluded.log_id, action_details = excluded.action_details, trail_timestamp = excluded.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (4, 4, 'Post created', '2022-07-18 11:00:00') ON CONFLICT (trail_id) DO UPDATE SET log_id = excluded.log_id, action_details = excluded.action_details, trail_timestamp = excluded.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (5, 5, 'Post deleted', '2022-07-19 12:00:00') ON CONFLICT (trail_id) DO UPDATE SET log_id = excluded.log_id, action_details = excluded.action_details, trail_timestamp = excluded.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (6, 6, 'Friend added', '2022-07-20 13:00:00') ON CONFLICT (trail_id) DO UPDATE SET log_id = excluded.log_id, action_details = excluded.action_details, trail_timestamp = excluded.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (7, 7, 'Friend removed', '2022-07-21 14:00:00') ON CONFLICT (trail_id) DO UPDATE SET log_id = excluded.log_id, action_details = excluded.action_details, trail_timestamp = excluded.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (8, 8, 'Post liked', '2022-07-22 15:00:00') ON CONFLICT (trail_id) DO UPDATE SET log_id = excluded.log_id, action_details = excluded.action_details, trail_timestamp = excluded.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (9, 9, 'Comment posted', '2022-07-23 16:00:00') ON CONFLICT (trail_id) DO UPDATE SET log_id = excluded.log_id, action_details = excluded.action_details, trail_timestamp = excluded.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (10, 10, 'Post shared', '2022-07-24 17:00:00') ON CONFLICT (trail_id) DO UPDATE SET log_id = excluded.log_id, action_details = excluded.action_details, trail_timestamp = excluded.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (1, 1001, 'Login', '2022-01-01 08:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1001, 'john_doe', 'john.doe@example.com', '2022-01-01 00:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (1, 1, 'User logged in successfully', '2022-01-01 08:00:00') ON CONFLICT (trail_id) DO UPDATE SET action_details = EXCLUDED.action_details, trail_timestamp = EXCLUDED.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (2, 1002, 'Logout', '2022-01-02 10:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1002, 'jane_smith', 'jane.smith@example.com', '2022-01-02 00:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (2, 2, 'User logged out', '2022-01-02 10:00:00') ON CONFLICT (trail_id) DO UPDATE SET action_details = EXCLUDED.action_details, trail_timestamp = EXCLUDED.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (3, 1003, 'Update Profile', '2022-01-03 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1003, 'alice_green', 'alice.green@example.com', '2022-01-03 00:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (3, 3, 'User updated profile information', '2022-01-03 12:00:00') ON CONFLICT (trail_id) DO UPDATE SET action_details = EXCLUDED.action_details, trail_timestamp = EXCLUDED.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (4, 1004, 'Delete Account', '2022-01-04 15:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1004, 'bob_jackson', 'bob.jackson@example.com', '2022-01-04 00:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (4, 4, 'User account deleted', '2022-01-04 15:00:00') ON CONFLICT (trail_id) DO UPDATE SET action_details = EXCLUDED.action_details, trail_timestamp = EXCLUDED.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (5, 1005, 'Register', '2022-01-05 18:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1005, 'sarah_miller', 'sarah.miller@example.com', '2022-01-05 00:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (5, 5, 'New user registered', '2022-01-05 18:00:00') ON CONFLICT (trail_id) DO UPDATE SET action_details = EXCLUDED.action_details, trail_timestamp = EXCLUDED.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (6, 1001, 'Logout', '2022-01-06 09:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1001, 'john_smith', 'john.smith@example.com', '2022-01-06 00:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (6, 6, 'User logged out', '2022-01-06 09:00:00') ON CONFLICT (trail_id) DO UPDATE SET action_details = EXCLUDED.action_details, trail_timestamp = EXCLUDED.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (7, 1006, 'Update Profile', '2022-01-07 14:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1006, 'emma_adams', 'emma.adams@example.com', '2022-01-07 00:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (7, 7, 'User updated profile information', '2022-01-07 14:00:00') ON CONFLICT (trail_id) DO UPDATE SET action_details = EXCLUDED.action_details, trail_timestamp = EXCLUDED.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, user_id, action, action_timestamp) VALUES (8, 1002, 'Delete Account', '2022-01-08 17:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1002, 'jane_doe', 'jane.doe@example.com', '2022-01-08 00:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  action_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  trail_id INT PRIMARY KEY,\n  log_id INT NOT NULL,\n  action_details VARCHAR(255) NOT NULL,\n  trail_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (trail_id, log_id, action_details, trail_timestamp) VALUES (8, 8, 'User account deleted', '2022-01-08 17:00:00') ON CONFLICT (trail_id) DO UPDATE SET action_details = EXCLUDED.action_details, trail_timestamp = EXCLUDED.trail_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO audit_log (user_id, action, timestamp) VALUES (1, 'login', CURRENT_TIMESTAMP) ON CONFLICT (user_id, action) DO UPDATE SET timestamp = CURRENT_TIMESTAMP",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO user (username, email) VALUES ('john_doe', 'john.doe@example.com') ON CONFLICT (username) DO UPDATE SET email = 'john_doe@example.com'",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO action_type (action_name) VALUES ('logout') ON CONFLICT (action_name) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO compliance_efforts (description, completed) VALUES ('Regular security audits', FALSE) ON CONFLICT (description) DO UPDATE SET completed = TRUE",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO audit_log (user_id, action, timestamp) VALUES (2, 'logout', CURRENT_TIMESTAMP) ON CONFLICT (user_id, action) DO UPDATE SET timestamp = CURRENT_TIMESTAMP",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO user (username, email) VALUES ('jane_smith', 'jane.smith@example.com') ON CONFLICT (username) DO UPDATE SET email = 'jane_smith@example.com'",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO action_type (action_name) VALUES ('register') ON CONFLICT (action_name) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO compliance_efforts (description, completed) VALUES ('Data protection training', TRUE) ON CONFLICT (description) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO audit_log (user_id, action, timestamp) VALUES (3, 'update_profile', CURRENT_TIMESTAMP) ON CONFLICT (user_id, action) DO UPDATE SET timestamp = CURRENT_TIMESTAMP",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO user (username, email) VALUES ('alice_green', 'alice.green@example.com') ON CONFLICT (username) DO UPDATE SET email = 'alice_green@example.com'",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO action_type (action_name) VALUES ('delete_account') ON CONFLICT (action_name) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO compliance_efforts (description, completed) VALUES ('HIPAA compliance review', FALSE) ON CONFLICT (description) DO UPDATE SET completed = TRUE",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO audit_log (user_id, action, timestamp) VALUES (4, 'change_password', CURRENT_TIMESTAMP) ON CONFLICT (user_id, action) DO UPDATE SET timestamp = CURRENT_TIMESTAMP",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO user (username, email) VALUES ('bob_jackson', 'bob.jackson@example.com') ON CONFLICT (username) DO UPDATE SET email = 'bob_jackson@example.com'",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO action_type (action_name) VALUES ('reset_password') ON CONFLICT (action_name) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO compliance_efforts (description, completed) VALUES ('IT security training', TRUE) ON CONFLICT (description) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO audit_log (user_id, action, timestamp) VALUES (5, 'view_dashboard', CURRENT_TIMESTAMP) ON CONFLICT (user_id, action) DO UPDATE SET timestamp = CURRENT_TIMESTAMP",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO user (username, email) VALUES ('sam_wilson', 'sam.wilson@example.com') ON CONFLICT (username) DO UPDATE SET email = 'sam_wilson@example.com'",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO action_type (action_name) VALUES ('view_profile') ON CONFLICT (action_name) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO compliance_efforts (description, completed) VALUES ('Penetration testing', FALSE) ON CONFLICT (description) DO UPDATE SET completed = TRUE",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO audit_log (user_id, action, timestamp) VALUES (1, 'Login', CURRENT_TIMESTAMP) ON CONFLICT (user_id, action) DO UPDATE SET timestamp = EXCLUDED.timestamp",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO audit_log (user_id, action, timestamp) VALUES (2, 'Logout', CURRENT_TIMESTAMP) ON CONFLICT (user_id, action) DO UPDATE SET timestamp = EXCLUDED.timestamp",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO user (username, email) VALUES ('JohnDoe', 'johndoe@example.com') ON CONFLICT (username) DO UPDATE SET email = EXCLUDED.email",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO user (username, email) VALUES ('JaneDoe', 'janedoe@example.com') ON CONFLICT (username) DO UPDATE SET email = EXCLUDED.email",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO action_type (action_name) VALUES ('Add') ON CONFLICT (action_name) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO action_type (action_name) VALUES ('Delete') ON CONFLICT (action_name) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO compliance_efforts (description, completed) VALUES ('Perform Security Audit', true) ON CONFLICT (description) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE audit_log (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE user (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE action_type (\n  action_id SERIAL PRIMARY KEY,\n  action_name VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE compliance_efforts (\n  effort_id SERIAL PRIMARY KEY,\n  description TEXT,\n  completed BOOLEAN NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO compliance_efforts (description, completed) VALUES ('Update Privacy Policy', false) ON CONFLICT (description) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditLog (action_type, user_id, timestamp, details) VALUES ('create', 1, '2021-10-01', 'Created new record') ON CONFLICT (id) DO UPDATE SET action_type = 'create', timestamp = '2021-10-01', details = 'Updated record details';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserAccount (username, password, email) VALUES ('john_doe', 'john123', 'john@example.com') ON CONFLICT (username) DO UPDATE SET password = 'newpassword123', email = 'john_new@example.com';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserRole (role_name) VALUES ('Admin') ON CONFLICT (role_id) DO UPDATE SET role_name = 'Administrator';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserLog (user_id, login_time, logout_time) VALUES (1, '2021-10-01 08:00:00', '2021-10-01 17:00:00') ON CONFLICT (log_id) DO UPDATE SET login_time = '2021-10-01 08:00:00', logout_time = '2021-10-01 18:00:00';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditTrail (action_id, action_type, timestamp, user_id) VALUES (1, 'login', '2021-10-01', 1) ON CONFLICT (trail_id) DO UPDATE SET action_type = 'login', timestamp = '2021-10-01';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditLog (action_type, user_id, timestamp, details) VALUES ('update', 2, '2021-10-02', 'Updated record') ON CONFLICT (id) DO UPDATE SET action_type = 'update', timestamp = '2021-10-02', details = 'Updated record details';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserAccount (username, password, email) VALUES ('alice_smith', 'alice123', 'alice@example.com') ON CONFLICT (username) DO UPDATE SET password = 'newpassword456', email = 'alice_new@example.com';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserRole (role_name) VALUES ('User') ON CONFLICT (role_id) DO UPDATE SET role_name = 'General User';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserLog (user_id, login_time, logout_time) VALUES (2, '2021-10-02 09:00:00', '2021-10-02 18:00:00') ON CONFLICT (log_id) DO UPDATE SET login_time = '2021-10-02 09:00:00', logout_time = '2021-10-02 18:30:00';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditTrail (action_id, action_type, timestamp, user_id) VALUES (2, 'logout', '2021-10-02', 2) ON CONFLICT (trail_id) DO UPDATE SET action_type = 'logout', timestamp = '2021-10-02';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditLog (action_type, user_id, timestamp, details) VALUES ('delete', 3, '2021-10-03', 'Deleted record') ON CONFLICT (id) DO UPDATE SET action_type = 'delete', timestamp = '2021-10-03', details = 'Deleted record details';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserAccount (username, password, email) VALUES ('bob_jones', 'bob123', 'bob@example.com') ON CONFLICT (username) DO UPDATE SET password = 'newpassword789', email = 'bob_new@example.com';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserRole (role_name) VALUES ('Guest') ON CONFLICT (role_id) DO UPDATE SET role_name = 'Temporary User';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserLog (user_id, login_time, logout_time) VALUES (3, '2021-10-03 10:00:00', '2021-10-03 19:00:00') ON CONFLICT (log_id) DO UPDATE SET login_time = '2021-10-03 10:00:00', logout_time = '2021-10-03 19:30:00';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditTrail (action_id, action_type, timestamp, user_id) VALUES (3, 'create', '2021-10-03', 3) ON CONFLICT (trail_id) DO UPDATE SET action_type = 'create', timestamp = '2021-10-03';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditLog (action_type, user_id, timestamp, details) VALUES ('update', 1, '2021-10-04', 'Updated record') ON CONFLICT (id) DO UPDATE SET action_type = 'update', timestamp = '2021-10-04', details = 'Updated record details';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserAccount (username, password, email) VALUES ('sam_brown', 'sam123', 'sam@example.com') ON CONFLICT (username) DO UPDATE SET password = 'newpasswordabc', email = 'sam_new@example.com';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserRole (role_name) VALUES ('Editor') ON CONFLICT (role_id) DO UPDATE SET role_name = 'Content Editor';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserLog (user_id, login_time, logout_time) VALUES (1, '2021-10-04 08:30:00', '2021-10-04 17:30:00') ON CONFLICT (log_id) DO UPDATE SET login_time = '2021-10-04 08:30:00', logout_time = '2021-10-04 18:00:00';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditTrail (action_id, action_type, timestamp, user_id) VALUES (4, 'update', '2021-10-04', 1) ON CONFLICT (trail_id) DO UPDATE SET action_type = 'update', timestamp = '2021-10-04';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditLog (id, action_type, user_id, timestamp, details) VALUES (1, 'Login', 1001, '2022-01-01 10:00:00', 'User logged in') ON CONFLICT (id) DO UPDATE SET action_type = 'Login', timestamp = '2022-01-01 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserAccount (user_id, username, password, email) VALUES (1001, 'john_doe', 'password123', 'john.doe@example.com') ON CONFLICT (user_id) DO UPDATE SET password = 'newpassword123';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserRole (role_id, role_name) VALUES (1, 'Admin') ON CONFLICT (role_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserLog (log_id, user_id, login_time, logout_time) VALUES (1, 1001, '2022-01-01 09:00:00', '2022-01-01 17:00:00') ON CONFLICT (log_id) DO UPDATE SET logout_time = '2022-01-01 17:30:00';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditTrail (trail_id, action_id, action_type, timestamp, user_id) VALUES (1, 1, 'Update', '2022-01-01 12:00:00', 1001) ON CONFLICT (trail_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditLog (id, action_type, user_id, timestamp, details) VALUES (2, 'Logout', 1002, '2022-01-01 15:00:00', 'User logged out') ON CONFLICT (id) DO UPDATE SET action_type = 'Logout', timestamp = '2022-01-01 15:00:00';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserAccount (user_id, username, password, email) VALUES (1002, 'jane_smith', 'pass456', 'jane.smith@example.com') ON CONFLICT (user_id) DO UPDATE SET email = 'jane_doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserRole (role_id, role_name) VALUES (2, 'User') ON CONFLICT (role_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserLog (log_id, user_id, login_time, logout_time) VALUES (2, 1002, '2022-01-01 10:00:00', '2022-01-01 16:00:00') ON CONFLICT (log_id) DO UPDATE SET logout_time = '2022-01-01 16:30:00';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditTrail (trail_id, action_id, action_type, timestamp, user_id) VALUES (2, 2, 'Insert', '2022-01-01 14:00:00', 1002) ON CONFLICT (trail_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditLog (id, action_type, user_id, timestamp, details) VALUES (3, 'Update', 1001, '2022-01-02 09:00:00', 'User details updated') ON CONFLICT (id) DO UPDATE SET action_type = 'Update', timestamp = '2022-01-02 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserAccount (user_id, username, password, email) VALUES (1001, 'john_doe', 'newpassword123', 'john.doe@example.com') ON CONFLICT (user_id) DO UPDATE SET password = 'updatedpassword123';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserRole (role_id, role_name) VALUES (3, 'Guest') ON CONFLICT (role_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserLog (log_id, user_id, login_time, logout_time) VALUES (3, 1001, '2022-01-02 08:00:00', '2022-01-02 18:00:00') ON CONFLICT (log_id) DO UPDATE SET logout_time = '2022-01-02 18:30:00';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditTrail (trail_id, action_id, action_type, timestamp, user_id) VALUES (3, 3, 'Delete', '2022-01-02 10:00:00', 1001) ON CONFLICT (trail_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditLog (id, action_type, user_id, timestamp, details) VALUES (4, 'Insert', 1003, '2022-01-03 11:00:00', 'User created') ON CONFLICT (id) DO UPDATE SET action_type = 'Insert', timestamp = '2022-01-03 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserAccount (user_id, username, password, email) VALUES (1003, 'alice_smith', 'pass789', 'alice.smith@example.com') ON CONFLICT (user_id) DO UPDATE SET email = 'alice_doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserRole (role_id, role_name) VALUES (4, 'Manager') ON CONFLICT (role_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO UserLog (log_id, user_id, login_time, logout_time) VALUES (4, 1003, '2022-01-03 09:00:00', '2022-01-03 17:00:00') ON CONFLICT (log_id) DO UPDATE SET logout_time = '2022-01-03 17:30:00';",
  "### TABLEDATA\n\nCREATE TABLE AuditLog (\n    id SERIAL PRIMARY KEY,\n    action_type VARCHAR(50),\n    user_id INT,\n    timestamp TIMESTAMP,\n    details TEXT\n);\n\n\nCREATE TABLE UserAccount (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE UserRole (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50)\n);\n\n\nCREATE TABLE UserLog (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n\nCREATE TABLE AuditTrail (\n    trail_id SERIAL PRIMARY KEY,\n    action_id INT,\n    action_type VARCHAR(50),\n    timestamp TIMESTAMP,\n    user_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO AuditTrail (trail_id, action_id, action_type, timestamp, user_id) VALUES (4, 4, 'Update', '2022-01-03 13:00:00', 1003) ON CONFLICT (trail_id) DO NOTHING;"
]