[
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, requirement_name FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT description FROM regulatory_requirements WHERE compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_name, compliance_status FROM regulatory_requirements WHERE requirement_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE requirement_name LIKE 'Data%';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT MAX(requirement_id) FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT AVG(requirement_id) FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, description FROM regulatory_requirements WHERE compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, requirement_name, compliance_status FROM regulatory_requirements WHERE compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements ORDER BY requirement_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements ORDER BY requirement_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, description FROM regulatory_requirements WHERE requirement_id > 5 AND compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_requirements FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE compliance_status IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, LENGTH(description) AS description_length FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT DISTINCT requirement_name FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE requirement_name = 'Data Privacy';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE requirement_id IN (1, 3, 5, 7);",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT AVG(requirement_id) AS avg_requirement_id FROM regulatory_requirements WHERE compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE description LIKE '%security%';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, requirement_name FROM regulatory_requirements WHERE description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_compliance FROM regulatory_requirements WHERE compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements ORDER BY requirement_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT DISTINCT requirement_name FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE compliance_status = FALSE AND description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT requirement_id) AS total_requirements FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, requirement_name, description FROM regulatory_requirements WHERE compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, requirement_name, description FROM regulatory_requirements WHERE compliance_status = TRUE AND description LIKE '%compliant%';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE compliance_status = FALSE ORDER BY requirement_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, requirement_name, description FROM regulatory_requirements WHERE compliance_status = TRUE ORDER BY requirement_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_requirements FROM regulatory_requirements WHERE compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_name, COUNT(*) AS total_compliance FROM regulatory_requirements GROUP BY requirement_name;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE compliance_status = TRUE OR compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, UPPER(requirement_name) AS uppercase_name FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, requirement_name, LENGTH(description) AS description_length FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, requirement_name, SUBSTR(description, 1, 50) AS description_substr FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT AVG(requirement_id) AS avg_id, MAX(requirement_id) AS max_id, MIN(requirement_id) AS min_id FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, requirement_name, compliance_status, CASE WHEN compliance_status = TRUE THEN 'Compliant' ELSE 'Non-Compliant' END AS compliance_status_text FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nSELECT requirement_id, requirement_name, description, compliance_status, CASE WHEN compliance_status = TRUE THEN 'Yes' ELSE 'No' END AS is_compliant FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_name, description FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_records;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT date, description FROM compliance_records;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, c.date FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, c.date FROM regulatory_requirements r LEFT JOIN compliance_records c ON r.requirement_id = c.requirement_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, c.date FROM regulatory_requirements r RIGHT JOIN compliance_records c ON r.requirement_id = c.requirement_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, c.date FROM regulatory_requirements r FULL JOIN compliance_records c ON r.requirement_id = c.requirement_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name AS requirement, c.description AS record_description FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, COUNT(c.record_id) AS record_count FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id GROUP BY r.requirement_name;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, MAX(c.date) AS latest_record_date FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id GROUP BY r.requirement_name;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, MIN(c.date) AS earliest_record_date FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id GROUP BY r.requirement_name;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, AVG(c.record_id) AS avg_record_id FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id GROUP BY r.requirement_name;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, SUM(c.record_id) AS total_records FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id GROUP BY r.requirement_name;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, c.date FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id WHERE c.date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, c.date FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id WHERE c.date <= '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, c.date FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id ORDER BY c.date DESC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, c.date FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id ORDER BY c.date ASC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, c.date FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, c.date FROM regulatory_requirements r INNER JOIN compliance_records c ON r.requirement_id = c.requirement_id LIMIT 5 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_id, requirement_name FROM regulatory_requirements WHERE requirement_name LIKE '%compliance%';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT compliance_records.record_id, compliance_records.date, regulatory_requirements.requirement_name FROM compliance_records JOIN regulatory_requirements ON compliance_records.requirement_id = regulatory_requirements.requirement_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_requirements FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT AVG(date) AS avg_date FROM compliance_records;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_id, COUNT(*) AS total_records FROM compliance_records GROUP BY requirement_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_name, COUNT(*) AS total_records FROM regulatory_requirements LEFT JOIN compliance_records ON regulatory_requirements.requirement_id = compliance_records.requirement_id GROUP BY requirement_name;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_name, MAX(date) AS latest_record_date FROM regulatory_requirements LEFT JOIN compliance_records ON regulatory_requirements.requirement_id = compliance_records.requirement_id GROUP BY requirement_name;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE requirement_id IN (SELECT requirement_id FROM compliance_records);",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_id, date FROM compliance_records WHERE DATE(date) = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_name, COUNT(*) AS total_records FROM regulatory_requirements LEFT JOIN compliance_records ON regulatory_requirements.requirement_id = compliance_records.requirement_id WHERE compliance_records.date < '2022-01-01' GROUP BY requirement_name;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_id, MAX(date) AS latest_record_date FROM compliance_records WHERE description LIKE '%important%' GROUP BY requirement_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_name, COUNT(*) AS total_records FROM regulatory_requirements LEFT JOIN compliance_records ON regulatory_requirements.requirement_id = compliance_records.requirement_id WHERE compliance_records.description IS NOT NULL GROUP BY requirement_name;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT description, COUNT(*) AS records_count FROM compliance_records GROUP BY description HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_id, AVG(DATEDIFF(CURRENT_DATE, date)) AS avg_days_since_record FROM compliance_records GROUP BY requirement_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_id, MIN(date) AS earliest_record_date FROM compliance_records WHERE description LIKE '%urgent%' GROUP BY requirement_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_name, description FROM regulatory_requirements UNION SELECT NULL, description FROM compliance_records;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_name, COUNT(*) AS total_records FROM regulatory_requirements LEFT JOIN compliance_records ON regulatory_requirements.requirement_id = compliance_records.requirement_id GROUP BY requirement_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nSELECT requirement_id, date FROM compliance_records WHERE requirement_id IN (SELECT requirement_id FROM regulatory_requirements WHERE description LIKE '%important%');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT requirement FROM regulatory_requirements WHERE status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT standard_name, description FROM compliance_standards;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_records;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT requirement_id, date_recorded FROM compliance_records WHERE standard_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT standard_name FROM compliance_standards WHERE standard_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT requirement, status FROM regulatory_requirements WHERE status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_records WHERE requirement_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT standard_id, standard_name FROM compliance_standards WHERE description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_records WHERE date_recorded BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT status FROM regulatory_requirements WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT standard_id, description FROM compliance_standards WHERE standard_name = 'ISO 9001';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE status <> 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT MAX(date_recorded) FROM compliance_records;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT requirement_id, standard_id FROM compliance_records WHERE record_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT requirement_id) FROM compliance_records;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_standards WHERE standard_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT AVG(record_id) FROM compliance_records;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT requirement, status FROM regulatory_requirements WHERE status='Pending';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT standard_name, description FROM compliance_standards WHERE standard_id=1;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_records WHERE date_recorded >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement, s.standard_name FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.id, r.requirement, cr.record_id, s.standard_name FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement, cr.requirement_id, s.standard_name, cr.standard_id FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*), AVG(record_id) FROM compliance_records;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT s.standard_name, COUNT(*) AS total_records FROM compliance_standards s JOIN compliance_records cr ON s.standard_id = cr.standard_id GROUP BY s.standard_name;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement, COUNT(*) AS total_records FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id GROUP BY r.requirement HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement, s.standard_name, COUNT(*) AS total_records FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id GROUP BY r.requirement, s.standard_name HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement, s.standard_name, cr.date_recorded, cr.record_id FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id ORDER BY cr.date_recorded DESC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement, s.standard_name, cr.date_recorded, cr.record_id FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id ORDER BY s.standard_name, cr.date_recorded;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT DATE_FORMAT(cr.date_recorded, '%Y-%m') AS month_year, COUNT(*) AS total_records FROM compliance_records cr GROUP BY month_year;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement, s.standard_name, SUM(cr.record_id) AS total_record_id FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id GROUP BY r.requirement, s.standard_name;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement, s.standard_name, YEAR(cr.date_recorded) AS year_recorded FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement, s.standard_name, DAYOFWEEK(cr.date_recorded) AS week_day_recorded FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT CONCAT(r.id, '-', s.standard_id) AS composite_key, r.requirement, s.standard_name FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement AS regulatory_requirement, s.standard_name AS compliance_standard FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.id, r.requirement, s.standard_id, s.standard_name FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id ORDER BY r.id ASC, s.standard_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nSELECT r.requirement, s.standard_name, DATEDIFF(NOW(), cr.date_recorded) AS days_since_recorded FROM regulatory_requirements r JOIN compliance_records cr ON r.id = cr.requirement_id JOIN compliance_standards s ON cr.standard_id = s.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT requirement_name, description FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_officers;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT officer_name, email FROM compliance_officers;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_logs;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT action, timestamp FROM compliance_logs;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_documents;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT document_name, document_type FROM compliance_documents;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT id, requirement_name, description FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT id, officer_name, email FROM compliance_officers;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT log_id, action, timestamp FROM compliance_logs;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT doc_id, document_name, document_type FROM compliance_documents;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT id, requirement_name, compliance_status FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT id, officer_name, phone_number FROM compliance_officers;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT log_id, action, officer_id FROM compliance_logs;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT doc_id, document_name, document_url FROM compliance_documents;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT r.id, r.requirement_name, l.action, d.document_name FROM regulatory_requirements r, compliance_logs l, compliance_documents d;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT o.officer_name, l.action, d.document_name FROM compliance_officers o, compliance_logs l, compliance_documents d;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT r.requirement_name, l.action, d.document_name FROM regulatory_requirements r, compliance_logs l, compliance_documents d;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT r.id, r.requirement_name, c.officer_name, l.action FROM regulatory_requirements r, compliance_officers c, compliance_logs l;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT requirement_name, description FROM regulatory_requirements WHERE compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_officers WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT officer_name, phone_number FROM compliance_officers WHERE id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT action, timestamp FROM compliance_logs WHERE officer_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_documents WHERE document_type = 'Policy';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT document_name, document_url FROM compliance_documents WHERE doc_id = '123e4567-e89b-12d3-a456-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT regulatory_requirements.requirement_name, compliance_officers.officer_name FROM regulatory_requirements JOIN compliance_officers ON regulatory_requirements.id = compliance_officers.id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT compliance_logs.action, compliance_officers.officer_name FROM compliance_logs JOIN compliance_officers ON compliance_logs.officer_id = compliance_officers.id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE requirement_name LIKE '%security%';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_officers WHERE phone_number IN ('123', '456', '789');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT officer_name, email FROM compliance_officers ORDER BY officer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_documents WHERE document_type = 'Report' AND document_url NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM compliance_officers;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(timestamp) FROM compliance_logs;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT document_type FROM compliance_documents;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_logs WHERE timestamp >= '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT officer_name, phone_number FROM compliance_officers WHERE email LIKE '%@example.com' LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(timestamp) AS latest_timestamp FROM compliance_logs;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM compliance_officers WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT requirement_name, description FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT id, compliance_status FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_documents;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT document_name, document_type FROM compliance_documents;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_logs;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT log_date, log_entry FROM compliance_logs;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_personnel;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT personnel_name, department FROM compliance_personnel;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_audit;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT auditor_name, audit_date FROM compliance_audit;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements WHERE requirement_name LIKE '%security%';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_documents WHERE document_type = 'Policy';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_logs WHERE log_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_personnel WHERE department = 'Legal';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_audit WHERE audit_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(log_date) FROM compliance_logs;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT personnel_role, COUNT(*) FROM compliance_personnel GROUP BY personnel_role HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT requirement_name, description FROM regulatory_requirements;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT document_name, document_type FROM compliance_documents;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT personnel_name, personnel_role, department FROM compliance_personnel;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT audit_id, auditor_name, audit_date FROM compliance_audit;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT requirement_name, compliance_status FROM regulatory_requirements WHERE compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT document_name, document_link FROM compliance_documents WHERE document_type = 'Policy';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT personnel_name, email FROM compliance_personnel WHERE department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT log_date, log_entry FROM compliance_logs WHERE requirement_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT requirement_name, description FROM regulatory_requirements ORDER BY requirement_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT document_name, document_link FROM compliance_documents ORDER BY document_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT personnel_name, personnel_role FROM compliance_personnel ORDER BY personnel_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT audit_date, findings FROM compliance_audit ORDER BY audit_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements INNER JOIN compliance_documents ON regulatory_requirements.id = compliance_documents.requirement_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements INNER JOIN compliance_logs ON regulatory_requirements.id = compliance_logs.requirement_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_personnel LEFT JOIN compliance_audit ON compliance_personnel.personnel_id = compliance_audit.audit_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_audit RIGHT JOIN compliance_documents ON compliance_audit.audit_id = compliance_documents.document_id;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulatory_requirements LEFT JOIN compliance_logs ON regulatory_requirements.id = compliance_logs.requirement_id WHERE compliance_logs.log_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_audit RIGHT JOIN compliance_personnel ON compliance_audit.auditor_name = compliance_personnel.personnel_name;"
]