[
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (1, 'Requirement 1', 'Description for Requirement 1', true) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 1', description = 'Updated Description for Requirement 1', compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (2, 'Requirement 2', 'Description for Requirement 2', false) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 2', description = 'Updated Description for Requirement 2', compliance_status = false;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (3, 'Requirement 3', 'Description for Requirement 3', true) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 3', description = 'Updated Description for Requirement 3', compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (4, 'Requirement 4', 'Description for Requirement 4', false) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 4', description = 'Updated Description for Requirement 4', compliance_status = false;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (5, 'Requirement 5', 'Description for Requirement 5', true) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 5', description = 'Updated Description for Requirement 5', compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (6, 'Requirement 6', 'Description for Requirement 6', false) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 6', description = 'Updated Description for Requirement 6', compliance_status = false;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (7, 'Requirement 7', 'Description for Requirement 7', true) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 7', description = 'Updated Description for Requirement 7', compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (8, 'Requirement 8', 'Description for Requirement 8', false) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 8', description = 'Updated Description for Requirement 8', compliance_status = false;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (9, 'Requirement 9', 'Description for Requirement 9', true) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 9', description = 'Updated Description for Requirement 9', compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (10, 'Requirement 10', 'Description for Requirement 10', false) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 10', description = 'Updated Description for Requirement 10', compliance_status = false;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (11, 'Requirement 11', 'Description for Requirement 11', true) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 11', description = 'Updated Description for Requirement 11', compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (12, 'Requirement 12', 'Description for Requirement 12', false) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 12', description = 'Updated Description for Requirement 12', compliance_status = false;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (13, 'Requirement 13', 'Description for Requirement 13', true) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 13', description = 'Updated Description for Requirement 13', compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (14, 'Requirement 14', 'Description for Requirement 14', false) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 14', description = 'Updated Description for Requirement 14', compliance_status = false;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (15, 'Requirement 15', 'Description for Requirement 15', true) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 15', description = 'Updated Description for Requirement 15', compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (16, 'Requirement 16', 'Description for Requirement 16', false) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 16', description = 'Updated Description for Requirement 16', compliance_status = false;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (17, 'Requirement 17', 'Description for Requirement 17', true) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 17', description = 'Updated Description for Requirement 17', compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (18, 'Requirement 18', 'Description for Requirement 18', false) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 18', description = 'Updated Description for Requirement 18', compliance_status = false;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (19, 'Requirement 19', 'Description for Requirement 19', true) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 19', description = 'Updated Description for Requirement 19', compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (20, 'Requirement 20', 'Description for Requirement 20', false) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 20', description = 'Updated Description for Requirement 20', compliance_status = false;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (1, 'Requirement 1', 'Description 1', TRUE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 1', description = 'Description 1', compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (2, 'Requirement 2', 'Description 2', FALSE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 2', description = 'Description 2', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (3, 'Requirement 3', 'Description 3', TRUE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 3', description = 'Description 3', compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (4, 'Requirement 4', 'Description 4', FALSE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 4', description = 'Description 4', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (5, 'Requirement 5', 'Description 5', TRUE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 5', description = 'Description 5', compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (6, 'Requirement 6', 'Description 6', FALSE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 6', description = 'Description 6', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (7, 'Requirement 7', 'Description 7', TRUE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 7', description = 'Description 7', compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (8, 'Requirement 8', 'Description 8', FALSE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 8', description = 'Description 8', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (9, 'Requirement 9', 'Description 9', TRUE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 9', description = 'Description 9', compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (10, 'Requirement 10', 'Description 10', FALSE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 10', description = 'Description 10', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (11, 'Requirement 11', 'Description 11', TRUE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 11', description = 'Description 11', compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (12, 'Requirement 12', 'Description 12', FALSE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 12', description = 'Description 12', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (13, 'Requirement 13', 'Description 13', TRUE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 13', description = 'Description 13', compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (14, 'Requirement 14', 'Description 14', FALSE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 14', description = 'Description 14', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (15, 'Requirement 15', 'Description 15', TRUE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 15', description = 'Description 15', compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (16, 'Requirement 16', 'Description 16', FALSE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 16', description = 'Description 16', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (17, 'Requirement 17', 'Description 17', TRUE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 17', description = 'Description 17', compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (18, 'Requirement 18', 'Description 18', FALSE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 18', description = 'Description 18', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (19, 'Requirement 19', 'Description 19', TRUE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 19', description = 'Description 19', compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  requirement_id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description, compliance_status) VALUES (20, 'Requirement 20', 'Description 20', FALSE) ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Requirement 20', description = 'Description 20', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (1, 'Requirement 1', 'Description for Requirement 1') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 1', description = 'Description for Requirement 1';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (2, 'Requirement 2', 'Description for Requirement 2') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 2', description = 'Description for Requirement 2';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (3, 'Requirement 3', 'Description for Requirement 3') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 3', description = 'Description for Requirement 3';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (4, 'Requirement 4', 'Description for Requirement 4') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 4', description = 'Description for Requirement 4';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (5, 'Requirement 5', 'Description for Requirement 5') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 5', description = 'Description for Requirement 5';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (6, 'Requirement 6', 'Description for Requirement 6') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 6', description = 'Description for Requirement 6';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (7, 'Requirement 7', 'Description for Requirement 7') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 7', description = 'Description for Requirement 7';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (8, 'Requirement 8', 'Description for Requirement 8') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 8', description = 'Description for Requirement 8';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (9, 'Requirement 9', 'Description for Requirement 9') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 9', description = 'Description for Requirement 9';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (10, 'Requirement 10', 'Description for Requirement 10') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 10', description = 'Description for Requirement 10';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (11, 'Requirement 11', 'Description for Requirement 11') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 11', description = 'Description for Requirement 11';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (12, 'Requirement 12', 'Description for Requirement 12') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 12', description = 'Description for Requirement 12';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (13, 'Requirement 13', 'Description for Requirement 13') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 13', description = 'Description for Requirement 13';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (14, 'Requirement 14', 'Description for Requirement 14') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 14', description = 'Description for Requirement 14';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (15, 'Requirement 15', 'Description for Requirement 15') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 15', description = 'Description for Requirement 15';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (16, 'Requirement 16', 'Description for Requirement 16') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 16', description = 'Description for Requirement 16';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (17, 'Requirement 17', 'Description for Requirement 17') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 17', description = 'Description for Requirement 17';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (18, 'Requirement 18', 'Description for Requirement 18') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 18', description = 'Description for Requirement 18';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (19, 'Requirement 19', 'Description for Requirement 19') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 19', description = 'Description for Requirement 19';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (20, 'Requirement 20', 'Description for Requirement 20') ON DUPLICATE KEY UPDATE requirement_name = 'Requirement 20', description = 'Description for Requirement 20';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (1, 'Requirement 1', 'Description 1') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 1', description = 'Updated Description 1';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (2, 'Requirement 2', 'Description 2') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 2', description = 'Updated Description 2';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (3, 'Requirement 3', 'Description 3') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 3', description = 'Updated Description 3';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (4, 'Requirement 4', 'Description 4') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 4', description = 'Updated Description 4';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (5, 'Requirement 5', 'Description 5') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 5', description = 'Updated Description 5';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (6, 'Requirement 6', 'Description 6') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 6', description = 'Updated Description 6';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (7, 'Requirement 7', 'Description 7') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 7', description = 'Updated Description 7';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (8, 'Requirement 8', 'Description 8') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 8', description = 'Updated Description 8';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (9, 'Requirement 9', 'Description 9') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 9', description = 'Updated Description 9';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (10, 'Requirement 10', 'Description 10') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 10', description = 'Updated Description 10';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (11, 'Requirement 11', 'Description 11') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 11', description = 'Updated Description 11';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (12, 'Requirement 12', 'Description 12') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 12', description = 'Updated Description 12';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (13, 'Requirement 13', 'Description 13') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 13', description = 'Updated Description 13';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (14, 'Requirement 14', 'Description 14') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 14', description = 'Updated Description 14';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (15, 'Requirement 15', 'Description 15') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 15', description = 'Updated Description 15';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (16, 'Requirement 16', 'Description 16') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 16', description = 'Updated Description 16';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (17, 'Requirement 17', 'Description 17') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 17', description = 'Updated Description 17';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (18, 'Requirement 18', 'Description 18') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 18', description = 'Updated Description 18';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (19, 'Requirement 19', 'Description 19') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 19', description = 'Updated Description 19';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    requirement_id INT PRIMARY KEY,\n    requirement_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE compliance_records (\n    record_id INT PRIMARY KEY,\n    requirement_id INT,\n    date DATE,\n    description TEXT,\n    FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(requirement_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (requirement_id, requirement_name, description) VALUES (20, 'Requirement 20', 'Description 20') ON CONFLICT (requirement_id) DO UPDATE SET requirement_name = 'Updated Requirement 20', description = 'Updated Description 20';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (1, 'Data Encryption Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (2, 'User Access Control Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (3, 'Audit Trail Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (4, 'Data Retention Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (5, 'Compliance Training Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (6, 'Incident Response Plan Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (7, 'Penetration Testing Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (8, 'Vulnerability Scanning Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (9, 'Risk Assessment Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (10, 'Business Continuity Plan Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (11, 'Identity Verification Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (12, 'Data Access Control Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (13, 'Security Awareness Training Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement) VALUES (14, 'Privacy Policy Requirement') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = 'Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_standards (standard_id, standard_name, description) VALUES (1, 'PCI DSS', 'Payment Card Industry Data Security Standard') ON CONFLICT (standard_id) DO UPDATE SET standard_name = excluded.standard_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_standards (standard_id, standard_name, description) VALUES (2, 'HIPAA', 'Health Insurance Portability and Accountability Act') ON CONFLICT (standard_id) DO UPDATE SET standard_name = excluded.standard_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_standards (standard_id, standard_name, description) VALUES (3, 'GDPR', 'General Data Protection Regulation') ON CONFLICT (standard_id) DO UPDATE SET standard_name = excluded.standard_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_standards (standard_id, standard_name, description) VALUES (4, 'ISO 27001', 'Information Security Management System Standard') ON CONFLICT (standard_id) DO UPDATE SET standard_name = excluded.standard_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_standards (standard_id, standard_name, description) VALUES (5, 'SOX', 'Sarbanes-Oxley Act') ON CONFLICT (standard_id) DO UPDATE SET standard_name = excluded.standard_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement, status) VALUES (1, 'Requirement 1', 'Pending') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_standards (standard_id, standard_name, description) VALUES (1, 'Standard 1', 'Description 1') ON CONFLICT (standard_id) DO UPDATE SET standard_name = excluded.standard_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_records (record_id, requirement_id, standard_id, date_recorded) VALUES (1, 1, 1, '2022-01-01') ON CONFLICT (record_id) DO UPDATE SET requirement_id = excluded.requirement_id, standard_id = excluded.standard_id, date_recorded = excluded.date_recorded;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement, status) VALUES (2, 'Requirement 2', 'Pending') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_standards (standard_id, standard_name, description) VALUES (2, 'Standard 2', 'Description 2') ON CONFLICT (standard_id) DO UPDATE SET standard_name = excluded.standard_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_records (record_id, requirement_id, standard_id, date_recorded) VALUES (2, 2, 2, '2022-02-01') ON CONFLICT (record_id) DO UPDATE SET requirement_id = excluded.requirement_id, standard_id = excluded.standard_id, date_recorded = excluded.date_recorded;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement, status) VALUES (3, 'Requirement 3', 'Pending') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_standards (standard_id, standard_name, description) VALUES (3, 'Standard 3', 'Description 3') ON CONFLICT (standard_id) DO UPDATE SET standard_name = excluded.standard_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_records (record_id, requirement_id, standard_id, date_recorded) VALUES (3, 3, 3, '2022-03-01') ON CONFLICT (record_id) DO UPDATE SET requirement_id = excluded.requirement_id, standard_id = excluded.standard_id, date_recorded = excluded.date_recorded;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement, status) VALUES (4, 'Requirement 4', 'Pending') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_standards (standard_id, standard_name, description) VALUES (4, 'Standard 4', 'Description 4') ON CONFLICT (standard_id) DO UPDATE SET standard_name = excluded.standard_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_records (record_id, requirement_id, standard_id, date_recorded) VALUES (4, 4, 4, '2022-04-01') ON CONFLICT (record_id) DO UPDATE SET requirement_id = excluded.requirement_id, standard_id = excluded.standard_id, date_recorded = excluded.date_recorded;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement, status) VALUES (5, 'Requirement 5', 'Pending') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_standards (standard_id, standard_name, description) VALUES (5, 'Standard 5', 'Description 5') ON CONFLICT (standard_id) DO UPDATE SET standard_name = excluded.standard_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_records (record_id, requirement_id, standard_id, date_recorded) VALUES (5, 5, 5, '2022-05-01') ON CONFLICT (record_id) DO UPDATE SET requirement_id = excluded.requirement_id, standard_id = excluded.standard_id, date_recorded = excluded.date_recorded;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement, status) VALUES (6, 'Requirement 6', 'Pending') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_standards (standard_id, standard_name, description) VALUES (6, 'Standard 6', 'Description 6') ON CONFLICT (standard_id) DO UPDATE SET standard_name = excluded.standard_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_records (record_id, requirement_id, standard_id, date_recorded) VALUES (6, 6, 6, '2022-06-01') ON CONFLICT (record_id) DO UPDATE SET requirement_id = excluded.requirement_id, standard_id = excluded.standard_id, date_recorded = excluded.date_recorded;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement, status) VALUES (7, 'Requirement 7', 'Pending') ON CONFLICT (id) DO UPDATE SET requirement = excluded.requirement, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_standards (standard_id, standard_name, description) VALUES (7, 'Standard 7', 'Description 7') ON CONFLICT (standard_id) DO UPDATE SET standard_name = excluded.standard_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement TEXT NOT NULL,\n  status VARCHAR(20) DEFAULT 'Pending'\n);\n\nCREATE TABLE compliance_standards (\n  standard_id INT PRIMARY KEY,\n  standard_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE compliance_records (\n  record_id INT PRIMARY KEY,\n  requirement_id INT,\n  standard_id INT,\n  date_recorded DATE,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id),\n  FOREIGN KEY (standard_id) REFERENCES compliance_standards(standard_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_records (record_id, requirement_id, standard_id, date_recorded) VALUES (7, 7, 7, '2022-07-01') ON CONFLICT (record_id) DO UPDATE SET requirement_id = excluded.requirement_id, standard_id = excluded.standard_id, date_recorded = excluded.date_recorded;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement_name, description, compliance_status) VALUES ('11111111-1111-1111-1111-111111111111', 'Requirement 1', 'Description of Requirement 1', TRUE) ON CONFLICT (id) DO UPDATE SET requirement_name = 'Requirement 1 Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_officers (id, officer_name, email, phone_number) VALUES ('22222222-2222-2222-2222-222222222222', 'John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (id) DO UPDATE SET officer_name = 'John Doe Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_logs (log_id, action, timestamp, officer_id) VALUES ('33333333-3333-3333-3333-333333333333', 'Log Action 1', '2022-01-01 12:00:00', '22222222-2222-2222-2222-222222222222') ON CONFLICT (log_id) DO UPDATE SET action = 'Log Action 1 Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_documents (doc_id, document_name, document_type, document_url) VALUES ('44444444-4444-4444-4444-444444444444', 'Document 1', 'PDF', 'https://example.com/document1.pdf') ON CONFLICT (doc_id) DO UPDATE SET document_name = 'Document 1 Updated';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement_name, description, compliance_status) VALUES ('1', 'Requirement 1', 'Description 1', true) ON CONFLICT (id) DO UPDATE SET requirement_name = 'Updated Requirement 1';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_officers (id, officer_name, email, phone_number) VALUES ('1', 'John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (id) DO UPDATE SET email = 'john.doe@updated.com';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_logs (log_id, action, timestamp, officer_id) VALUES ('1', 'Action 1', '2022-01-01 12:00:00', '1') ON CONFLICT (log_id) DO UPDATE SET action = 'Updated Action 1';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n    id UUID PRIMARY KEY,\n    requirement_name TEXT,\n    description TEXT,\n    compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_officers (\n    id UUID PRIMARY KEY,\n    officer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE compliance_logs (\n    log_id UUID PRIMARY KEY,\n    action TEXT,\n    timestamp TIMESTAMP,\n    officer_id UUID,\n    FOREIGN KEY (officer_id) REFERENCES compliance_officers(id)\n);\n\nCREATE TABLE compliance_documents (\n    doc_id UUID PRIMARY KEY,\n    document_name TEXT,\n    document_type TEXT,\n    document_url TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_documents (doc_id, document_name, document_type, document_url) VALUES ('1', 'Document 1', 'Type 1', 'http://example.com/doc1') ON CONFLICT (doc_id) DO UPDATE SET document_type = 'Updated Type 1';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO regulatory_requirements (id, requirement_name, description, compliance_status) VALUES (1, 'Requirement 1', 'Description for Requirement 1', true);",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO regulatory_requirements (id, requirement_name, description, compliance_status) VALUES (2, 'Requirement 2', 'Description for Requirement 2', false);",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO regulatory_requirements (id, requirement_name, description, compliance_status) VALUES (3, 'Requirement 3', 'Description for Requirement 3', true);",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO regulatory_requirements (id, requirement_name, description, compliance_status) VALUES (4, 'Requirement 4', 'Description for Requirement 4', false);",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO regulatory_requirements (id, requirement_name, description, compliance_status) VALUES (5, 'Requirement 5', 'Description for Requirement 5', true);",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_documents (document_id, requirement_id, document_name, document_type, document_link) VALUES (1, 1, 'Document 1', 'Type 1', 'Link to Document 1');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_documents (document_id, requirement_id, document_name, document_type, document_link) VALUES (2, 2, 'Document 2', 'Type 2', 'Link to Document 2');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_documents (document_id, requirement_id, document_name, document_type, document_link) VALUES (3, 3, 'Document 3', 'Type 3', 'Link to Document 3');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_documents (document_id, requirement_id, document_name, document_type, document_link) VALUES (4, 4, 'Document 4', 'Type 4', 'Link to Document 4');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_documents (document_id, requirement_id, document_name, document_type, document_link) VALUES (5, 5, 'Document 5', 'Type 5', 'Link to Document 5');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_logs (log_id, requirement_id, log_date, log_entry) VALUES (1, 1, '2022-01-01', 'Log entry for Requirement 1');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_logs (log_id, requirement_id, log_date, log_entry) VALUES (2, 2, '2022-02-01', 'Log entry for Requirement 2');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_logs (log_id, requirement_id, log_date, log_entry) VALUES (3, 3, '2022-03-01', 'Log entry for Requirement 3');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_logs (log_id, requirement_id, log_date, log_entry) VALUES (4, 4, '2022-04-01', 'Log entry for Requirement 4');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_logs (log_id, requirement_id, log_date, log_entry) VALUES (5, 5, '2022-05-01', 'Log entry for Requirement 5');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_personnel (personnel_id, personnel_name, personnel_role, department, email) VALUES (1, 'Personnel 1', 'Role 1', 'Department 1', 'email1@example.com');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_personnel (personnel_id, personnel_name, personnel_role, department, email) VALUES (2, 'Personnel 2', 'Role 2', 'Department 2', 'email2@example.com');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_personnel (personnel_id, personnel_name, personnel_role, department, email) VALUES (3, 'Personnel 3', 'Role 3', 'Department 3', 'email3@example.com');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_personnel (personnel_id, personnel_name, personnel_role, department, email) VALUES (4, 'Personnel 4', 'Role 4', 'Department 4', 'email4@example.com');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_personnel (personnel_id, personnel_name, personnel_role, department, email) VALUES (5, 'Personnel 5', 'Role 5', 'Department 5', 'email5@example.com');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_audit (audit_id, auditor_name, audit_date, findings, recommendation) VALUES (1, 'Auditor 1', '2022-01-01', 'Findings for Audit 1', 'Recommendation for Audit 1');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_audit (audit_id, auditor_name, audit_date, findings, recommendation) VALUES (2, 'Auditor 2', '2022-02-01', 'Findings for Audit 2', 'Recommendation for Audit 2');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_audit (audit_id, auditor_name, audit_date, findings, recommendation) VALUES (3, 'Auditor 3', '2022-03-01', 'Findings for Audit 3', 'Recommendation for Audit 3');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_audit (audit_id, auditor_name, audit_date, findings, recommendation) VALUES (4, 'Auditor 4', '2022-04-01', 'Findings for Audit 4', 'Recommendation for Audit 4');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_audit (audit_id, auditor_name, audit_date, findings, recommendation) VALUES (5, 'Auditor 5', '2022-05-01', 'Findings for Audit 5', 'Recommendation for Audit 5');",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement_name, description, compliance_status) VALUES (1, 'Requirement 1', 'Description for Requirement 1', TRUE) ON CONFLICT (id) DO UPDATE SET requirement_name = 'Updated Requirement 1', description = 'Updated Description for Requirement 1', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_documents (document_id, requirement_id, document_name, document_type, document_link) VALUES (1, 1, 'Document 1', 'Type A', 'http://document1.com') ON CONFLICT (document_id) DO UPDATE SET requirement_id = 1, document_name = 'Updated Document 1', document_type = 'Type B', document_link = 'http://updateddocument1.com';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_logs (log_id, requirement_id, log_date, log_entry) VALUES (1, 1, '2022-01-01', 'Log entry for Requirement 1') ON CONFLICT (log_id) DO UPDATE SET requirement_id = 1, log_date = '2022-01-02', log_entry = 'Updated log entry for Requirement 1';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_personnel (personnel_id, personnel_name, personnel_role, department, email) VALUES (1, 'John Doe', 'Manager', 'Compliance', 'john.doe@example.com') ON CONFLICT (personnel_id) DO UPDATE SET personnel_name = 'Jane Doe', personnel_role = 'Supervisor', department = 'Audit', email = 'jane.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_audit (audit_id, auditor_name, audit_date, findings, recommendation) VALUES (1, 'Auditor 1', '2022-02-01', 'Findings for Audit 1', 'Recommendation for Audit 1') ON CONFLICT (audit_id) DO UPDATE SET auditor_name = 'Updated Auditor 1', audit_date = '2022-02-02', findings = 'Updated findings for Audit 1', recommendation = 'Updated recommendation for Audit 1';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement_name, description, compliance_status) VALUES (2, 'Requirement 2', 'Description for Requirement 2', TRUE) ON CONFLICT (id) DO UPDATE SET requirement_name = 'Updated Requirement 2', description = 'Updated Description for Requirement 2', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_documents (document_id, requirement_id, document_name, document_type, document_link) VALUES (2, 2, 'Document 2', 'Type B', 'http://document2.com') ON CONFLICT (document_id) DO UPDATE SET requirement_id = 2, document_name = 'Updated Document 2', document_type = 'Type C', document_link = 'http://updateddocument2.com';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_logs (log_id, requirement_id, log_date, log_entry) VALUES (2, 2, '2022-01-02', 'Log entry for Requirement 2') ON CONFLICT (log_id) DO UPDATE SET requirement_id = 2, log_date = '2022-01-03', log_entry = 'Updated log entry for Requirement 2';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_personnel (personnel_id, personnel_name, personnel_role, department, email) VALUES (2, 'Alice Smith', 'Analyst', 'Compliance', 'alice.smith@example.com') ON CONFLICT (personnel_id) DO UPDATE SET personnel_name = 'Bob Smith', personnel_role = 'Auditor', department = 'Regulatory', email = 'bob.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_audit (audit_id, auditor_name, audit_date, findings, recommendation) VALUES (2, 'Auditor 2', '2022-02-02', 'Findings for Audit 2', 'Recommendation for Audit 2') ON CONFLICT (audit_id) DO UPDATE SET auditor_name = 'Updated Auditor 2', audit_date = '2022-02-03', findings = 'Updated findings for Audit 2', recommendation = 'Updated recommendation for Audit 2';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO regulatory_requirements (id, requirement_name, description, compliance_status) VALUES (3, 'Requirement 3', 'Description for Requirement 3', TRUE) ON CONFLICT (id) DO UPDATE SET requirement_name = 'Updated Requirement 3', description = 'Updated Description for Requirement 3', compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_documents (document_id, requirement_id, document_name, document_type, document_link) VALUES (3, 3, 'Document 3', 'Type C', 'http://document3.com') ON CONFLICT (document_id) DO UPDATE SET requirement_id = 3, document_name = 'Updated Document 3', document_type = 'Type D', document_link = 'http://updateddocument3.com';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_logs (log_id, requirement_id, log_date, log_entry) VALUES (3, 3, '2022-01-03', 'Log entry for Requirement 3') ON CONFLICT (log_id) DO UPDATE SET requirement_id = 3, log_date = '2022-01-04', log_entry = 'Updated log entry for Requirement 3';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_personnel (personnel_id, personnel_name, personnel_role, department, email) VALUES (3, 'Mike Johnson', 'Director', 'Legal', 'mike.johnson@example.com') ON CONFLICT (personnel_id) DO UPDATE SET personnel_name = 'Sarah Johnson', personnel_role = 'Manager', department = 'Regulatory', email = 'sarah.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE regulatory_requirements (\n  id INT PRIMARY KEY,\n  requirement_name VARCHAR(255) NOT NULL,\n  description TEXT,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE compliance_documents (\n  document_id INT PRIMARY KEY,\n  requirement_id INT,\n  document_name VARCHAR(255) NOT NULL,\n  document_type VARCHAR(50),\n  document_link TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_logs (\n  log_id INT PRIMARY KEY,\n  requirement_id INT,\n  log_date DATE,\n  log_entry TEXT,\n  FOREIGN KEY (requirement_id) REFERENCES regulatory_requirements(id)\n);\n\nCREATE TABLE compliance_personnel (\n  personnel_id INT PRIMARY KEY,\n  personnel_name VARCHAR(100) NOT NULL,\n  personnel_role VARCHAR(50),\n  department VARCHAR(50),\n  email VARCHAR(255)\n);\n\nCREATE TABLE compliance_audit (\n  audit_id INT PRIMARY KEY,\n  auditor_name VARCHAR(100) NOT NULL,\n  audit_date DATE,\n  findings TEXT,\n  recommendation TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_audit (audit_id, auditor_name, audit_date, findings, recommendation) VALUES (3, 'Auditor 3', '2022-02-03', 'Findings for Audit 3', 'Recommendation for Audit 3') ON CONFLICT (audit_id) DO UPDATE SET auditor_name = 'Updated Auditor 3', audit_date = '2022-02-04', findings = 'Updated findings for Audit 3', recommendation = 'Updated recommendation for Audit 3';"
]