[
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (101, '2022-01-15', 'Safety Training', 'John Doe') ON DUPLICATE KEY UPDATE training_topic='Safety Training', trainer_name='John Doe';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (102, '2022-02-20', 'First Aid Training', 'Jane Smith') ON DUPLICATE KEY UPDATE training_topic='First Aid Training', trainer_name='Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (103, '2022-03-25', 'Leadership Development', 'Sarah Johnson') ON DUPLICATE KEY UPDATE training_topic='Leadership Development', trainer_name='Sarah Johnson';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (104, '2022-04-10', 'Communication Skills', 'Mike Brown') ON DUPLICATE KEY UPDATE training_topic='Communication Skills', trainer_name='Mike Brown';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (105, '2022-05-05', 'Team Building', 'Emily White') ON DUPLICATE KEY UPDATE training_topic='Team Building', trainer_name='Emily White';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (106, '2022-06-15', 'Conflict Resolution', 'David Lee') ON DUPLICATE KEY UPDATE training_topic='Conflict Resolution', trainer_name='David Lee';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (107, '2022-07-20', 'Time Management', 'Sophia Garcia') ON DUPLICATE KEY UPDATE training_topic='Time Management', trainer_name='Sophia Garcia';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (108, '2022-08-25', 'Customer Service', 'Oliver Martinez') ON DUPLICATE KEY UPDATE training_topic='Customer Service', trainer_name='Oliver Martinez';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (109, '2022-09-10', 'Project Management', 'Lucas Hernandez') ON DUPLICATE KEY UPDATE training_topic='Project Management', trainer_name='Lucas Hernandez';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (110, '2022-10-05', 'Problem Solving', 'Isabella Lopez') ON DUPLICATE KEY UPDATE training_topic='Problem Solving', trainer_name='Isabella Lopez';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (111, '2022-11-15', 'Technical Skills', 'Ethan Adams') ON DUPLICATE KEY UPDATE training_topic='Technical Skills', trainer_name='Ethan Adams';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (112, '2022-12-20', 'Sales Training', 'Madison Wilson') ON DUPLICATE KEY UPDATE training_topic='Sales Training', trainer_name='Madison Wilson';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (113, '2023-01-15', 'Negotiation Skills', 'Noah Scott') ON DUPLICATE KEY UPDATE training_topic='Negotiation Skills', trainer_name='Noah Scott';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (114, '2023-02-10', 'Creativity Workshop', 'Ava Green') ON DUPLICATE KEY UPDATE training_topic='Creativity Workshop', trainer_name='Ava Green';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (115, '2023-03-25', 'Presentation Skills', 'Ella Baker') ON DUPLICATE KEY UPDATE training_topic='Presentation Skills', trainer_name='Ella Baker';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (116, '2023-04-20', 'Critical Thinking', 'Logan Clark') ON DUPLICATE KEY UPDATE training_topic='Critical Thinking', trainer_name='Logan Clark';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (117, '2023-05-05', 'Team Leadership', 'Harper Adams') ON DUPLICATE KEY UPDATE training_topic='Team Leadership', trainer_name='Harper Adams';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (118, '2023-06-15', 'Decision Making', 'Mia Martin') ON DUPLICATE KEY UPDATE training_topic='Decision Making', trainer_name='Mia Martin';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (119, '2023-07-10', 'Employee Motivation', 'Liam King') ON DUPLICATE KEY UPDATE training_topic='Employee Motivation', trainer_name='Liam King';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (120, '2023-08-20', 'Workplace Diversity', 'Avery Taylor') ON DUPLICATE KEY UPDATE training_topic='Workplace Diversity', trainer_name='Avery Taylor';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (1, '2022-01-05', 'Database Management', 'John Doe') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (2, '2022-01-10', 'Project Management', 'Jane Smith') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (3, '2022-02-15', 'Software Development', 'Bob Johnson') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (4, '2022-03-20', 'Networking Fundamentals', 'Alice Brown') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (5, '2022-04-25', 'Cybersecurity Essentials', 'Chris White') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (6, '2022-05-30', 'Web Development Basics', 'Mary Green') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (7, '2022-06-05', 'Data Analytics', 'Alex Lee') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (8, '2022-07-10', 'Mobile App Development', 'Jessica Taylor') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (9, '2022-08-15', 'Cloud Computing', 'Ryan Wilson') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (10, '2022-09-20', 'Machine Learning', 'Emily Davis') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (11, '2022-10-25', 'Blockchain Technology', 'Michael Martinez') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (12, '2022-11-30', 'DevOps Practices', 'Sarah King') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (13, '2023-01-05', 'Data Science Fundamentals', 'Andrew Miller') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (14, '2023-02-10', 'Artificial Intelligence Basics', 'Olivia Hernandez') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (15, '2023-03-15', 'UI/UX Design Principles', 'Daniel Brown') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (16, '2023-04-20', 'Big Data Technologies', 'Sophia Clark') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (17, '2023-05-25', 'IoT Applications', 'Ethan Garcia') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (18, '2023-06-30', 'Digital Marketing Strategies', 'Ava Johnson') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (19, '2023-07-05', 'E-commerce Trends', 'Noah Wilson') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nINSERT INTO EmployeeTrainingRecords (employee_id, training_date, training_topic, trainer_name) VALUES (20, '2023-08-10', 'Social Media Management', 'Mia Anderson') ON CONFLICT (employee_id, training_date) DO UPDATE SET training_topic = excluded.training_topic, trainer_name = excluded.trainer_name;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (1, 'John Doe', 'Engineering', 'Software Engineer')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (2, 'Jane Smith', 'Marketing', 'Marketing Manager')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (3, 'Michael Johnson', 'HR', 'HR Specialist')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (4, 'Emily Davis', 'Finance', 'Financial Analyst')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (5, 'Robert Wilson', 'Engineering', 'Senior Software Engineer')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (6, 'Sarah Brown', 'Marketing', 'Marketing Coordinator')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (7, 'William Miller', 'HR', 'HR Manager')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (8, 'Olivia Anderson', 'Finance', 'Financial Manager')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (9, 'Daniel Lee', 'Engineering', 'Software Developer')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (10, 'Amanda Harris', 'Marketing', 'Social Media Manager')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (11, 'Chris Taylor', 'HR', 'Recruiter')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (12, 'Alexis Clark', 'Finance', 'Accountant')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (13, 'Ethan Scott', 'Engineering', 'System Architect')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (14, 'Sophia Young', 'Marketing', 'Marketing Analyst')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (15, 'Isaac Green', 'HR', 'HR Director')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (16, 'Natalie Hill', 'Finance', 'Financial Advisor')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (17, 'Liam Baker', 'Engineering', 'DevOps Engineer')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (18, 'Aria Parker', 'Marketing', 'Digital Marketing Specialist')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (19, 'Mason Collins', 'HR', 'HR Assistant')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (id, name, department, position) VALUES (20, 'Harper Adams', 'Finance', 'Financial Controller')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (1, 'John Doe', 'Sales', 'Manager') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (2, 'Jane Smith', 'Marketing', 'Specialist') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (3, 'Alice Johnson', 'HR', 'Manager') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (4, 'Bob Brown', 'IT', 'Engineer') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (5, 'Eva White', 'Finance', 'Analyst') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (6, 'Michael Lee', 'Operations', 'Supervisor') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (7, 'Sarah Davis', 'Customer Service', 'Representative') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (8, 'Kevin Wilson', 'Sales', 'Associate') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (9, 'Olivia Moore', 'IT', 'Programmer') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (10, 'Alex Garcia', 'Marketing', 'Manager') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (11, 'Grace Hill', 'Finance', 'Coordinator') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (12, 'Peter Clark', 'Operations', 'Manager') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (13, 'Natalie Baker', 'Customer Service', 'Supervisor') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (14, 'Robert Hill', 'IT', 'Engineer') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (15, 'Jessica White', 'Marketing', 'Specialist') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (16, 'Andrew Smith', 'Sales', 'Manager') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (17, 'Sophia Johnson', 'HR', 'Coordinator') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (18, 'Adam Brown', 'IT', 'Programmer') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (19, 'Emily Wilson', 'Finance', 'Analyst') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO employees (id, name, department, position) VALUES (20, 'Lucas Lee', 'Operations', 'Supervisor') ON DUPLICATE KEY UPDATE name = VALUES(name), department = VALUES(department), position = VALUES(position);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (101, 'John', 'Doe', 'Marketing') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', department = 'Marketing';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (102, 'Jane', 'Smith', 'Sales') ON DUPLICATE KEY UPDATE first_name = 'Jane', last_name = 'Smith', department = 'Sales';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (103, 'Mike', 'Johnson', 'HR') ON DUPLICATE KEY UPDATE first_name = 'Mike', last_name = 'Johnson', department = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (104, 'Sarah', 'Brown', 'Finance') ON DUPLICATE KEY UPDATE first_name = 'Sarah', last_name = 'Brown', department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (105, 'Emily', 'Davis', 'IT') ON DUPLICATE KEY UPDATE first_name = 'Emily', last_name = 'Davis', department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, employee_id, training_course, completion_date) VALUES (201, 101, 'Marketing 101', '2022-01-15') ON DUPLICATE KEY UPDATE employee_id = 101, training_course = 'Marketing 101', completion_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, employee_id, training_course, completion_date) VALUES (202, 102, 'Sales 101', '2022-02-20') ON DUPLICATE KEY UPDATE employee_id = 102, training_course = 'Sales 101', completion_date = '2022-02-20';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, employee_id, training_course, completion_date) VALUES (203, 103, 'HR 101', '2022-03-25') ON DUPLICATE KEY UPDATE employee_id = 103, training_course = 'HR 101', completion_date = '2022-03-25';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, employee_id, training_course, completion_date) VALUES (204, 104, 'Finance 101', '2022-04-30') ON DUPLICATE KEY UPDATE employee_id = 104, training_course = 'Finance 101', completion_date = '2022-04-30';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, employee_id, training_course, completion_date) VALUES (205, 105, 'IT 101', '2022-05-05') ON DUPLICATE KEY UPDATE employee_id = 105, training_course = 'IT 101', completion_date = '2022-05-05';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO departments (department_id, department_name) VALUES (301, 'Marketing') ON DUPLICATE KEY UPDATE department_name = 'Marketing';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO departments (department_id, department_name) VALUES (302, 'Sales') ON DUPLICATE KEY UPDATE department_name = 'Sales';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO departments (department_id, department_name) VALUES (303, 'HR') ON DUPLICATE KEY UPDATE department_name = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO departments (department_id, department_name) VALUES (304, 'Finance') ON DUPLICATE KEY UPDATE department_name = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO departments (department_id, department_name) VALUES (305, 'IT') ON DUPLICATE KEY UPDATE department_name = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (1, 'John', 'Doe', 'HR') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (2, 'Jane', 'Smith', 'Marketing') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', department = 'Marketing';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (3, 'Michael', 'Johnson', 'IT') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Michael', last_name = 'Johnson', department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (4, 'Emily', 'Brown', 'Finance') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Emily', last_name = 'Brown', department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (5, 'Daniel', 'White', 'HR') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Daniel', last_name = 'White', department = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (6, 'Sarah', 'Anderson', 'IT') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Sarah', last_name = 'Anderson', department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (7, 'Chris', 'Wilson', 'Marketing') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Chris', last_name = 'Wilson', department = 'Marketing';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (8, 'Laura', 'Taylor', 'IT') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Laura', last_name = 'Taylor', department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (9, 'Mark', 'Roberts', 'Finance') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Mark', last_name = 'Roberts', department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (10, 'Jessica', 'Davis', 'HR') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Jessica', last_name = 'Davis', department = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (11, 'Ryan', 'Moore', 'Marketing') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Ryan', last_name = 'Moore', department = 'Marketing';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (12, 'Amanda', 'Clark', 'IT') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Amanda', last_name = 'Clark', department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (13, 'Kevin', 'Baker', 'Finance') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Kevin', last_name = 'Baker', department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (14, 'Hannah', 'Young', 'HR') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Hannah', last_name = 'Young', department = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (15, 'Peter', 'Wood', 'Marketing') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Peter', last_name = 'Wood', department = 'Marketing';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (16, 'Olivia', 'Gray', 'IT') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Olivia', last_name = 'Gray', department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (17, 'Eric', 'Lewis', 'Finance') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Eric', last_name = 'Lewis', department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (18, 'Samantha', 'Hall', 'HR') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Samantha', last_name = 'Hall', department = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (19, 'Jacob', 'Adams', 'Marketing') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Jacob', last_name = 'Adams', department = 'Marketing';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department) VALUES (20, 'Natalie', 'Scott', 'IT') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Natalie', last_name = 'Scott', department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, hire_date) VALUES (1, 'John Doe', 'HR', '2022-01-10') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'Jane Doe', department = 'IT', hire_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_courses (course_id, course_name, course_description, course_duration) VALUES (1, 'SQL Fundamentals', 'Learn SQL basics', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Python Fundamentals', course_description = 'Learn Python basics', course_duration = 6;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, course_id, training_date, completed) VALUES (1, 1, 1, '2022-03-01', true) ON CONFLICT (training_id) DO UPDATE SET employee_id = 2, course_id = 2, training_date = '2022-03-15', completed = false;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, training_id, completion_date, score) VALUES (1, 1, '2022-03-15', 90) ON CONFLICT (record_id) DO UPDATE SET training_id = 2, completion_date = '2022-04-01', score = 95;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, hire_date) VALUES (2, 'Alice Smith', 'Finance', '2021-12-20') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'Alice Brown', department = 'Finance', hire_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_courses (course_id, course_name, course_description, course_duration) VALUES (2, 'Python Advanced', 'Advanced Python concepts', 6) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Java Fundamentals', course_description = 'Learn Java basics', course_duration = 8;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, course_id, training_date, completed) VALUES (2, 2, 2, '2022-04-01', true) ON CONFLICT (training_id) DO UPDATE SET employee_id = 1, course_id = 1, training_date = '2022-04-15', completed = true;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, training_id, completion_date, score) VALUES (2, 2, '2022-04-15', 88) ON CONFLICT (record_id) DO UPDATE SET training_id = 1, completion_date = '2022-05-01', score = 92;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, hire_date) VALUES (3, 'Michael Johnson', 'IT', '2022-02-05') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'Michelle Johnson', department = 'HR', hire_date = '2022-03-10';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_courses (course_id, course_name, course_description, course_duration) VALUES (3, 'Java Fundamentals', 'Learn Java basics', 8) ON CONFLICT (course_id) DO UPDATE SET course_name = 'HTML Basics', course_description = 'Learn HTML basics', course_duration = 5;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, course_id, training_date, completed) VALUES (3, 3, 3, '2022-05-01', false) ON CONFLICT (training_id) DO UPDATE SET employee_id = 3, course_id = 3, training_date = '2022-05-15', completed = true;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, training_id, completion_date, score) VALUES (3, 3, '2022-05-15', 95) ON CONFLICT (record_id) DO UPDATE SET training_id = 3, completion_date = '2022-06-01', score = 98;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, hire_date) VALUES (4, 'Sarah Green', 'Marketing', '2021-11-15') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'Samantha Green', department = 'Marketing', hire_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_courses (course_id, course_name, course_description, course_duration) VALUES (4, 'HTML Basics', 'Learn HTML basics', 5) ON CONFLICT (course_id) DO UPDATE SET course_name = 'CSS Fundamentals', course_description = 'Learn CSS basics', course_duration = 4;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, course_id, training_date, completed) VALUES (4, 4, 4, '2022-06-01', true) ON CONFLICT (training_id) DO UPDATE SET employee_id = 4, course_id = 4, training_date = '2022-06-15', completed = false;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, training_id, completion_date, score) VALUES (4, 4, '2022-06-15', 80) ON CONFLICT (record_id) DO UPDATE SET training_id = 4, completion_date = '2022-07-01', score = 85;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, hire_date) VALUES (5, 'David Lee', 'IT', '2021-10-20') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'Daniel Lee', department = 'HR', hire_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_courses (course_id, course_name, course_description, course_duration) VALUES (5, 'CSS Fundamentals', 'Learn CSS basics', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'JavaScript Basics', course_description = 'Learn JavaScript basics', course_duration = 6;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, course_id, training_date, completed) VALUES (5, 5, 5, '2022-07-01', true) ON CONFLICT (training_id) DO UPDATE SET employee_id = 5, course_id = 5, training_date = '2022-07-15', completed = true;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, training_id, completion_date, score) VALUES (5, 5, '2022-07-15', 92) ON CONFLICT (record_id) DO UPDATE SET training_id = 5, completion_date = '2022-08-01', score = 96;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, hire_date) VALUES (1, 'John Doe', 'Marketing', '2020-01-15') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'John Doe', department = 'Marketing', hire_date = '2020-01-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, hire_date) VALUES (2, 'Jane Smith', 'Sales', '2019-07-20') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'Jane Smith', department = 'Sales', hire_date = '2019-07-20';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_courses (course_id, course_name, course_description, course_duration) VALUES (1, 'Sales Techniques', 'Effective sales strategies', 3) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Sales Techniques', course_description = 'Effective sales strategies', course_duration = 3;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_courses (course_id, course_name, course_description, course_duration) VALUES (2, 'Marketing Strategies', 'Innovative marketing concepts', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Marketing Strategies', course_description = 'Innovative marketing concepts', course_duration = 4;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, course_id, training_date, completed) VALUES (1, 1, 1, '2021-02-10', true) ON CONFLICT (training_id) DO UPDATE SET employee_id = 1, course_id = 1, training_date = '2021-02-10', completed = true;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, course_id, training_date, completed) VALUES (2, 2, 2, '2020-11-30', true) ON CONFLICT (training_id) DO UPDATE SET employee_id = 2, course_id = 2, training_date = '2020-11-30', completed = true;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, training_id, completion_date, score) VALUES (1, 1, '2021-02-20', 95) ON CONFLICT (record_id) DO UPDATE SET training_id = 1, completion_date = '2021-02-20', score = 95;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, training_id, completion_date, score) VALUES (2, 2, '2020-12-10', 88) ON CONFLICT (record_id) DO UPDATE SET training_id = 2, completion_date = '2020-12-10', score = 88;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, hire_date) VALUES (3, 'Michael Johnson', 'Finance', '2019-05-12') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'Michael Johnson', department = 'Finance', hire_date = '2019-05-12';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, hire_date) VALUES (4, 'Emily Brown', 'HR', '2020-09-25') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'Emily Brown', department = 'HR', hire_date = '2020-09-25';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_courses (course_id, course_name, course_description, course_duration) VALUES (3, 'Leadership Development', 'Enhancing leadership skills', 5) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Leadership Development', course_description = 'Enhancing leadership skills', course_duration = 5;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_courses (course_id, course_name, course_description, course_duration) VALUES (4, 'Communication Skills', 'Effective communication techniques', 2) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Communication Skills', course_description = 'Effective communication techniques', course_duration = 2;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, course_id, training_date, completed) VALUES (3, 3, 3, '2021-03-15', false) ON CONFLICT (training_id) DO UPDATE SET employee_id = 3, course_id = 3, training_date = '2021-03-15', completed = false;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, course_id, training_date, completed) VALUES (4, 4, 4, '2020-12-05', true) ON CONFLICT (training_id) DO UPDATE SET employee_id = 4, course_id = 4, training_date = '2020-12-05', completed = true;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, training_id, completion_date, score) VALUES (3, 3, NULL, NULL) ON CONFLICT (record_id) DO UPDATE SET training_id = 3, completion_date = NULL, score = NULL;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_records (record_id, training_id, completion_date, score) VALUES (4, 4, '2020-12-20', 92) ON CONFLICT (record_id) DO UPDATE SET training_id = 4, completion_date = '2020-12-20', score = 92;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, hire_date) VALUES (5, 'Sarah Lee', 'IT', '2018-10-07') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'Sarah Lee', department = 'IT', hire_date = '2018-10-07';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, hire_date) VALUES (6, 'Chris Wilson', 'Operations', '2020-03-18') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'Chris Wilson', department = 'Operations', hire_date = '2020-03-18';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_courses (course_id, course_name, course_description, course_duration) VALUES (5, 'Project Management Basics', 'Fundamentals of project management', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Project Management Basics', course_description = 'Fundamentals of project management', course_duration = 4;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nINSERT INTO training_courses (course_id, course_name, course_description, course_duration) VALUES (6, 'Time Management', 'Effective time management techniques', 3) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Time Management', course_description = 'Effective time management techniques', course_duration = 3;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (1, 'John', 'Doe', 'HR', '2019-05-15') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'HR', hire_date = '2019-05-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (2, 'Jane', 'Smith', 'IT', '2020-02-20') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', department = 'IT', hire_date = '2020-02-20';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (3, 'Bob', 'Johnson', 'Finance', '2018-10-10') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Bob', last_name = 'Johnson', department = 'Finance', hire_date = '2018-10-10';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (4, 'Mary', 'Brown', 'Marketing', '2021-01-05') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Mary', last_name = 'Brown', department = 'Marketing', hire_date = '2021-01-05';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (5, 'Alice', 'Taylor', 'Sales', '2017-08-25') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Alice', last_name = 'Taylor', department = 'Sales', hire_date = '2017-08-25';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (6, 'Tom', 'Wilson', 'Operations', '2019-11-30') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Tom', last_name = 'Wilson', department = 'Operations', hire_date = '2019-11-30';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (7, 'Amy', 'Lee', 'IT', '2020-03-10') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Amy', last_name = 'Lee', department = 'IT', hire_date = '2020-03-10';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (8, 'David', 'Clark', 'HR', '2018-07-20') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'David', last_name = 'Clark', department = 'HR', hire_date = '2018-07-20';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (9, 'Sarah', 'Mitchell', 'Finance', '2019-04-15') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Sarah', last_name = 'Mitchell', department = 'Finance', hire_date = '2019-04-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (10, 'Michael', 'Garcia', 'Marketing', '2020-06-05') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Michael', last_name = 'Garcia', department = 'Marketing', hire_date = '2020-06-05';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (11, 'Karen', 'Brown', 'Sales', '2018-09-25') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Karen', last_name = 'Brown', department = 'Sales', hire_date = '2018-09-25';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (12, 'Peter', 'Young', 'Operations', '2017-12-30') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Peter', last_name = 'Young', department = 'Operations', hire_date = '2017-12-30';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (13, 'Michelle', 'Nguyen', 'IT', '2019-03-10') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Michelle', last_name = 'Nguyen', department = 'IT', hire_date = '2019-03-10';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (14, 'Kevin', 'Johnson', 'HR', '2020-05-15') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Kevin', last_name = 'Johnson', department = 'HR', hire_date = '2020-05-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (15, 'Laura', 'Williams', 'Finance', '2018-08-20') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Laura', last_name = 'Williams', department = 'Finance', hire_date = '2018-08-20';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (16, 'Alex', 'Davis', 'Marketing', '2019-02-05') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Alex', last_name = 'Davis', department = 'Marketing', hire_date = '2019-02-05';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (17, 'Emma', 'Moore', 'Sales', '2017-11-25') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Emma', last_name = 'Moore', department = 'Sales', hire_date = '2017-11-25';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (18, 'Chris', 'King', 'Operations', '2018-10-30') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Chris', last_name = 'King', department = 'Operations', hire_date = '2018-10-30';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (19, 'Julia', 'Baker', 'IT', '2019-06-10') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Julia', last_name = 'Baker', department = 'IT', hire_date = '2019-06-10';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (20, 'Steven', 'Harris', 'HR', '2021-04-15') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Steven', last_name = 'Harris', department = 'HR', hire_date = '2021-04-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (1, 'John', 'Doe', 'IT', '2021-01-10') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'IT', hire_date = '2021-01-10';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (2, 'Jane', 'Smith', 'HR', '2021-02-15') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', department = 'HR', hire_date = '2021-02-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_programs (program_id, program_name, start_date, end_date, trainer) VALUES (1, 'Java Programming', '2021-03-05', '2021-05-05', 'John Smith') ON CONFLICT (program_id) DO UPDATE SET program_name = 'Java Programming', start_date = '2021-03-05', end_date = '2021-05-05', trainer = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_programs (program_id, program_name, start_date, end_date, trainer) VALUES (2, 'Database Management', '2021-04-10', '2021-06-10', 'Alice Johnson') ON CONFLICT (program_id) DO UPDATE SET program_name = 'Database Management', start_date = '2021-04-10', end_date = '2021-06-10', trainer = 'Alice Johnson';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, program_id, completion_date) VALUES (1, 1, 1, '2021-05-20') ON CONFLICT (training_id) DO UPDATE SET employee_id = 1, program_id = 1, completion_date = '2021-05-20';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, program_id, completion_date) VALUES (2, 2, 2, '2021-06-25') ON CONFLICT (training_id) DO UPDATE SET employee_id = 2, program_id = 2, completion_date = '2021-06-25';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_categories (category_id, category_name) VALUES (1, 'Technical Skills') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Technical Skills';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_categories (category_id, category_name) VALUES (2, 'Soft Skills') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Soft Skills';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_program_categories (program_id, category_id) VALUES (1, 1) ON CONFLICT (program_id, category_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_program_categories (program_id, category_id) VALUES (2, 2) ON CONFLICT (program_id, category_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (3, 'Michael', 'Brown', 'Finance', '2020-12-01') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Michael', last_name = 'Brown', department = 'Finance', hire_date = '2020-12-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, hire_date) VALUES (4, 'Sarah', 'Miller', 'Marketing', '2020-11-25') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Sarah', last_name = 'Miller', department = 'Marketing', hire_date = '2020-11-25';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_programs (program_id, program_name, start_date, end_date, trainer) VALUES (3, 'Communication Skills', '2021-07-15', '2021-09-15', 'Emily Adams') ON CONFLICT (program_id) DO UPDATE SET program_name = 'Communication Skills', start_date = '2021-07-15', end_date = '2021-09-15', trainer = 'Emily Adams';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_programs (program_id, program_name, start_date, end_date, trainer) VALUES (4, 'Leadership Development', '2021-08-20', '2021-10-20', 'Matthew Wilson') ON CONFLICT (program_id) DO UPDATE SET program_name = 'Leadership Development', start_date = '2021-08-20', end_date = '2021-10-20', trainer = 'Matthew Wilson';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, program_id, completion_date) VALUES (3, 3, 3, '2021-09-30') ON CONFLICT (training_id) DO UPDATE SET employee_id = 3, program_id = 3, completion_date = '2021-09-30';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO employee_training (training_id, employee_id, program_id, completion_date) VALUES (4, 4, 4, '2021-10-30') ON CONFLICT (training_id) DO UPDATE SET employee_id = 4, program_id = 4, completion_date = '2021-10-30';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_categories (category_id, category_name) VALUES (3, 'Leadership Skills') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Leadership Skills';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_categories (category_id, category_name) VALUES (4, 'Teamwork') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Teamwork';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_program_categories (program_id, category_id) VALUES (3, 4) ON CONFLICT (program_id, category_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_program_categories (program_id, category_id) VALUES (4, 3) ON CONFLICT (program_id, category_id) DO NOTHING;"
]