[
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords WHERE employee_id = 1",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT training_topic FROM EmployeeTrainingRecords WHERE employee_id = 2",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords WHERE training_date = '2022-10-15'",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT trainer_name FROM EmployeeTrainingRecords WHERE employee_id = 3",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords WHERE training_topic = 'Sales Training'",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT employee_id, training_topic FROM EmployeeTrainingRecords WHERE training_date BETWEEN '2022-08-01' AND '2022-08-31'",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords WHERE employee_id = 4 AND training_topic = 'Leadership Development'",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT DISTINCT employee_id FROM EmployeeTrainingRecords",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_trainings FROM EmployeeTrainingRecords",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT AVG(employee_id) AS average_employee_id FROM EmployeeTrainingRecords",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT MAX(employee_id) AS max_employee_id FROM EmployeeTrainingRecords",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT MIN(employee_id) AS min_employee_id FROM EmployeeTrainingRecords",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT SUM(employee_id) AS total_employee_id FROM EmployeeTrainingRecords",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT trainer_name) AS unique_trainers FROM EmployeeTrainingRecords",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords ORDER BY training_date DESC",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords ORDER BY employee_id ASC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords WHERE training_topic LIKE '%Development%'",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords WHERE training_date > '2022-09-01'",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords WHERE employee_id IN (1, 2, 3)",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords WHERE employee_id = 5 OR employee_id = 6",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT employee_id, training_topic FROM EmployeeTrainingRecords WHERE training_date BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY training_date DESC",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT DISTINCT trainer_name FROM EmployeeTrainingRecords WHERE training_topic='HR Policy' AND training_date > '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords WHERE employee_id IN (SELECT employee_id FROM Employees WHERE department='IT')",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT training_topic, COUNT(*) AS training_count FROM EmployeeTrainingRecords GROUP BY training_topic",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT employee_id, training_date, trainer_name FROM EmployeeTrainingRecords WHERE training_topic='Safety Training' ORDER BY training_date ASC",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT employee_id, MAX(training_date) AS last_training_date FROM EmployeeTrainingRecords GROUP BY employee_id",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT DISTINCT employee_id, trainer_name FROM EmployeeTrainingRecords WHERE trainer_name LIKE '%Smith%'",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords WHERE trainer_name IN ('John Doe', 'Jane Smith')",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT AVG(t1.training_date - t2.training_date) AS avg_training_gap FROM EmployeeTrainingRecords t1 JOIN EmployeeTrainingRecords t2 ON t1.employee_id = t2.employee_id AND t1.training_date > t2.training_date",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT employee_id, training_topic FROM EmployeeTrainingRecords WHERE training_topic LIKE '%Soft Skills%' ORDER BY training_date DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT training_topic, COUNT(DISTINCT trainer_name) AS unique_trainers FROM EmployeeTrainingRecords GROUP BY training_topic",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT DISTINCT employee_id, COUNT(*) AS training_count FROM EmployeeTrainingRecords GROUP BY employee_id HAVING COUNT(*) > 3",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM EmployeeTrainingRecords WHERE training_date = (SELECT MAX(training_date) FROM EmployeeTrainingRecords)",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT employee_id, training_topic, DATEDIFF(NOW(), training_date) AS days_since_training FROM EmployeeTrainingRecords",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT DISTINCT training_topic, DATE_FORMAT(training_date, '%Y-%m-%d') AS formatted_date FROM EmployeeTrainingRecords ORDER BY formatted_date ASC",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_trainings, training_topic, trainer_name FROM EmployeeTrainingRecords GROUP BY training_topic, trainer_name",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT employee_id, training_topic, IF(trainer_name IS NULL, 'No Trainer', trainer_name) AS trainer_status FROM EmployeeTrainingRecords",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(NOW(), training_date)) AS avg_days_since_training FROM EmployeeTrainingRecords",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT employee_id, training_topic, training_date FROM EmployeeTrainingRecords WHERE DATE(training_date) = CURDATE()",
  "### TABLEDATA\n\nCREATE TABLE EmployeeTrainingRecords (\n  employee_id INT,\n  training_date DATE,\n  training_topic VARCHAR(255),\n  trainer_name VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT employee_id, training_topic, trainer_name FROM EmployeeTrainingRecords WHERE YEAR(training_date) = YEAR(CURDATE()) AND MONTH(training_date) = MONTH(CURDATE())",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT name, department FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT id, position FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM training_records;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT record_id, employee_id FROM training_records;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT training_date, training_type FROM training_records;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT employee_id, completion_status FROM training_records;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department='IT';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT name, position FROM employees WHERE department='HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM training_records WHERE completion_status='completed';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT training_date, training_type FROM training_records WHERE training_date>'2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM employees JOIN training_records ON employees.id = training_records.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT employees.name, training_records.training_type FROM employees JOIN training_records ON employees.id = training_records.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT employees.*, training_records.training_date FROM employees JOIN training_records ON employees.id = training_records.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department='Marketing' AND position='Manager';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department='IT' OR department='HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM training_records WHERE completion_status='pending' OR completion_status='in progress';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT name AS employee_name, department AS emp_dept FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT id, position, CONCAT(name, ' - ', department) AS emp_info FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_employees FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT DISTINCT department FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id, MIN(id) AS min_id, MAX(id) AS max_id FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id, MIN(id) AS min_id, MAX(id) AS max_id FROM employees GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT department, COUNT(*) AS total_employees FROM employees GROUP BY department HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT department, COUNT(*) AS total_employees FROM employees GROUP BY department ORDER BY total_employees DESC;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM employees LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM employees OFFSET 2;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM employees LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department='IT';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT name, position FROM employees WHERE department='HR' ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department='Finance' AND position='Manager';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT name FROM employees WHERE position='Intern' ORDER BY id DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT e.name, t.training_date FROM employees e JOIN training_records t ON e.id = t.employee_id WHERE t.training_type = 'Safety Training';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT e.name, t.training_type FROM employees e LEFT JOIN training_records t ON e.id = t.employee_id WHERE t.employee_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT e.name, t.training_date, t.completion_status FROM employees e INNER JOIN training_records t ON e.id = t.employee_id WHERE t.completion_status = 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT e.name, COUNT(t.record_id) AS num_trainings FROM employees e LEFT JOIN training_records t ON e.id = t.employee_id GROUP BY e.name HAVING num_trainings > 3;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT e.name, SUM(CASE WHEN t.completion_status = 'Completed' THEN 1 ELSE 0 END) AS num_completed_trainings FROM employees e INNER JOIN training_records t ON e.id = t.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT department, AVG(CASE WHEN position = 'Manager' THEN 1 ELSE 0 END) AS manager_avg FROM employees GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT department, training_type, COUNT(*) AS num_trainings FROM employees e JOIN training_records t ON e.id = t.employee_id GROUP BY department, training_type;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT department, MAX(t.training_date) AS latest_training_date FROM employees e JOIN training_records t ON e.id = t.employee_id GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT e.name, t.training_date, MIN(t.training_date) OVER(PARTITION BY e.id) AS earliest_training_date FROM employees e JOIN training_records t ON e.id = t.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT e.name, DENSE_RANK() OVER(ORDER BY t.training_date DESC) AS training_rank FROM employees e JOIN training_records t ON e.id = t.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT department, AVG(CASE WHEN completion_status = 'Completed' THEN 1 ELSE 0 END) AS completion_rate FROM employees e JOIN training_records t ON e.id = t.employee_id GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT department, completion_status, COUNT(*) AS num_trainings FROM employees e JOIN training_records t ON e.id = t.employee_id GROUP BY department, completion_status;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT department, training_type, AVG(CASE WHEN completion_status = 'Completed' THEN 1 ELSE 0 END) AS completion_rate FROM employees e JOIN training_records t ON e.id = t.employee_id GROUP BY department, training_type;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT department, training_date, completion_status, ROW_NUMBER() OVER(PARTITION BY department ORDER BY training_date DESC) AS training_row_number FROM employees e JOIN training_records t ON e.id = t.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT e.name, t.training_type, LEAD(t.training_date) OVER(ORDER BY t.training_date) AS next_training_date FROM employees e JOIN training_records t ON e.id = t.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  department VARCHAR(50),\n  position VARCHAR(50)\n);\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  employee_id INT,\n  training_date DATE,\n  training_type VARCHAR(50),\n  completion_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT department, AVG(DATEDIFF(CURRENT_DATE, t.training_date)) AS avg_days_since_training FROM employees e JOIN training_records t ON e.employee_id = t.employee_id GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT employee_id, first_name, last_name FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM training_records;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT training_course, completion_date FROM training_records;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT employee_id, training_course, completion_date FROM training_records;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM departments;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT department_name FROM departments;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department='HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM employees WHERE department='Accounting';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT employee_id, training_course FROM training_records WHERE completion_date>'2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT department_name FROM departments WHERE department_id=1;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM employees ORDER BY last_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM training_records ORDER BY completion_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM employees WHERE employee_id=5;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT employee_id, training_course FROM training_records WHERE employee_id=10;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT department_name FROM departments WHERE department_name LIKE '%Eng%';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department IN ('IT', 'Marketing');",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM training_records WHERE completion_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT department_name, COUNT(*) FROM employees GROUP BY department_name;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT department_name, AVG(employee_id) FROM employees GROUP BY department_name;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department = 'IT'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, department FROM employees WHERE department = 'HR'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM training_records WHERE completion_date > '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT employee_id, first_name, last_name, department FROM employees WHERE first_name LIKE 'John%'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM employees INNER JOIN training_records ON employees.employee_id = training_records.employee_id",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT employee_id, first_name, training_course, completion_date FROM employees INNER JOIN training_records ON employees.employee_id = training_records.employee_id WHERE department = 'Finance'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department = (SELECT department_name FROM departments WHERE department_id = 2)",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM training_records WHERE employee_id IN (SELECT employee_id FROM employees WHERE department = 'Marketing')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT employee_id, first_name, last_name FROM employees UNION SELECT employee_id, training_course, completion_date FROM training_records WHERE completion_date > '2022-01-01' ORDER BY employee_id",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_employees FROM employees",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT department, COUNT(*) AS total_employees FROM employees GROUP BY department HAVING COUNT(*) > 5",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT employee_id, first_name, last_name, training_course, completion_date FROM employees LEFT JOIN training_records ON employees.employee_id = training_records.employee_id WHERE training_course IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department LIKE '%Eng%'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, department_name FROM employees INNER JOIN departments ON employees.department = departments.department_name WHERE department_id > 1",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT employee_id, first_name, last_name, department FROM employees WHERE department IN ('IT', 'HR', 'Accounting')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE employee_id BETWEEN 1001 AND 1010",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department <> 'Management'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, department FROM employees ORDER BY department DESC",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM training_records WHERE training_course LIKE '%SQL%'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n\temployee_id INT PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tdepartment VARCHAR\n);\n\n\nCREATE TABLE training_records (\n\trecord_id INT PRIMARY KEY,\n\temployee_id INT,\n\ttraining_course VARCHAR,\n\tcompletion_date DATE\n);\n\n\nCREATE TABLE departments (\n\tdepartment_id INT PRIMARY KEY,\n\tdepartment_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT employee_id, MAX(completion_date) AS latest_completion_date FROM training_records GROUP BY employee_id HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_name, department FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_id, hire_date FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT * FROM training_courses;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT course_name, course_description FROM training_courses;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT course_id, course_duration FROM training_courses;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT * FROM employee_training;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_id, course_id, training_date FROM employee_training;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT training_id, completed FROM employee_training;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT * FROM training_records;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT training_id, completion_date, score FROM training_records;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT record_id FROM training_records;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_name FROM employees WHERE hire_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT course_name FROM training_courses WHERE course_duration > 10;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT * FROM employee_training WHERE completed = true;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_id FROM employee_training WHERE course_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT * FROM training_records WHERE score > 80;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT completion_date FROM training_records WHERE training_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT course_name, course_duration FROM training_courses WHERE course_duration < 5;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_id, employee_name, department FROM employees WHERE hire_date > '2020-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_name, department, hire_date FROM employees WHERE department = 'Sales';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_name, hire_date FROM employees WHERE department = 'HR' AND hire_date < '2018-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_id, employee_name, hire_date FROM employees WHERE department = 'IT' ORDER BY hire_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_name, hire_date FROM employees WHERE employee_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT department FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_id, department FROM employees WHERE employee_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT * FROM training_courses;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT course_id, course_name FROM training_courses WHERE course_duration > 10;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT course_name, course_duration FROM training_courses WHERE course_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, course_description FROM training_courses WHERE course_description LIKE '%Java%';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT * FROM employee_training;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_id, course_id FROM employee_training WHERE training_date > '2019-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT training_id, employee_id, completed FROM employee_training WHERE completed = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT * FROM training_records;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT training_id, completion_date FROM training_records WHERE score >= 80;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT record_id, training_id, score FROM training_records WHERE completion_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT training_id, completion_date, score FROM training_records WHERE record_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  employee_name VARCHAR(50) NOT NULL,\n  department VARCHAR(50),\n  hire_date DATE\n)\n\nCREATE TABLE training_courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100) NOT NULL,\n  course_description TEXT,\n  course_duration INT\n)\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  course_id INT,\n  training_date DATE,\n  completed BOOLEAN\n)\n\nCREATE TABLE training_records (\n  record_id INT PRIMARY KEY,\n  training_id INT,\n  completion_date DATE,\n  score INT\n)\n\n### STATEMENT\n\nSELECT employee_name, course_name FROM employees e JOIN employee_training et ON e.employee_id = et.employee_id JOIN training_courses tc ON et.course_id = tc.course_id WHERE et.training_date > '2020-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM employees WHERE department = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, start_date, end_date FROM training_programs;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT employee_id, program_id, completion_date FROM employee_training WHERE employee_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT category_name FROM training_categories;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT e.first_name, e.last_name, t.program_name FROM employees e JOIN employee_training et ON e.employee_id = et.employee_id JOIN training_programs t ON et.program_id = t.program_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, trainer FROM training_programs WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_employees FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_id, COUNT(*) AS total_enrollments FROM employee_training GROUP BY program_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, COUNT(*) AS total_categories FROM training_program_categories GROUP BY program_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT e.first_name, e.last_name, tp.program_name FROM employees e LEFT JOIN employee_training et ON e.employee_id = et.employee_id LEFT JOIN training_programs tp ON et.program_id = tp.program_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT category_id, category_name FROM training_categories ORDER BY category_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, trainer FROM training_programs WHERE start_date < '2022-06-01' AND end_date > '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT department, COUNT(*) AS total_employees FROM employees GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT program_id FROM employee_training;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(end_date, start_date)) AS avg_duration FROM training_programs;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT e.department, AVG(DATEDIFF(et.completion_date, tp.start_date)) AS avg_completion_time FROM employees e JOIN employee_training et ON e.employee_id = et.employee_id JOIN training_programs tp ON et.program_id = tp.program_id GROUP BY e.department;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT e.first_name, e.last_name, tc.category_name FROM employees e JOIN employee_training et ON e.employee_id = et.employee_id JOIN training_program_categories tpc ON et.program_id = tpc.program_id JOIN training_categories tc ON tpc.category_id = tc.category_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, COUNT(*) AS total_enrollments FROM employee_training GROUP BY program_id HAVING total_enrollments > 5;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, COUNT(*) AS total_enrollments FROM employee_training GROUP BY program_id HAVING COUNT(*) > 2 ORDER BY total_enrollments DESC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT employee_id, first_name, last_name FROM employees WHERE department = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, start_date, end_date, trainer FROM training_programs WHERE trainer = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT e.employee_id, e.first_name, e.last_name, tp.program_name FROM employees e JOIN employee_training et ON e.employee_id = et.employee_id JOIN training_programs tp ON et.program_id = tp.program_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT e.employee_id, e.first_name, e.last_name, tc.category_name FROM employees e JOIN employee_training et ON e.employee_id = et.employee_id JOIN training_programs tp ON et.program_id = tp.program_id JOIN training_program_categories tpc ON tp.program_id = tpc.program_id JOIN training_categories tc ON tpc.category_id = tc.category_id WHERE e.department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_programs, trainer FROM training_programs GROUP BY trainer;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_id, program_name, COUNT(*) AS total_employees FROM training_programs tp JOIN employee_training et ON tp.program_id = et.program_id GROUP BY program_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, category_name FROM training_programs tp JOIN training_program_categories tpc ON tp.program_id = tpc.program_id JOIN training_categories tc ON tpc.category_id = tc.category_id WHERE tp.start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT e.first_name, e.last_name, COUNT(*) AS total_programs FROM employees e JOIN employee_training et ON e.employee_id = et.employee_id GROUP BY e.first_name, e.last_name HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT e.first_name, e.last_name, AVG(DATEDIFF(et.completion_date, et.program_id)) AS avg_days_to_complete FROM employees e JOIN employee_training et ON e.employee_id = et.employee_id GROUP BY e.first_name, e.last_name HAVING AVG(DATEDIFF(et.completion_date, et.program_id)) > 5;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT trainer FROM training_programs;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, start_date, end_date, SUM(DATEDIFF(end_date, start_date)) AS total_duration_days FROM training_programs GROUP BY program_name, start_date, end_date;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, trainer, COUNT(*) AS total_employees FROM training_programs tp JOIN employee_training et ON tp.program_id = et.program_id GROUP BY program_name, trainer HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT e.first_name, e.last_name, tp.program_name, DATEDIFF(et.completion_date, tp.start_date) AS days_to_complete FROM employees e JOIN employee_training et ON e.employee_id = et.employee_id JOIN training_programs tp ON et.program_id = tp.program_id WHERE e.department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, COUNT(*) AS total_categories FROM training_programs tp JOIN training_program_categories tpc ON tp.program_id = tpc.program_id GROUP BY program_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT e.employee_id, e.first_name, e.last_name, tc.category_name FROM employees e JOIN employee_training et ON e.employee_id = et.employee_id JOIN training_programs tp ON et.program_id = tp.program_id JOIN training_program_categories tpc ON tp.program_id = tpc.program_id JOIN training_categories tc ON tpc.category_id = tc.category_id WHERE e.department = 'Sales';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, start_date, end_date, trainer FROM training_programs WHERE start_date BETWEEN '2022-03-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT e.first_name, e.last_name, COUNT(*) AS total_programs FROM employees e JOIN employee_training et ON e.employee_id = et.employee_id GROUP BY e.first_name, e.last_name HAVING COUNT(*) = 1;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE\n);\n\nCREATE TABLE training_programs (\n  program_id INT PRIMARY KEY,\n  program_name VARCHAR(100),\n  start_date DATE,\n  end_date DATE,\n  trainer VARCHAR(50)\n);\n\nCREATE TABLE employee_training (\n  training_id INT PRIMARY KEY,\n  employee_id INT,\n  program_id INT,\n  completion_date DATE,\n  FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id)\n);\n\nCREATE TABLE training_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n);\n\nCREATE TABLE training_program_categories (\n  program_id INT,\n  category_id INT,\n  PRIMARY KEY (program_id, category_id),\n  FOREIGN KEY (program_id) REFERENCES training_programs(program_id),\n  FOREIGN KEY (category_id) REFERENCES training_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT program_name, category_name, COUNT(*) AS total_programs FROM training_programs tp JOIN training_program_categories tpc ON tp.program_id = tpc.program_id JOIN training_categories tc ON tpc.category_id = tc.category_id GROUP BY program_name, category_name HAVING COUNT(*) > 2;"
]