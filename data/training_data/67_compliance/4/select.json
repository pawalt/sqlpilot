[
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name FROM customer_consent_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, consent_given FROM customer_consent_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data WHERE consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data WHERE customer_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, consent_date FROM customer_consent_data WHERE consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data WHERE consent_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT id, consent_given FROM customer_consent_data WHERE customer_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data ORDER BY consent_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_consent_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(id) FROM customer_consent_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT MIN(consent_date) FROM customer_consent_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(id) FROM customer_consent_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT customer_name FROM customer_consent_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT SUM(id) FROM customer_consent_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data WHERE consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data WHERE consent_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data WHERE customer_name IN ('Alice', 'Bob');",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data WHERE consent_given = TRUE",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, consent_date FROM customer_consent_data WHERE customer_name LIKE '%John%'",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT id, customer_name, consent_date FROM customer_consent_data WHERE consent_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data ORDER BY consent_date DESC",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(id) AS average_id FROM customer_consent_data WHERE consent_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_consents FROM customer_consent_data GROUP BY customer_name HAVING total_consents > 1",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, SUM(id) AS total_id_sum FROM customer_consent_data WHERE consent_given = TRUE GROUP BY customer_name",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, consent_date, CASE WHEN consent_given = TRUE THEN 'Yes' ELSE 'No' END AS consent_status FROM customer_consent_data",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, consent_date, DATEDIFF(NOW(), consent_date) AS days_since_consent FROM customer_consent_data WHERE consent_given = TRUE",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, MONTH(consent_date) AS consent_month FROM customer_consent_data WHERE YEAR(consent_date) = YEAR(NOW())",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, consent_date, CONCAT('Consent was given on ', DATE_FORMAT(consent_date, '%Y-%m-%d')) AS consent_info FROM customer_consent_data",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, consent_date, CONCAT('Customer: ', customer_name, ' gave consent on ', DATE_FORMAT(consent_date, '%M %d, %Y')) AS consent_details FROM customer_consent_data",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers_with_consents FROM customer_consent_data WHERE consent_given = TRUE",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_consent_data WHERE customer_name IN ('Alice', 'Bob', 'Charlie')",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, consent_date FROM customer_consent_data WHERE consent_date = (SELECT MAX(consent_date) FROM customer_consent_data)",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, consent_date FROM customer_consent_data WHERE DATE(consent_date) = CURDATE()",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, consent_date FROM customer_consent_data WHERE WEEKDAY(consent_date) = 0",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, consent_date FROM customer_consent_data WHERE WEEKDAY(consent_date) IN (1, 2, 3)",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, consent_date, TIMESTAMPDIFF(MONTH, consent_date, NOW()) AS months_since_consent FROM customer_consent_data",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(id) AS max_id FROM customer_consent_data",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM consent_logs;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, consent_date FROM consent_logs WHERE customer_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, consent_type FROM consent_logs WHERE consent_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers LEFT JOIN consent_logs ON customers.customer_id = consent_logs.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, consent_date FROM customers INNER JOIN consent_logs ON customers.customer_id = consent_logs.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, consent_type FROM customers RIGHT JOIN consent_logs ON customers.customer_id = consent_logs.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, consent_date FROM customers LEFT JOIN consent_logs ON customers.customer_id = consent_logs.customer_id WHERE consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, consent_type FROM customers RIGHT JOIN consent_logs ON customers.customer_id = consent_logs.customer_id WHERE consent_date <= '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, consent_given FROM customers WHERE customer_id IN (100, 200, 300);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, email FROM customers WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, consent_given FROM customers WHERE customer_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(customer_id) AS total_customers FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT MAX(consent_date) AS latest_consent_date FROM consent_logs;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) AS avg_customer_id FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT consent_type FROM consent_logs;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(log_id) AS consent_logs_count FROM consent_logs GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(DATEDIFF(NOW(), consent_date)) AS avg_days_since_consent FROM consent_logs GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id IN (SELECT customer_id FROM consent_logs);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, consent_logs.consent_date FROM customers JOIN consent_logs ON customers.customer_id = consent_logs.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, consent_date FROM customers LEFT JOIN consent_logs ON customers.customer_id = consent_logs.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(log_id) AS consent_count FROM customers JOIN consent_logs ON customers.customer_id = consent_logs.customer_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(consent_date) AS latest_consent_date FROM customers JOIN consent_logs ON customers.customer_id = consent_logs.customer_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name FROM customers WHERE customer_id = (SELECT customer_id FROM consent_logs WHERE consent_date = '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name FROM customers WHERE NOT EXISTS (SELECT * FROM consent_logs WHERE customers.customer_id = consent_logs.customer_id);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(log_id) AS consent_count FROM customers LEFT JOIN consent_logs ON customers.customer_id = consent_logs.customer_id GROUP BY customer_id HAVING consent_count <= 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(SELECT CAST(EXTRACT(YEAR FROM age(consent_date)) AS INTEGER)) AS avg_age FROM customers JOIN consent_logs ON customers.customer_id = consent_logs.customer_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, consent_type FROM customers JOIN consent_logs ON customers.customer_id = consent_logs.customer_id WHERE EXTRACT(MONTH FROM consent_date) = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, consent_type FROM customers JOIN consent_logs ON customers.customer_id = consent_logs.customer_id WHERE consent_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(log_id) AS consent_count FROM customers JOIN consent_logs ON customers.customer_id = consent_logs.customer_id WHERE consent_type = 'email' GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, consent_type, consent_date FROM customers JOIN consent_logs ON customers.customer_id = consent_logs.customer_id ORDER BY consent_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, CASE WHEN consent_given THEN 'Given' ELSE 'Not Given' END AS consent_status FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(SELECT CAST(EXTRACT(YEAR FROM CURRENT_DATE) AS INTEGER) - CAST(EXTRACT(YEAR FROM age(consent_date)) AS INTEGER)) AS avg_reg_days FROM customers JOIN consent_logs ON customers.customer_id = consent_logs.customer_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, consent_type, COUNT(customer_id) AS consent_count FROM customers JOIN consent_logs ON customers.customer_id = consent_logs.customer_id GROUP BY consent_type HAVING consent_count >= 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, consent_type, consent_date FROM customers JOIN consent_logs ON customers.customer_id = consent_logs.customer_id WHERE DATE_PART('year', AGE(consent_date)) > 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, email FROM customers WHERE consent_given = true;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM consent_logs;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT log_id, consent_date FROM consent_logs;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, consent_action FROM consent_logs;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM consent_preferences;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT preference_id, customer_id, preference_type FROM consent_preferences;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, preference_type, preference_value FROM consent_preferences;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, cl.consent_date FROM customers c JOIN consent_logs cl ON c.customer_id = cl.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, cp.preference_type, cp.preference_value FROM customers c JOIN consent_preferences cp ON c.customer_id = cp.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, cl.consent_date, cp.preference_type FROM customers c JOIN consent_logs cl ON c.customer_id = cl.customer_id JOIN consent_preferences cp ON c.customer_id = cp.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, cl.consent_action, cp.preference_type FROM customers c JOIN consent_logs cl ON c.customer_id = cl.customer_id JOIN consent_preferences cp ON c.customer_id = cp.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MIN(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(log_id) FROM customers c JOIN consent_logs cl ON c.customer_id = cl.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(consent_date) FROM customers c JOIN consent_logs cl ON c.customer_id = cl.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, preference_type, COUNT(preference_id) FROM customers c JOIN consent_preferences cp ON c.customer_id = cp.customer_id GROUP BY customer_name, preference_type;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, consent_logs.consent_date FROM customers INNER JOIN consent_logs ON customers.customer_id = consent_logs.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, consent_preferences.preference_type FROM customers LEFT JOIN consent_preferences ON customers.customer_id = consent_preferences.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_consent_logs FROM customers LEFT JOIN consent_logs ON customers.customer_id = consent_logs.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(consent_date) AS latest_consent_date FROM customers LEFT JOIN consent_logs ON customers.customer_id = consent_logs.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(preference_value) AS avg_preference_value FROM customers LEFT JOIN consent_preferences ON customers.customer_id = consent_preferences.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, consent_logs.consent_action, consent_preferences.preference_type FROM customers INNER JOIN consent_logs ON customers.customer_id = consent_logs.customer_id LEFT JOIN consent_preferences ON customers.customer_id = consent_preferences.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, preference_type FROM customers CROSS JOIN consent_preferences;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, consent_logs.consent_date, consent_preferences.preference_value FROM customers LEFT JOIN consent_logs ON customers.customer_id = consent_logs.customer_id LEFT JOIN consent_preferences ON customers.customer_id = consent_preferences.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT(customer_name) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(con.et_action) AS avg_consent_action FROM (SELECT customer_id, COUNT(*) AS et_action FROM consent_logs GROUP BY customer_id) AS con INNER JOIN customers ON customers.customer_id = con.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(preference_value) - MIN(preference_value) AS preference_value_range FROM customers LEFT JOIN consent_preferences ON customers.customer_id = consent_preferences.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, COUNT(*) AS total_logs FROM customers LEFT JOIN consent_logs ON customers.customer_id = consent_logs.customer_id GROUP BY customer_id, customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(DATEDIFF(now(), consent_date)) AS avg_days_since_consent FROM customers LEFT JOIN consent_logs ON customers.customer_id = consent_logs.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(IF(consent_action = 'Given', 1, 0)) AS total_given_consents, SUM(IF(consent_action = 'Withdrawn', 1, 0)) AS total_withdrawn_consents FROM customers LEFT JOIN consent_logs ON customers.customer_id = consent_logs.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, preference_type, SUM(preference_value) AS total_preference_value FROM customers LEFT JOIN consent_preferences ON customers.customer_id = consent_preferences.customer_id GROUP BY customer_name, preference_type;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(preference_value) AS avg_preference_value, COUNT(preference_type) AS total_preferences FROM customers LEFT JOIN consent_preferences ON customers.customer_id = consent_preferences.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(DISTINCT(preference_type)) AS total_unique_preferences FROM customers LEFT JOIN consent_preferences ON customers.customer_id = consent_preferences.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(preference_value) AS max_preference_value, MIN(preference_value) AS min_preference_value FROM customers LEFT JOIN consent_preferences ON customers.customer_id = consent_preferences.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, preference_type, preference_value FROM customers LEFT JOIN consent_preferences ON customers.customer_id = consent_preferences.customer_id WHERE preference_value LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT * FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT id, consent_given FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT * FROM consent_type;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT id, type_name FROM consent_type;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_consent;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT customer_id, consent_type_id, consent_date FROM customer_consent;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT * FROM consent_log;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT log_id, customer_id, action FROM consent_log;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT id, name, email, phone, consent_given FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT type_name FROM consent_type;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT customer_id, action FROM consent_log;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT id, name, email, phone, consent_given FROM customer WHERE consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT * FROM consent_log WHERE log_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT id, name, email, phone FROM customer WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT customer_id, consent_type_id FROM customer_consent WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT customer_id, consent_type_id FROM customer_consent WHERE consent_type_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_consent WHERE consent_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_consent ORDER BY consent_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM consent_log;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT name, email FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT name, email, phone FROM customer WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, t.type_name FROM customer c JOIN consent_type t ON c.id = t.id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, l.action FROM customer c JOIN consent_log l ON c.id = l.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, t.type_name, l.log_date FROM customer c JOIN consent_type t ON c.id = t.id JOIN consent_log l ON c.id = l.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, l.log_date FROM customer c JOIN consent_log l ON c.id = l.customer_id WHERE l.action = 'consent_given';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, l.log_date FROM customer c JOIN consent_log l ON c.id = l.customer_id WHERE l.log_date >= '2022-01-01' ORDER BY l.log_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(l.log_id) AS log_count FROM customer c JOIN consent_log l ON c.id = l.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, AVG(l.log_date) AS avg_log_date FROM customer c JOIN consent_log l ON c.id = l.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, MAX(l.log_date) AS latest_log_date FROM customer c JOIN consent_log l ON c.id = l.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, MIN(l.log_date) AS earliest_log_date FROM customer c JOIN consent_log l ON c.id = l.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(l.log_id) AS log_count FROM customer c JOIN consent_log l ON c.id = l.customer_id WHERE c.consent_given = TRUE GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, SUM(l.action = 'consent_given') AS consent_given_count FROM customer c JOIN consent_log l ON c.id = l.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, t.type_name, COUNT(c.id) AS consent_count FROM customer c JOIN consent_type t ON c.id = t.id JOIN customer_consent cc ON c.id = cc.customer_id WHERE cc.consent_date >= '2022-01-01' GROUP BY c.name, t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, t.type_name, COUNT(cc.consent_type_id) AS consent_count FROM customer c JOIN consent_type t ON c.id = t.id JOIN customer_consent cc ON c.id = cc.customer_id WHERE cc.consent_date >= '2022-01-01' GROUP BY c.name, t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, t.type_name, AVG(DATEDIFF(CURRENT_DATE, cc.consent_date)) AS avg_days_since_consent FROM customer c JOIN consent_type t ON c.id = t.id JOIN customer_consent cc ON c.id = cc.customer_id GROUP BY c.name, t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, t.type_name, MAX(DATEDIFF(CURRENT_DATE, cc.consent_date)) AS max_days_since_consent FROM customer c JOIN consent_type t ON c.id = t.id JOIN customer_consent cc ON c.id = cc.customer_id GROUP BY c.name, t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, t.type_name, MIN(DATEDIFF(CURRENT_DATE, cc.consent_date)) AS min_days_since_consent FROM customer c JOIN consent_type t ON c.id = t.id JOIN customer_consent cc ON c.id = cc.customer_id GROUP BY c.name, t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, t.type_name, AVG(DATEDIFF(cc.consent_date, l.log_date)) AS avg_days_between_consent_and_log FROM customer c JOIN consent_type t ON c.id = t.id JOIN customer_consent cc ON c.id = cc.customer_id JOIN consent_log l ON c.id = l.customer_id GROUP BY c.name, t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, t.type_name, MAX(DATEDIFF(cc.consent_date, l.log_date)) AS max_days_between_consent_and_log FROM customer c JOIN consent_type t ON c.id = t.id JOIN customer_consent cc ON c.id = cc.customer_id JOIN consent_log l ON c.id = l.customer_id GROUP BY c.name, t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nSELECT c.name, t.type_name, MIN(DATEDIFF(cc.consent_date, l.log_date)) AS min_days_between_consent_and_log FROM customer c JOIN consent_type t ON c.id = t.id JOIN customer_consent cc ON c.id = cc.customer_id JOIN consent_log l ON c.id = l.customer_id GROUP BY c.name, t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, phone_number FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM consent_type;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT consent_type_id, consent_description FROM consent_type;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, consent_type_id, consent_date FROM customer_consent;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT audit_id, customer_id, consent_type_id, action_performed, action_timestamp FROM consent_audit;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT log_id, audit_id, log_description, log_timestamp FROM audit_log;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ct.consent_description FROM customer c JOIN customer_consent cc ON c.customer_id = cc.customer_id JOIN consent_type ct ON cc.consent_type_id = ct.consent_type_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, cc.consent_date, ca.action_performed FROM customer c JOIN customer_consent cc ON c.customer_id = cc.customer_id JOIN consent_audit ca ON cc.customer_id = ca.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_timestamp, al.log_description FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id JOIN audit_log al ON ca.audit_id = al.audit_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, cc.consent_type_id, ct.consent_description FROM customer c JOIN customer_consent cc ON c.customer_id = cc.customer_id JOIN consent_type ct ON cc.consent_type_id = ct.consent_type_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, cc.consent_date, ca.action_timestamp FROM customer c JOIN customer_consent cc ON c.customer_id = cc.customer_id JOIN consent_audit ca ON cc.customer_id = ca.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT ct.consent_type_id, ct.consent_description, cc.consent_date, ca.action_timestamp FROM consent_type ct JOIN customer_consent cc ON ct.consent_type_id = cc.consent_type_id JOIN consent_audit ca ON cc.customer_id = ca.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT ca.action_performed, ca.action_timestamp, al.log_description, al.log_timestamp FROM consent_audit ca JOIN audit_log al ON ca.audit_id = al.audit_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, cc.consent_type_id, ct.consent_description, cc.consent_date FROM customer c JOIN customer_consent cc ON c.customer_id = cc.customer_id JOIN consent_type ct ON cc.consent_type_id = ct.consent_type_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.first_name, c.last_name, cc.consent_type_id, ct.consent_description, ca.action_performed, al.log_description FROM customer c JOIN customer_consent cc ON c.customer_id = cc.customer_id JOIN consent_type ct ON cc.consent_type_id = ct.consent_type_id JOIN consent_audit ca ON cc.customer_id = ca.customer_id JOIN audit_log al ON ca.audit_id = al.audit_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customer WHERE consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customer WHERE first_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customer WHERE phone_number LIKE '%1234%';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customer WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customer WHERE consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ct.consent_description FROM customer c JOIN customer_consent cc ON c.customer_id = cc.customer_id JOIN consent_type ct ON cc.consent_type_id = ct.consent_type_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_performed, ca.action_timestamp FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT ca.action_performed, ca.action_timestamp, al.log_description FROM consent_audit ca JOIN audit_log al ON ca.audit_id = al.audit_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_performed, al.log_description FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id JOIN audit_log al ON ca.audit_id = al.audit_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_performed, al.log_timestamp FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id JOIN audit_log al ON ca.audit_id = al.audit_id WHERE al.log_timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_performed, ca.action_timestamp FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id WHERE ca.action_timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT ct.consent_description, COUNT(cc.consent_type_id) AS consent_count FROM consent_type ct JOIN customer_consent cc ON ct.consent_type_id = cc.consent_type_id GROUP BY ct.consent_description;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email, phone_number, CASE WHEN consent_given THEN 'Yes' ELSE 'No' END AS consent_status FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ct.consent_description, ca.action_performed, al.log_description FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id JOIN audit_log al ON ca.audit_id = al.audit_id JOIN customer_consent cc ON c.customer_id = cc.customer_id JOIN consent_type ct ON cc.consent_type_id = ct.consent_type_id;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT ct.consent_description, AVG(DATEDIFF(ca.action_timestamp, cc.consent_date)) AS avg_days_to_action FROM consent_type ct JOIN customer_consent cc ON ct.consent_type_id = cc.consent_type_id JOIN consent_audit ca ON cc.customer_id = ca.customer_id GROUP BY ct.consent_description;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_performed FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id WHERE ca.action_performed LIKE '%updated%';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_timestamp FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id WHERE ca.action_timestamp::date = current_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_timestamp FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id WHERE extract(month from ca.action_timestamp) = extract(month from current_date);",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_timestamp FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id WHERE extract(year from ca.action_timestamp) = extract(year from current_date);",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_timestamp FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id WHERE extract(day from ca.action_timestamp) = extract(day from current_date);",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_timestamp FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id WHERE extract(hour from ca.action_timestamp) = extract(hour from current_timestamp);",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_timestamp FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id WHERE extract(minute from ca.action_timestamp) = extract(minute from current_timestamp);",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, ca.action_timestamp FROM customer c JOIN consent_audit ca ON c.customer_id = ca.customer_id WHERE extract(second from ca.action_timestamp) = extract(second from current_timestamp);"
]