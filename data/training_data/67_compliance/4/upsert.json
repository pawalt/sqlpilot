[
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (1, 'Alice', TRUE, '2021-08-10') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (2, 'Bob', TRUE, '2021-08-11') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (3, 'Charlie', FALSE, '2021-08-12') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (4, 'David', FALSE, '2021-08-13') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (5, 'Eve', TRUE, '2021-08-14') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (6, 'Frank', TRUE, '2021-08-15') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (7, 'Grace', FALSE, '2021-08-16') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (8, 'Henry', TRUE, '2021-08-17') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (9, 'Iris', FALSE, '2021-08-18') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (10, 'James', TRUE, '2021-08-19') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (11, 'Kate', FALSE, '2021-08-20') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (12, 'Liam', TRUE, '2021-08-21') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (13, 'Mia', FALSE, '2021-08-22') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (14, 'Noah', TRUE, '2021-08-23') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (15, 'Olivia', TRUE, '2021-08-24') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (16, 'Peter', FALSE, '2021-08-25') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (17, 'Quinn', TRUE, '2021-08-26') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (18, 'Ryan', FALSE, '2021-08-27') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (19, 'Sofia', TRUE, '2021-08-28') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (20, 'Tom', TRUE, '2021-08-29') ON CONFLICT (id) DO UPDATE SET customer_name = excluded.customer_name, consent_given = excluded.consent_given, consent_date = excluded.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (1, 'Alice', TRUE, '2022-01-01') ON CONFLICT (id) DO UPDATE SET customer_name = 'Alice', consent_given = TRUE, consent_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (2, 'Bob', FALSE, '2022-02-02') ON CONFLICT (id) DO UPDATE SET customer_name = 'Bob', consent_given = FALSE, consent_date = '2022-02-02';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (3, 'Charlie', TRUE, '2022-03-03') ON CONFLICT (id) DO UPDATE SET customer_name = 'Charlie', consent_given = TRUE, consent_date = '2022-03-03';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (4, 'David', FALSE, '2022-04-04') ON CONFLICT (id) DO UPDATE SET customer_name = 'David', consent_given = FALSE, consent_date = '2022-04-04';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (5, 'Eve', TRUE, '2022-05-05') ON CONFLICT (id) DO UPDATE SET customer_name = 'Eve', consent_given = TRUE, consent_date = '2022-05-05';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (6, 'Frank', FALSE, '2022-06-06') ON CONFLICT (id) DO UPDATE SET customer_name = 'Frank', consent_given = FALSE, consent_date = '2022-06-06';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (7, 'Grace', TRUE, '2022-07-07') ON CONFLICT (id) DO UPDATE SET customer_name = 'Grace', consent_given = TRUE, consent_date = '2022-07-07';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (8, 'Henry', FALSE, '2022-08-08') ON CONFLICT (id) DO UPDATE SET customer_name = 'Henry', consent_given = FALSE, consent_date = '2022-08-08';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (9, 'Ivy', TRUE, '2022-09-09') ON CONFLICT (id) DO UPDATE SET customer_name = 'Ivy', consent_given = TRUE, consent_date = '2022-09-09';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (10, 'Jack', FALSE, '2022-10-10') ON CONFLICT (id) DO UPDATE SET customer_name = 'Jack', consent_given = FALSE, consent_date = '2022-10-10';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (11, 'Kate', TRUE, '2022-11-11') ON CONFLICT (id) DO UPDATE SET customer_name = 'Kate', consent_given = TRUE, consent_date = '2022-11-11';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (12, 'Leo', FALSE, '2022-12-12') ON CONFLICT (id) DO UPDATE SET customer_name = 'Leo', consent_given = FALSE, consent_date = '2022-12-12';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (13, 'Marie', TRUE, '2022-01-13') ON CONFLICT (id) DO UPDATE SET customer_name = 'Marie', consent_given = TRUE, consent_date = '2022-01-13';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (14, 'Nick', FALSE, '2022-02-14') ON CONFLICT (id) DO UPDATE SET customer_name = 'Nick', consent_given = FALSE, consent_date = '2022-02-14';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (15, 'Olivia', TRUE, '2022-03-15') ON CONFLICT (id) DO UPDATE SET customer_name = 'Olivia', consent_given = TRUE, consent_date = '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (16, 'Paul', FALSE, '2022-04-16') ON CONFLICT (id) DO UPDATE SET customer_name = 'Paul', consent_given = FALSE, consent_date = '2022-04-16';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (17, 'Quinn', TRUE, '2022-05-17') ON CONFLICT (id) DO UPDATE SET customer_name = 'Quinn', consent_given = TRUE, consent_date = '2022-05-17';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (18, 'Ryan', FALSE, '2022-06-18') ON CONFLICT (id) DO UPDATE SET customer_name = 'Ryan', consent_given = FALSE, consent_date = '2022-06-18';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (19, 'Sarah', TRUE, '2022-07-19') ON CONFLICT (id) DO UPDATE SET customer_name = 'Sarah', consent_given = TRUE, consent_date = '2022-07-19';",
  "### TABLEDATA\n\nCREATE TABLE customer_consent_data (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  consent_given BOOLEAN,\n  consent_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO customer_consent_data (id, customer_name, consent_given, consent_date) VALUES (20, 'Tom', FALSE, '2022-08-20') ON CONFLICT (id) DO UPDATE SET customer_name = 'Tom', consent_given = FALSE, consent_date = '2022-08-20';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (1, 'Alice', 'alice@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (2, 'Bob', 'bob@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (3, 'Charlie', 'charlie@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (4, 'David', 'david@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (5, 'Eve', 'eve@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (6, 'Frank', 'frank@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (7, 'Grace', 'grace@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (8, 'Henry', 'henry@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (9, 'Ivy', 'ivy@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (10, 'John', 'john@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (11, 'Katie', 'katie@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (12, 'Liam', 'liam@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (13, 'Mary', 'mary@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (14, 'Nick', 'nick@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (15, 'Olivia', 'olivia@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (16, 'Peter', 'peter@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (17, 'Quinn', 'quinn@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (18, 'Rachel', 'rachel@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (19, 'Sam', 'sam@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (20, 'Tom', 'tom@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, consent_given = excluded.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (1, 'Alice', 'alice@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice', email = 'alice@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (2, 'Bob', 'bob@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob', email = 'bob@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (3, 'Charlie', 'charlie@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Charlie', email = 'charlie@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (4, 'David', 'david@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David', email = 'david@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (5, 'Eve', 'eve@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Eve', email = 'eve@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (6, 'Frank', 'frank@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Frank', email = 'frank@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (7, 'Grace', 'grace@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Grace', email = 'grace@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (8, 'Henry', 'henry@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Henry', email = 'henry@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (9, 'Ivy', 'ivy@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Ivy', email = 'ivy@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (10, 'Jack', 'jack@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jack', email = 'jack@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (11, 'Kate', 'kate@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Kate', email = 'kate@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (12, 'Liam', 'liam@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Liam', email = 'liam@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (13, 'Mia', 'mia@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mia', email = 'mia@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (14, 'Noah', 'noah@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Noah', email = 'noah@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (15, 'Olivia', 'olivia@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Olivia', email = 'olivia@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (16, 'Peter', 'peter@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Peter', email = 'peter@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (17, 'Rose', 'rose@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Rose', email = 'rose@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (18, 'Sam', 'sam@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sam', email = 'sam@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (19, 'Tom', 'tom@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Tom', email = 'tom@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   email VARCHAR(100) UNIQUE,\n   consent_given BOOLEAN\n);\n\n\nCREATE TABLE consent_logs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   consent_date DATE,\n   consent_type VARCHAR(50),\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (20, 'Violet', 'violet@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Violet', email = 'violet@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (1, 'John Doe', 'john.doe@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', email = 'john.doe@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (2, 'Jane Smith', 'jane.smith@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', email = 'jane.smith@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (3, 'Mary Johnson', 'mary.johnson@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mary Johnson', email = 'mary.johnson@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (4, 'James Brown', 'james.brown@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'James Brown', email = 'james.brown@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (5, 'Sarah Wilson', 'sarah.wilson@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sarah Wilson', email = 'sarah.wilson@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (6, 'Michael Lee', 'michael.lee@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Michael Lee', email = 'michael.lee@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (7, 'Emily Davis', 'emily.davis@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily Davis', email = 'emily.davis@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (8, 'Daniel Clark', 'daniel.clark@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Daniel Clark', email = 'daniel.clark@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (9, 'Laura Turner', 'laura.turner@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Laura Turner', email = 'laura.turner@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (10, 'Mark Roberts', 'mark.roberts@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mark Roberts', email = 'mark.roberts@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (11, 'Amy Harris', 'amy.harris@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Amy Harris', email = 'amy.harris@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (12, 'Jason White', 'jason.white@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jason White', email = 'jason.white@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (13, 'Nicole Martinez', 'nicole.martinez@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Nicole Martinez', email = 'nicole.martinez@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (14, 'Brian Adams', 'brian.adams@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Brian Adams', email = 'brian.adams@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (15, 'Rachel Campbell', 'rachel.campbell@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Rachel Campbell', email = 'rachel.campbell@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (16, 'Peter Murphy', 'peter.murphy@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Peter Murphy', email = 'peter.murphy@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (17, 'Jessica Baker', 'jessica.baker@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jessica Baker', email = 'jessica.baker@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (18, 'David Jackson', 'david.jackson@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David Jackson', email = 'david.jackson@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (19, 'Michelle Green', 'michelle.green@example.com', TRUE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Michelle Green', email = 'michelle.green@example.com', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (20, 'Kevin Brown', 'kevin.brown@example.com', FALSE) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Kevin Brown', email = 'kevin.brown@example.com', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (1, 'Alice', 'alice@example.com', true) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (2, 'Bob', 'bob@example.com', true) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob', email = 'bob@example.com', consent_given = true;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (3, 'Charlie', 'charlie@example.com', true) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (4, 'David', 'david@example.com', false) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David', email = 'david@example.com', consent_given = false;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (5, 'Eve', 'eve@example.com', true) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (6, 'Frank', 'frank@example.com', false) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Frank', email = 'frank@example.com', consent_given = false;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (7, 'Grace', 'grace@example.com', true) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (8, 'Harry', 'harry@example.com', true) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Harry', email = 'harry@example.com', consent_given = true;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (9, 'Ivy', 'ivy@example.com', false) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (10, 'Jack', 'jack@example.com', false) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jack', email = 'jack@example.com', consent_given = false;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (11, 'Kate', 'kate@example.com', true) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (12, 'Liam', 'liam@example.com', false) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Liam', email = 'liam@example.com', consent_given = false;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (13, 'Mary', 'mary@example.com', true) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (14, 'Nathan', 'nathan@example.com', true) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Nathan', email = 'nathan@example.com', consent_given = true;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (15, 'Olivia', 'olivia@example.com', false) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (16, 'Paul', 'paul@example.com', false) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Paul', email = 'paul@example.com', consent_given = false;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (17, 'Quinn', 'quinn@example.com', true) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (18, 'Rachel', 'rachel@example.com', true) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Rachel', email = 'rachel@example.com', consent_given = true;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (19, 'Sam', 'sam@example.com', false) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_logs (\n    log_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_date DATE,\n    consent_action VARCHAR(50)\n);\n\nCREATE TABLE consent_preferences (\n    preference_id INT PRIMARY KEY,\n    customer_id INT,\n    preference_type VARCHAR(50),\n    preference_value VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, consent_given) VALUES (20, 'Tom', 'tom@example.com', false) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Tom', email = 'tom@example.com', consent_given = false;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (1, 'John Doe', 'johndoe@example.com', '123456789', TRUE) ON CONFLICT (id) DO UPDATE SET name='John Doe', email='johndoe@example.com', phone='123456789', consent_given=TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_type (id, type_name) VALUES (1, 'Marketing') ON CONFLICT (id) DO UPDATE SET type_name='Marketing';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (1, 1, '2022-01-01 10:00:00') ON CONFLICT (customer_id,consent_type_id) DO UPDATE SET consent_date='2022-01-01 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (1, 1, 'Updated', '2022-01-01 10:00:00') ON CONFLICT (log_id) DO UPDATE SET customer_id=1, action='Updated', log_date='2022-01-01 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (2, 'Jane Smith', 'janesmith@example.com', '987654321', FALSE) ON CONFLICT (id) DO UPDATE SET name='Jane Smith', email='janesmith@example.com', phone='987654321', consent_given=FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_type (id, type_name) VALUES (2, 'Legal') ON CONFLICT (id) DO UPDATE SET type_name='Legal';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (2, 2, '2022-01-02 10:00:00') ON CONFLICT (customer_id,consent_type_id) DO UPDATE SET consent_date='2022-01-02 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (2, 2, 'Created', '2022-01-02 10:00:00') ON CONFLICT (log_id) DO UPDATE SET customer_id=2, action='Created', log_date='2022-01-02 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (3, 'Alice Brown', 'alicebrown@example.com', '555555555', TRUE) ON CONFLICT (id) DO UPDATE SET name='Alice Brown', email='alicebrown@example.com', phone='555555555', consent_given=TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_type (id, type_name) VALUES (3, 'Technical') ON CONFLICT (id) DO UPDATE SET type_name='Technical';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (3, 3, '2022-01-03 10:00:00') ON CONFLICT (customer_id,consent_type_id) DO UPDATE SET consent_date='2022-01-03 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (3, 3, 'Deleted', '2022-01-03 10:00:00') ON CONFLICT (log_id) DO UPDATE SET customer_id=3, action='Deleted', log_date='2022-01-03 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (4, 'Bob Johnson', 'bjohnson@example.com', '666666666', FALSE) ON CONFLICT (id) DO UPDATE SET name='Bob Johnson', email='bjohnson@example.com', phone='666666666', consent_given=FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_type (id, type_name) VALUES (4, 'Privacy') ON CONFLICT (id) DO UPDATE SET type_name='Privacy';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (4, 4, '2022-01-04 10:00:00') ON CONFLICT (customer_id,consent_type_id) DO UPDATE SET consent_date='2022-01-04 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (4, 4, 'Viewed', '2022-01-04 10:00:00') ON CONFLICT (log_id) DO UPDATE SET customer_id=4, action='Viewed', log_date='2022-01-04 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (5, 'Maria Garcia', 'mgarcia@example.com', '777777777', TRUE) ON CONFLICT (id) DO UPDATE SET name='Maria Garcia', email='mgarcia@example.com', phone='777777777', consent_given=TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_type (id, type_name) VALUES (5, 'Security') ON CONFLICT (id) DO UPDATE SET type_name='Security';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (5, 5, '2022-01-05 10:00:00') ON CONFLICT (customer_id,consent_type_id) DO UPDATE SET consent_date='2022-01-05 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (5, 5, 'Approved', '2022-01-05 10:00:00') ON CONFLICT (log_id) DO UPDATE SET customer_id=5, action='Approved', log_date='2022-01-05 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (1, 'John Doe', 'john.doe@example.com', '1234567890', TRUE) ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, email = EXCLUDED.email, phone = EXCLUDED.phone, consent_given = EXCLUDED.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (1, 1, NOW()) ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = EXCLUDED.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (1, 1, 'Consent Given', NOW()) ON CONFLICT (log_id) DO UPDATE SET action = EXCLUDED.action, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '9876543210', FALSE) ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, email = EXCLUDED.email, phone = EXCLUDED.phone, consent_given = EXCLUDED.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (2, 2, NOW()) ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = EXCLUDED.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (2, 2, 'Consent Updated', NOW()) ON CONFLICT (log_id) DO UPDATE SET action = EXCLUDED.action, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '4567890123', TRUE) ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, email = EXCLUDED.email, phone = EXCLUDED.phone, consent_given = EXCLUDED.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (3, 1, NOW()) ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = EXCLUDED.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (3, 3, 'Consent Given', NOW()) ON CONFLICT (log_id) DO UPDATE SET action = EXCLUDED.action, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (4, 'Bob Williams', 'bob.williams@example.com', '3456789012', FALSE) ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, email = EXCLUDED.email, phone = EXCLUDED.phone, consent_given = EXCLUDED.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (4, 2, NOW()) ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = EXCLUDED.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (4, 4, 'Consent Updated', NOW()) ON CONFLICT (log_id) DO UPDATE SET action = EXCLUDED.action, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (5, 'Emily Brown', 'emily.brown@example.com', '2345678901', TRUE) ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, email = EXCLUDED.email, phone = EXCLUDED.phone, consent_given = EXCLUDED.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (5, 1, NOW()) ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = EXCLUDED.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (5, 5, 'Consent Given', NOW()) ON CONFLICT (log_id) DO UPDATE SET action = EXCLUDED.action, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (6, 'Mike Davis', 'mike.davis@example.com', '1234567890', FALSE) ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, email = EXCLUDED.email, phone = EXCLUDED.phone, consent_given = EXCLUDED.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (6, 2, NOW()) ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = EXCLUDED.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (6, 6, 'Consent Updated', NOW()) ON CONFLICT (log_id) DO UPDATE SET action = EXCLUDED.action, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (7, 'Sarah Johnson', 'sarah.johnson@example.com', '2345678901', TRUE) ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, email = EXCLUDED.email, phone = EXCLUDED.phone, consent_given = EXCLUDED.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (7, 1, NOW()) ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = EXCLUDED.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (7, 7, 'Consent Given', NOW()) ON CONFLICT (log_id) DO UPDATE SET action = EXCLUDED.action, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (8, 'Tom Smith', 'tom.smith@example.com', '4567890123', FALSE) ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, email = EXCLUDED.email, phone = EXCLUDED.phone, consent_given = EXCLUDED.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (8, 2, NOW()) ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = EXCLUDED.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (8, 8, 'Consent Updated', NOW()) ON CONFLICT (log_id) DO UPDATE SET action = EXCLUDED.action, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (9, 'Anna Wilson', 'anna.wilson@example.com', '5678901234', TRUE) ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, email = EXCLUDED.email, phone = EXCLUDED.phone, consent_given = EXCLUDED.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (9, 1, NOW()) ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = EXCLUDED.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (9, 9, 'Consent Given', NOW()) ON CONFLICT (log_id) DO UPDATE SET action = EXCLUDED.action, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (id, name, email, phone, consent_given) VALUES (10, 'David Brown', 'david.brown@example.com', '6789012345', FALSE) ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, email = EXCLUDED.email, phone = EXCLUDED.phone, consent_given = EXCLUDED.consent_given;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (10, 2, NOW()) ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = EXCLUDED.consent_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone VARCHAR(20),\n  consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n  id INT PRIMARY KEY,\n  type_name VARCHAR(50)\n);\n\nCREATE TABLE customer_consent (\n  customer_id INT,\n  consent_type_id INT,\n  consent_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id),\n  FOREIGN KEY (consent_type_id) REFERENCES consent_type(id)\n);\n\nCREATE TABLE consent_log (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  action VARCHAR(20),\n  log_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customer(id)\n);\n\n### STATEMENT\n\nINSERT INTO consent_log (log_id, customer_id, action, log_date) VALUES (10, 10, 'Consent Updated', NOW()) ON CONFLICT (log_id) DO UPDATE SET action = EXCLUDED.action, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890', true) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890', consent_given = true;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (2, 'Jane', 'Smith', 'jane.smith@example.com', '987-654-3210', false) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', email = 'jane.smith@example.com', phone_number = '987-654-3210', consent_given = false;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (3, 'Alice', 'Johnson', 'alice.johnson@example.com', '555-123-4567', true) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Alice', last_name = 'Johnson', email = 'alice.johnson@example.com', phone_number = '555-123-4567', consent_given = true;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (4, 'Bob', 'Williams', 'bob.williams@example.com', '111-222-3333', false) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Bob', last_name = 'Williams', email = 'bob.williams@example.com', phone_number = '111-222-3333', consent_given = false;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (5, 'Emma', 'Brown', 'emma.brown@example.com', '333-555-7777', true) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Emma', last_name = 'Brown', email = 'emma.brown@example.com', phone_number = '333-555-7777', consent_given = true;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (6, 'David', 'Jones', 'david.jones@example.com', '999-888-7777', false) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'David', last_name = 'Jones', email = 'david.jones@example.com', phone_number = '999-888-7777', consent_given = false;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (7, 'Sarah', 'Davis', 'sarah.davis@example.com', '777-888-9999', true) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Sarah', last_name = 'Davis', email = 'sarah.davis@example.com', phone_number = '777-888-9999', consent_given = true;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (8, 'Michael', 'Evans', 'michael.evans@example.com', '222-333-4444', false) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Michael', last_name = 'Evans', email = 'michael.evans@example.com', phone_number = '222-333-4444', consent_given = false;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (9, 'Laura', 'Harris', 'laura.harris@example.com', '666-777-8888', true) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Laura', last_name = 'Harris', email = 'laura.harris@example.com', phone_number = '666-777-8888', consent_given = true;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (10, 'Kevin', 'Clark', 'kevin.clark@example.com', '444-666-9999', false) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Kevin', last_name = 'Clark', email = 'kevin.clark@example.com', phone_number = '444-666-9999', consent_given = false;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890', TRUE) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (1, 1, '2022-01-01') ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO consent_audit (audit_id, customer_id, consent_type_id, action_performed, action_timestamp) VALUES (1, 1, 1, 'Consent Given', '2022-01-01 08:00:00') ON CONFLICT (audit_id) DO UPDATE SET customer_id = 1, consent_type_id = 1, action_performed = 'Consent Given', action_timestamp = '2022-01-01 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_log (log_id, audit_id, log_description, log_timestamp) VALUES (1, 1, 'Log entry 1', '2022-01-01 08:00:00') ON CONFLICT (log_id) DO UPDATE SET audit_id = 1, log_description = 'Log entry 1', log_timestamp = '2022-01-01 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (2, 'Alice', 'Smith', 'alice.smith@example.com', '987-654-3210', TRUE) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Alice', last_name = 'Smith', email = 'alice.smith@example.com', phone_number = '987-654-3210', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (2, 2, '2022-01-02') ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO consent_audit (audit_id, customer_id, consent_type_id, action_performed, action_timestamp) VALUES (2, 2, 2, 'Consent Withdrawn', '2022-01-02 09:00:00') ON CONFLICT (audit_id) DO UPDATE SET customer_id = 2, consent_type_id = 2, action_performed = 'Consent Withdrawn', action_timestamp = '2022-01-02 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_log (log_id, audit_id, log_description, log_timestamp) VALUES (2, 2, 'Log entry 2', '2022-01-02 09:00:00') ON CONFLICT (log_id) DO UPDATE SET audit_id = 2, log_description = 'Log entry 2', log_timestamp = '2022-01-02 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (3, 'Bob', 'Johnson', 'bob.johnson@example.com', '555-123-7890', FALSE) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Bob', last_name = 'Johnson', email = 'bob.johnson@example.com', phone_number = '555-123-7890', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (3, 1, '2022-01-03') ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO consent_audit (audit_id, customer_id, consent_type_id, action_performed, action_timestamp) VALUES (3, 3, 1, 'Consent Given', '2022-01-03 10:00:00') ON CONFLICT (audit_id) DO UPDATE SET customer_id = 3, consent_type_id = 1, action_performed = 'Consent Given', action_timestamp = '2022-01-03 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_log (log_id, audit_id, log_description, log_timestamp) VALUES (3, 3, 'Log entry 3', '2022-01-03 10:00:00') ON CONFLICT (log_id) DO UPDATE SET audit_id = 3, log_description = 'Log entry 3', log_timestamp = '2022-01-03 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (4, 'Eve', 'Brown', 'eve.brown@example.com', '444-555-6666', TRUE) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Eve', last_name = 'Brown', email = 'eve.brown@example.com', phone_number = '444-555-6666', consent_given = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (4, 2, '2022-01-04') ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO consent_audit (audit_id, customer_id, consent_type_id, action_performed, action_timestamp) VALUES (4, 4, 2, 'Consent Withdrawn', '2022-01-04 11:00:00') ON CONFLICT (audit_id) DO UPDATE SET customer_id = 4, consent_type_id = 2, action_performed = 'Consent Withdrawn', action_timestamp = '2022-01-04 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_log (log_id, audit_id, log_description, log_timestamp) VALUES (4, 4, 'Log entry 4', '2022-01-04 11:00:00') ON CONFLICT (log_id) DO UPDATE SET audit_id = 4, log_description = 'Log entry 4', log_timestamp = '2022-01-04 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customer (customer_id, first_name, last_name, email, phone_number, consent_given) VALUES (5, 'Grace', 'Lee', 'grace.lee@example.com', '777-888-9999', FALSE) ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Grace', last_name = 'Lee', email = 'grace.lee@example.com', phone_number = '777-888-9999', consent_given = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_consent (customer_id, consent_type_id, consent_date) VALUES (5, 1, '2022-01-05') ON CONFLICT (customer_id, consent_type_id) DO UPDATE SET consent_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO consent_audit (audit_id, customer_id, consent_type_id, action_performed, action_timestamp) VALUES (5, 5, 1, 'Consent Given', '2022-01-05 12:00:00') ON CONFLICT (audit_id) DO UPDATE SET customer_id = 5, consent_type_id = 1, action_performed = 'Consent Given', action_timestamp = '2022-01-05 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    consent_given BOOLEAN\n);\n\nCREATE TABLE consent_type (\n    consent_type_id INT PRIMARY KEY,\n    consent_description VARCHAR(255)\n);\n\nCREATE TABLE customer_consent (\n    customer_id INT,\n    consent_type_id INT,\n    consent_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE consent_audit (\n    audit_id INT PRIMARY KEY,\n    customer_id INT,\n    consent_type_id INT,\n    action_performed VARCHAR(50),\n    action_timestamp TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),\n    FOREIGN KEY (consent_type_id) REFERENCES consent_type(consent_type_id)\n);\n\nCREATE TABLE audit_log (\n    log_id INT PRIMARY KEY,\n    audit_id INT,\n    log_description TEXT,\n    log_timestamp TIMESTAMP,\n    FOREIGN KEY (audit_id) REFERENCES consent_audit(audit_id)\n);\n\n### STATEMENT\n\nUPSERT INTO audit_log (log_id, audit_id, log_description, log_timestamp) VALUES (5, 5, 'Log entry 5', '2022-01-05 12:00:00') ON CONFLICT (log_id) DO UPDATE SET audit_id = 5, log_description = 'Log entry 5', log_timestamp = '2022-01-05 12:00:00';"
]