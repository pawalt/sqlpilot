[
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_name FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, policy_owner FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_description FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_procedures WHERE policy_owner='John Doe';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_procedures WHERE creation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(policy_id) FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(policy_id) FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(policy_id) FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, COUNT(*) FROM compliance_policies_procedures GROUP BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_owner, AVG(policy_id) FROM compliance_policies_procedures GROUP BY policy_owner;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DATE(creation_date) as date_created, COUNT(*) FROM compliance_policies_procedures GROUP BY date_created;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_name, policy_description FROM compliance_policies_procedures WHERE policy_owner LIKE '%Doe%';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_procedures ORDER BY policy_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(NOW(),creation_date)) as avg_age FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, policy_owner, creation_date FROM compliance_policies_procedures ORDER BY creation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_procedures WHERE policy_description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, YEAR(creation_date) as year_created FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_name, policy_owner, DATE_FORMAT(creation_date,'%Y-%m-%d') as formatted_date FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_name FROM compliance_policies_procedures WHERE policy_owner='John Doe';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies_procedures WHERE policy_owner='Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, creation_date FROM compliance_policies_procedures WHERE creation_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_procedures WHERE policy_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies_procedures WHERE policy_name LIKE '%security%';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_name FROM compliance_policies_procedures WHERE DATE(creation_date) = CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_policies FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(policy_id) AS average_policy_id FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_owner, COUNT(*) AS total_policies FROM compliance_policies_procedures GROUP BY policy_owner;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, CONCAT(policy_owner, ', ', policy_description) AS policy_details FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies_procedures ORDER BY creation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies_procedures LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_owner, COUNT(*) AS total_policies FROM compliance_policies_procedures WHERE policy_owner IS NOT NULL GROUP BY policy_owner HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, YEAR(creation_date) AS creation_year FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, policy_owner, DATE_FORMAT(creation_date, '%Y-%m-%d') AS formatted_date FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_owner, policy_description, DATEDIFF(CURDATE(), creation_date) AS days_diff FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_name, policy_owner, creation_date FROM compliance_policies_procedures WHERE policy_name REGEXP '^[A-Z]';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT(policy_owner) FROM compliance_policies_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_owner, COUNT(*) AS total_policies FROM compliance_policies_procedures WHERE policy_description IS NOT NULL GROUP BY policy_owner ORDER BY total_policies DESC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies_procedures WHERE CHAR_LENGTH(policy_description) > 100;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, date_created FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_description FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT procedure_name, date_created FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT procedure_id, procedure_steps FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, procedure_name FROM compliance_policies JOIN procedures ON compliance_policies.policy_id = procedures.procedure_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, procedure_name FROM compliance_policies JOIN procedures ON compliance_policies.date_created = procedures.date_created;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, procedure_name FROM compliance_policies JOIN procedures ON compliance_policies.policy_name = procedures.procedure_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(policy_id) FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(procedure_id) FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(policy_id) FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(procedure_id) FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT policy_name FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT procedure_name FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, COUNT(*) FROM compliance_policies GROUP BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT procedure_name, COUNT(*) FROM procedures GROUP BY procedure_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM procedures WHERE procedure_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, date_created FROM compliance_policies ORDER BY date_created DESC",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT procedure_name, procedure_steps FROM procedures WHERE date_created >= '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies WHERE policy_id = 100",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies JOIN procedures ON compliance_policies.policy_id = procedures.procedure_id",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM compliance_policies",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(date_created) FROM procedures",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(procedure_id) AS average_procedure_id FROM procedures",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT policy_name FROM compliance_policies",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies WHERE policy_description LIKE '%security%'",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, COUNT(*) AS num_procedures FROM compliance_policies JOIN procedures ON compliance_policies.policy_id = procedures.procedure_id GROUP BY policy_name",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT procedure_name, SUBSTR(procedure_steps, 1, 50) AS first_50_chars FROM procedures",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, DATEDIFF(NOW(), date_created) AS days_since_created FROM compliance_policies",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(procedure_id) AS average_procedure_id FROM procedures WHERE date_created >= '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, LENGTH(policy_description) AS description_length FROM compliance_policies",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT procedure_name, PROCEDURE steps AS procedure_steps_formatted FROM procedures",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, YEAR(date_created) AS created_year FROM compliance_policies",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies WHERE policy_name LIKE '%regulation%'",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies WHERE DATE(date_created) = '2021-05-15'",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nSELECT policy_name, procedure_name FROM compliance_policies CROSS JOIN procedures ORDER BY policy_name",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT procedure_id, procedure_name FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT procedure_name, procedure_description FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM policy_procedure_mapping;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT mapping_id, policy_id, procedure_id FROM policy_procedure_mapping;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_id, procedure_id FROM policy_procedure_mapping;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT cp.policy_name, p.procedure_name FROM compliance_policies cp JOIN policy_procedure_mapping ppm ON cp.policy_id = ppm.policy_id JOIN procedures p ON ppm.procedure_id = p.procedure_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT cp.policy_name, p.procedure_name FROM compliance_policies cp, policy_procedure_mapping ppm, procedures p WHERE cp.policy_id = ppm.policy_id AND ppm.procedure_id = p.procedure_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT cp.policy_name, p.procedure_name FROM compliance_policies cp INNER JOIN policy_procedure_mapping ppm ON cp.policy_id = ppm.policy_id INNER JOIN procedures p ON ppm.procedure_id = p.procedure_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT cp.policy_name, count(ppm.procedure_id) as procedures_count FROM compliance_policies cp LEFT JOIN policy_procedure_mapping ppm ON cp.policy_id = ppm.policy_id GROUP BY cp.policy_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM procedures WHERE procedure_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM policy_procedure_mapping WHERE mapping_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies WHERE policy_name = 'Example Policy';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM procedures WHERE procedure_name = 'Example Procedure';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM policy_procedure_mapping WHERE policy_id = 1 AND procedure_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies ORDER BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM procedures ORDER BY procedure_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT * FROM policy_procedure_mapping;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT procedure_name, procedure_description FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, procedure_name FROM compliance_policies cp JOIN policy_procedure_mapping ppm ON cp.policy_id = ppm.policy_id JOIN procedures p ON ppm.procedure_id = p.procedure_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, COUNT(procedure_id) AS total_procedures FROM compliance_policies cp JOIN policy_procedure_mapping ppm ON cp.policy_id = ppm.policy_id GROUP BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, AVG(procedure_id) AS avg_procedure_id FROM compliance_policies cp JOIN policy_procedure_mapping ppm ON cp.policy_id = ppm.policy_id GROUP BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, MAX(procedure_id) AS max_procedure_id FROM compliance_policies cp JOIN policy_procedure_mapping ppm ON cp.policy_id = ppm.policy_id GROUP BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, MIN(procedure_id) AS min_procedure_id FROM compliance_policies cp JOIN policy_procedure_mapping ppm ON cp.policy_id = ppm.policy_id GROUP BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description, procedure_name, procedure_description FROM compliance_policies cp JOIN policy_procedure_mapping ppm ON cp.policy_id = ppm.policy_id JOIN procedures p ON ppm.procedure_id = p.procedure_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT policy_name) AS total_policies FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT AVG(procedure_id) AS avg_procedure_id FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT MIN(policy_id) AS min_policy_id FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT MAX(procedure_id) AS max_procedure_id FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT AVG(policy_id + procedure_id) AS avg_policy_procedure_id FROM policy_procedure_mapping;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT policy_name FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, COUNT(procedure_id) AS total_procedures FROM compliance_policies cp LEFT JOIN policy_procedure_mapping ppm ON cp.policy_id = ppm.policy_id GROUP BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, procedure_name FROM compliance_policies cp LEFT JOIN policy_procedure_mapping ppm ON cp.policy_id = ppm.policy_id LEFT JOIN procedures p ON ppm.procedure_id = p.procedure_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, procedure_name FROM procedures p RIGHT JOIN policy_procedure_mapping ppm ON p.procedure_id = ppm.procedure_id RIGHT JOIN compliance_policies cp ON ppm.policy_id = cp.policy_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, procedure_name FROM procedures p FULL JOIN policy_procedure_mapping ppm ON p.procedure_id = ppm.procedure_id FULL JOIN compliance_policies cp ON ppm.policy_id = cp.policy_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_and_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies_and_procedures WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT standard_name, standard_description FROM industry_standards;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, standard_name FROM compliance_policies_and_procedures JOIN policy_links ON compliance_policies_and_procedures.policy_id = policy_links.policy_id JOIN industry_standards ON policy_links.standard_id = industry_standards.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM document_history WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, COUNT(*) AS total_links FROM compliance_policies_and_procedures JOIN policy_links ON compliance_policies_and_procedures.policy_id = policy_links.policy_id GROUP BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT MAX(date_modified) FROM document_history;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, document_name, date_modified FROM compliance_policies_and_procedures JOIN document_history ON compliance_policies_and_procedures.policy_id = document_history.policy_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM compliance_policies_and_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT AVG(policy_id) FROM compliance_policies_and_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT standard_name, COUNT(*) AS total_policies FROM industry_standards JOIN policy_links ON industry_standards.standard_id = policy_links.standard_id GROUP BY standard_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, date_modified FROM compliance_policies_and_procedures JOIN document_history ON compliance_policies_and_procedures.policy_id = document_history.policy_id WHERE date_modified > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies_and_procedures WHERE created_at > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT standard_name FROM industry_standards JOIN policy_links ON industry_standards.standard_id = policy_links.standard_id WHERE policy_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_and_procedures WHERE policy_name LIKE 'Data%';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT AVG(EXTRACT(YEAR FROM AGE(created_at))) AS avg_age FROM compliance_policies_and_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, COUNT(*) AS total_documents FROM compliance_policies_and_procedures JOIN document_history ON compliance_policies_and_procedures.policy_id = document_history.policy_id GROUP BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, COUNT(*) AS num_links FROM compliance_policies_and_procedures LEFT JOIN policy_links ON compliance_policies_and_procedures.policy_id = policy_links.policy_id GROUP BY policy_name HAVING COUNT(policy_links.policy_id) < 2;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, DATE_TRUNC('month', created_at) AS month_created FROM compliance_policies_and_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT standard_name, policy_name FROM industry_standards JOIN policy_links ON industry_standards.standard_id = policy_links.standard_id JOIN compliance_policies_and_procedures ON policy_links.policy_id = compliance_policies_and_procedures.policy_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_and_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name FROM compliance_policies_and_procedures WHERE created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT p.policy_name, s.standard_name FROM compliance_policies_and_procedures p JOIN policy_links pl ON p.policy_id = pl.policy_id JOIN industry_standards s ON pl.standard_id = s.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM industry_standards WHERE standard_description LIKE '%security%';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT p.policy_name, d.document_name FROM compliance_policies_and_procedures p LEFT JOIN document_history d ON p.policy_id = d.policy_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM compliance_policies_and_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT AVG(policy_id) FROM compliance_policies_and_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT MAX(policy_id) FROM compliance_policies_and_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT MIN(policy_id) FROM compliance_policies_and_procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, count(policy_id) AS policy_count FROM compliance_policies_and_procedures GROUP BY policy_name ORDER BY policy_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_and_procedures WHERE policy_id IN (SELECT policy_id FROM policy_links GROUP BY policy_id HAVING COUNT(policy_id) > 1);",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_and_procedures WHERE policy_id NOT IN (SELECT policy_id FROM policy_links);",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_and_procedures p WHERE NOT EXISTS (SELECT 1 FROM policy_links pl WHERE p.policy_id = pl.policy_id);",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies_and_procedures p WHERE EXISTS (SELECT 1 FROM policy_links pl WHERE p.policy_id = pl.policy_id);",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT MAX(date_modified) AS last_modified FROM document_history;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT p.policy_name, COUNT(d.document_id) AS num_documents FROM compliance_policies_and_procedures p LEFT JOIN document_history d ON p.policy_id = d.policy_id GROUP BY p.policy_name HAVING COUNT(d.document_id) > 0;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT p.policy_name, COUNT(d.document_id) AS num_documents FROM compliance_policies_and_procedures p LEFT JOIN document_history d ON p.policy_id = d.policy_id GROUP BY p.policy_name HAVING COUNT(d.document_id) = (SELECT MAX(total_documents) FROM (SELECT policy_id, COUNT(document_id) AS total_documents FROM document_history GROUP BY policy_id) AS subquery);",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT p.policy_name, d.document_name FROM compliance_policies_and_procedures p INNER JOIN document_history d ON p.policy_id = d.policy_id WHERE d.date_modified BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nSELECT p.policy_name, s.standard_name FROM compliance_policies_and_procedures p LEFT JOIN policy_links pl ON p.policy_id = pl.policy_id LEFT JOIN industry_standards s ON pl.standard_id = s.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT procedure_name, procedure_details FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM industry_standards;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT standard_name, standard_description FROM industry_standards;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM policy_mapping;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT policy_id, standard_id FROM policy_mapping;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM employee_compliance;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT employee_id, policy_id, status FROM employee_compliance;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description, compliance_level FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT procedure_name, procedure_details, policy_id FROM procedures;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT standard_name, standard_description FROM industry_standards;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT policy_id, standard_id FROM policy_mapping;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT employee_id, policy_id, status FROM employee_compliance;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies WHERE compliance_level='High';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT procedure_name, procedure_details FROM procedures WHERE policy_id=1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT standard_name, standard_description FROM industry_standards WHERE id=1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT policy_id, standard_id FROM policy_mapping WHERE policy_id=2;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT employee_id, policy_id, status FROM employee_compliance WHERE status='Active';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies WHERE compliance_level='High';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM compliance_policies WHERE id=1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM procedures p JOIN compliance_policies cp ON p.policy_id = cp.id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT ps.standard_name, cp.policy_name FROM policy_mapping pm JOIN industry_standards ps ON pm.standard_id = ps.id JOIN compliance_policies cp ON pm.policy_id = cp.id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT e.employee_id, cp.policy_name, ec.status FROM employee_compliance ec JOIN compliance_policies cp ON ec.policy_id = cp.id JOIN employees e ON ec.employee_id = e.id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT ps.standard_name, COUNT(*) FROM policy_mapping pm JOIN industry_standards ps ON pm.standard_id = ps.id GROUP BY ps.standard_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies WHERE policy_name LIKE '%security%';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM procedures WHERE procedure_details LIKE '%audit%';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_policies FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT AVG(employee_id) AS avg_employee_id FROM employee_compliance;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT MAX(id) AS max_standard_id FROM industry_standards;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT MIN(id) AS min_policy_id FROM compliance_policies;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT status FROM employee_compliance;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT ps.standard_name, MAX(cp.id) FROM policy_mapping pm JOIN industry_standards ps ON pm.standard_id = ps.id JOIN compliance_policies cp ON pm.policy_id = cp.id GROUP BY ps.standard_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT policy_id) FROM employee_compliance;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies WHERE compliance_level='Low' OR compliance_level='Medium';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM procedures WHERE policy_id IN (SELECT id FROM compliance_policies WHERE compliance_level='High');",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT e.employee_id, cp.policy_name, ec.status FROM employee_compliance ec JOIN compliance_policies cp ON ec.policy_id = cp.id JOIN employees e ON ec.employee_id = e.id WHERE ec.status='Active';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT ps.standard_name, cp.policy_name FROM policy_mapping pm JOIN industry_standards ps ON pm.standard_id = ps.id JOIN compliance_policies cp ON pm.policy_id = cp.id ORDER BY ps.standard_name ASC, cp.policy_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_policies WHERE id BETWEEN 1 AND 10;"
]