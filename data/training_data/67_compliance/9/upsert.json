[
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (1, 'Policy 1', 'Description for Policy 1', 'Owner 1', '2022-01-01') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 1 Updated', policy_description='Updated Description for Policy 1', policy_owner='Owner 1 Updated', creation_date='2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (2, 'Policy 2', 'Description for Policy 2', 'Owner 2', '2022-01-02') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 2 Updated', policy_description='Updated Description for Policy 2', policy_owner='Owner 2 Updated', creation_date='2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (3, 'Policy 3', 'Description for Policy 3', 'Owner 3', '2022-01-03') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 3 Updated', policy_description='Updated Description for Policy 3', policy_owner='Owner 3 Updated', creation_date='2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (4, 'Policy 4', 'Description for Policy 4', 'Owner 4', '2022-01-04') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 4 Updated', policy_description='Updated Description for Policy 4', policy_owner='Owner 4 Updated', creation_date='2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (5, 'Policy 5', 'Description for Policy 5', 'Owner 5', '2022-01-05') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 5 Updated', policy_description='Updated Description for Policy 5', policy_owner='Owner 5 Updated', creation_date='2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (6, 'Policy 6', 'Description for Policy 6', 'Owner 6', '2022-01-06') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 6 Updated', policy_description='Updated Description for Policy 6', policy_owner='Owner 6 Updated', creation_date='2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (7, 'Policy 7', 'Description for Policy 7', 'Owner 7', '2022-01-07') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 7 Updated', policy_description='Updated Description for Policy 7', policy_owner='Owner 7 Updated', creation_date='2022-01-07';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (8, 'Policy 8', 'Description for Policy 8', 'Owner 8', '2022-01-08') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 8 Updated', policy_description='Updated Description for Policy 8', policy_owner='Owner 8 Updated', creation_date='2022-01-08';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (9, 'Policy 9', 'Description for Policy 9', 'Owner 9', '2022-01-09') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 9 Updated', policy_description='Updated Description for Policy 9', policy_owner='Owner 9 Updated', creation_date='2022-01-09';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (10, 'Policy 10', 'Description for Policy 10', 'Owner 10', '2022-01-10') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 10 Updated', policy_description='Updated Description for Policy 10', policy_owner='Owner 10 Updated', creation_date='2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (11, 'Policy 11', 'Description for Policy 11', 'Owner 11', '2022-01-11') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 11 Updated', policy_description='Updated Description for Policy 11', policy_owner='Owner 11 Updated', creation_date='2022-01-11';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (12, 'Policy 12', 'Description for Policy 12', 'Owner 12', '2022-01-12') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 12 Updated', policy_description='Updated Description for Policy 12', policy_owner='Owner 12 Updated', creation_date='2022-01-12';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (13, 'Policy 13', 'Description for Policy 13', 'Owner 13', '2022-01-13') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 13 Updated', policy_description='Updated Description for Policy 13', policy_owner='Owner 13 Updated', creation_date='2022-01-13';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (14, 'Policy 14', 'Description for Policy 14', 'Owner 14', '2022-01-14') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 14 Updated', policy_description='Updated Description for Policy 14', policy_owner='Owner 14 Updated', creation_date='2022-01-14';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (15, 'Policy 15', 'Description for Policy 15', 'Owner 15', '2022-01-15') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 15 Updated', policy_description='Updated Description for Policy 15', policy_owner='Owner 15 Updated', creation_date='2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (16, 'Policy 16', 'Description for Policy 16', 'Owner 16', '2022-01-16') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 16 Updated', policy_description='Updated Description for Policy 16', policy_owner='Owner 16 Updated', creation_date='2022-01-16';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (17, 'Policy 17', 'Description for Policy 17', 'Owner 17', '2022-01-17') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 17 Updated', policy_description='Updated Description for Policy 17', policy_owner='Owner 17 Updated', creation_date='2022-01-17';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (18, 'Policy 18', 'Description for Policy 18', 'Owner 18', '2022-01-18') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 18 Updated', policy_description='Updated Description for Policy 18', policy_owner='Owner 18 Updated', creation_date='2022-01-18';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (19, 'Policy 19', 'Description for Policy 19', 'Owner 19', '2022-01-19') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 19 Updated', policy_description='Updated Description for Policy 19', policy_owner='Owner 19 Updated', creation_date='2022-01-19';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (20, 'Policy 20', 'Description for Policy 20', 'Owner 20', '2022-01-20') ON CONFLICT (policy_id) DO UPDATE SET policy_name='Policy 20 Updated', policy_description='Updated Description for Policy 20', policy_owner='Owner 20 Updated', creation_date='2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (1, 'Data Security Policy', 'Protecting sensitive data with encryption', 'John Doe', NOW()) ON DUPLICATE KEY UPDATE policy_description = 'Updated policy description';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (2, 'Access Control Policy', 'Restricting access to authorized users', 'Alice Smith', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Bob Johnson';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (3, 'Incident Response Policy', 'Handling security incidents swiftly', 'Emily Brown', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'David Wilson';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (4, 'Network Security Policy', 'Securing network infrastructure', 'Michael Lee', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Sarah Adams';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (5, 'Privacy Policy', 'Protecting user privacy and data', 'Alex Green', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Karen Moore';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (6, 'Security Awareness Training Policy', 'Educating employees on security best practices', 'Daniel White', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Jessica Brown';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (7, 'Data Retention Policy', 'Setting guidelines for data retention', 'Chris Davis', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Mark Taylor';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (8, 'BYOD Policy', 'Managing risks of Bring Your Own Device', 'Sophia Wilson', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Ryan Clark';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (9, 'Password Policy', 'Enforcing strong password practices', 'Grace Parker', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Laura Martinez';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (10, 'Incident Reporting Policy', 'Reporting security incidents', 'William Hall', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Samuel Jones';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (11, 'Vendor Management Policy', 'Managing third-party vendor relationships', 'Olivia King', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Ethan Adams';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (12, 'Physical Security Policy', 'Securing physical premises and assets', 'Nathan Young', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Lillian White';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (13, 'IT Change Management Policy', 'Process for managing IT changes', 'Ava Brown', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'James Martinez';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (14, 'Social Media Policy', 'Guidelines for social media usage', 'Tyler Roberts', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Sophie Evans';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (15, 'Training and Development Policy', 'Employee training and career development', 'Mason Clark', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Anna Davis';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (16, 'Disaster Recovery Policy', 'Plan for disaster recovery and business continuity', 'Elijah Adams', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Benjamin Young';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (17, 'Employee Code of Conduct Policy', 'Ethical guidelines for employees', 'Harper Martinez', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Chloe Johnson';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (18, 'Email Usage Policy', 'Rules for professional email communication', 'Logan Brown', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Luna Carter';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (19, 'Remote Work Policy', 'Guidance for remote work practices', 'Riley Smith', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Noah Evans';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_procedures (\n  policy_id INT PRIMARY KEY,\n  policy_name VARCHAR(255),\n  policy_description TEXT,\n  policy_owner VARCHAR(100),\n  creation_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO compliance_policies_procedures (policy_id, policy_name, policy_description, policy_owner, creation_date) VALUES (20, 'Business Continuity Policy', 'Ensuring business continuity in disruptions', 'Leo Martinez', NOW()) ON DUPLICATE KEY UPDATE policy_owner = 'Victoria White';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (1, 'Policy 1', '2022-01-01', 'Description 1') ON DUPLICATE KEY UPDATE policy_name = 'Policy 1', date_created = '2022-01-01', policy_description = 'Description 1';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (2, 'Policy 2', '2022-01-02', 'Description 2') ON DUPLICATE KEY UPDATE policy_name = 'Policy 2', date_created = '2022-01-02', policy_description = 'Description 2';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (3, 'Policy 3', '2022-01-03', 'Description 3') ON DUPLICATE KEY UPDATE policy_name = 'Policy 3', date_created = '2022-01-03', policy_description = 'Description 3';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (4, 'Policy 4', '2022-01-04', 'Description 4') ON DUPLICATE KEY UPDATE policy_name = 'Policy 4', date_created = '2022-01-04', policy_description = 'Description 4';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, polic...",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (1, 'Policy 1', '2022-01-01', 'Description for Policy 1') ON DUPLICATE KEY UPDATE policy_name = 'Policy 1 updated', date_created = '2022-01-01 updated', policy_description = 'Updated description for Policy 1';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (2, 'Policy 2', '2022-02-02', 'Description for Policy 2') ON DUPLICATE KEY UPDATE policy_name = 'Policy 2 updated', date_created = '2022-02-02 updated', policy_description = 'Updated description for Policy 2';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (3, 'Policy 3', '2022-03-03', 'Description for Policy 3') ON DUPLICATE KEY UPDATE policy_name = 'Policy 3 updated', date_created = '2022-03-03 updated', policy_description = 'Updated description for Policy 3';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (4, 'Policy 4', '2022-04-04', 'Description for Policy 4') ON DUPLICATE KEY UPDATE policy_name = 'Policy 4 updated', date_created = '2022-04-04 updated', policy_description = 'Updated description for Policy 4';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (5, 'Policy 5', '2022-05-05', 'Description for Policy 5') ON DUPLICATE KEY UPDATE policy_name = 'Policy 5 updated', date_created = '2022-05-05 updated', policy_description = 'Updated description for Policy 5';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (6, 'Policy 6', '2022-06-06', 'Description for Policy 6') ON DUPLICATE KEY UPDATE policy_name = 'Policy 6 updated', date_created = '2022-06-06 updated', policy_description = 'Updated description for Policy 6';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (7, 'Policy 7', '2022-07-07', 'Description for Policy 7') ON DUPLICATE KEY UPDATE policy_name = 'Policy 7 updated', date_created = '2022-07-07 updated', policy_description = 'Updated description for Policy 7';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (8, 'Policy 8', '2022-08-08', 'Description for Policy 8') ON DUPLICATE KEY UPDATE policy_name = 'Policy 8 updated', date_created = '2022-08-08 updated', policy_description = 'Updated description for Policy 8';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (9, 'Policy 9', '2022-09-09', 'Description for Policy 9') ON DUPLICATE KEY UPDATE policy_name = 'Policy 9 updated', date_created = '2022-09-09 updated', policy_description = 'Updated description for Policy 9';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (10, 'Policy 10', '2022-10-10', 'Description for Policy 10') ON DUPLICATE KEY UPDATE policy_name = 'Policy 10 updated', date_created = '2022-10-10 updated', policy_description = 'Updated description for Policy 10';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (11, 'Policy 11', '2022-11-11', 'Description for Policy 11') ON DUPLICATE KEY UPDATE policy_name = 'Policy 11 updated', date_created = '2022-11-11 updated', policy_description = 'Updated description for Policy 11';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (12, 'Policy 12', '2022-12-12', 'Description for Policy 12') ON DUPLICATE KEY UPDATE policy_name = 'Policy 12 updated', date_created = '2022-12-12 updated', policy_description = 'Updated description for Policy 12';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (13, 'Policy 13', '2023-01-01', 'Description for Policy 13') ON DUPLICATE KEY UPDATE policy_name = 'Policy 13 updated', date_created = '2023-01-01 updated', policy_description = 'Updated description for Policy 13';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (14, 'Policy 14', '2023-02-02', 'Description for Policy 14') ON DUPLICATE KEY UPDATE policy_name = 'Policy 14 updated', date_created = '2023-02-02 updated', policy_description = 'Updated description for Policy 14';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (15, 'Policy 15', '2023-03-03', 'Description for Policy 15') ON DUPLICATE KEY UPDATE policy_name = 'Policy 15 updated', date_created = '2023-03-03 updated', policy_description = 'Updated description for Policy 15';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (16, 'Policy 16', '2023-04-04', 'Description for Policy 16') ON DUPLICATE KEY UPDATE policy_name = 'Policy 16 updated', date_created = '2023-04-04 updated', policy_description = 'Updated description for Policy 16';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (17, 'Policy 17', '2023-05-05', 'Description for Policy 17') ON DUPLICATE KEY UPDATE policy_name = 'Policy 17 updated', date_created = '2023-05-05 updated', policy_description = 'Updated description for Policy 17';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (18, 'Policy 18', '2023-06-06', 'Description for Policy 18') ON DUPLICATE KEY UPDATE policy_name = 'Policy 18 updated', date_created = '2023-06-06 updated', policy_description = 'Updated description for Policy 18';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (19, 'Policy 19', '2023-07-07', 'Description for Policy 19') ON DUPLICATE KEY UPDATE policy_name = 'Policy 19 updated', date_created = '2023-07-07 updated', policy_description = 'Updated description for Policy 19';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    date_created DATE,\n    policy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n    procedure_id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    date_created DATE,\n    procedure_steps TEXT\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, date_created, policy_description) VALUES (20, 'Policy 20', '2023-08-08', 'Description for Policy 20') ON DUPLICATE KEY UPDATE policy_name = 'Policy 20 updated', date_created = '2023-08-08 updated', policy_description = 'Updated description for Policy 20';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (1, 'Policy 1', 'Description 1') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 1 Updated', policy_description = 'Description 1 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (2, 'Policy 2', 'Description 2') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 2 Updated', policy_description = 'Description 2 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (3, 'Policy 3', 'Description 3') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 3 Updated', policy_description = 'Description 3 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (4, 'Policy 4', 'Description 4') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 4 Updated', policy_description = 'Description 4 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (5, 'Policy 5', 'Description 5') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 5 Updated', policy_description = 'Description 5 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (6, 'Policy 6', 'Description 6') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 6 Updated', policy_description = 'Description 6 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (7, 'Policy 7', 'Description 7') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 7 Updated', policy_description = 'Description 7 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (8, 'Policy 8', 'Description 8') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 8 Updated', policy_description = 'Description 8 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (9, 'Policy 9', 'Description 9') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 9 Updated', policy_description = 'Description 9 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (10, 'Policy 10', 'Description 10') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 10 Updated', policy_description = 'Description 10 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (11, 'Policy 11', 'Description 11') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 11 Updated', policy_description = 'Description 11 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (12, 'Policy 12', 'Description 12') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 12 Updated', policy_description = 'Description 12 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (13, 'Policy 13', 'Description 13') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 13 Updated', policy_description = 'Description 13 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (14, 'Policy 14', 'Description 14') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 14 Updated', policy_description = 'Description 14 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (15, 'Policy 15', 'Description 15') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 15 Updated', policy_description = 'Description 15 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (16, 'Policy 16', 'Description 16') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 16 Updated', policy_description = 'Description 16 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (17, 'Policy 17', 'Description 17') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 17 Updated', policy_description = 'Description 17 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (18, 'Policy 18', 'Description 18') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 18 Updated', policy_description = 'Description 18 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (19, 'Policy 19', 'Description 19') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 19 Updated', policy_description = 'Description 19 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (20, 'Policy 20', 'Description 20') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 20 Updated', policy_description = 'Description 20 Updated';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (1, 'Policy 1', 'Description 1') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 1', policy_description = 'Updated Description 1';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO procedures (procedure_id, procedure_name, procedure_description) VALUES (1, 'Procedure 1', 'Procedure Description 1') ON CONFLICT (procedure_id) DO UPDATE SET procedure_name = 'Procedure 1', procedure_description = 'Updated Procedure Description 1';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_procedure_mapping (mapping_id, policy_id, procedure_id) VALUES (1, 1, 1) ON CONFLICT (mapping_id) DO UPDATE SET policy_id = 1, procedure_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (2, 'Policy 2', 'Description 2') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 2', policy_description = 'Updated Description 2';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO procedures (procedure_id, procedure_name, procedure_description) VALUES (2, 'Procedure 2', 'Procedure Description 2') ON CONFLICT (procedure_id) DO UPDATE SET procedure_name = 'Procedure 2', procedure_description = 'Updated Procedure Description 2';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_procedure_mapping (mapping_id, policy_id, procedure_id) VALUES (2, 2, 2) ON CONFLICT (mapping_id) DO UPDATE SET policy_id = 2, procedure_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (3, 'Policy 3', 'Description 3') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 3', policy_description = 'Updated Description 3';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO procedures (procedure_id, procedure_name, procedure_description) VALUES (3, 'Procedure 3', 'Procedure Description 3') ON CONFLICT (procedure_id) DO UPDATE SET procedure_name = 'Procedure 3', procedure_description = 'Updated Procedure Description 3';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_procedure_mapping (mapping_id, policy_id, procedure_id) VALUES (3, 3, 3) ON CONFLICT (mapping_id) DO UPDATE SET policy_id = 3, procedure_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (4, 'Policy 4', 'Description 4') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 4', policy_description = 'Updated Description 4';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO procedures (procedure_id, procedure_name, procedure_description) VALUES (4, 'Procedure 4', 'Procedure Description 4') ON CONFLICT (procedure_id) DO UPDATE SET procedure_name = 'Procedure 4', procedure_description = 'Updated Procedure Description 4';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_procedure_mapping (mapping_id, policy_id, procedure_id) VALUES (4, 4, 4) ON CONFLICT (mapping_id) DO UPDATE SET policy_id = 4, procedure_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (5, 'Policy 5', 'Description 5') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 5', policy_description = 'Updated Description 5';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO procedures (procedure_id, procedure_name, procedure_description) VALUES (5, 'Procedure 5', 'Procedure Description 5') ON CONFLICT (procedure_id) DO UPDATE SET procedure_name = 'Procedure 5', procedure_description = 'Updated Procedure Description 5';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_procedure_mapping (mapping_id, policy_id, procedure_id) VALUES (5, 5, 5) ON CONFLICT (mapping_id) DO UPDATE SET policy_id = 5, procedure_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (6, 'Policy 6', 'Description 6') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 6', policy_description = 'Updated Description 6';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO procedures (procedure_id, procedure_name, procedure_description) VALUES (6, 'Procedure 6', 'Procedure Description 6') ON CONFLICT (procedure_id) DO UPDATE SET procedure_name = 'Procedure 6', procedure_description = 'Updated Procedure Description 6';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_procedure_mapping (mapping_id, policy_id, procedure_id) VALUES (6, 6, 6) ON CONFLICT (mapping_id) DO UPDATE SET policy_id = 6, procedure_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (policy_id, policy_name, policy_description) VALUES (7, 'Policy 7', 'Description 7') ON CONFLICT (policy_id) DO UPDATE SET policy_name = 'Policy 7', policy_description = 'Updated Description 7';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO procedures (procedure_id, procedure_name, procedure_description) VALUES (7, 'Procedure 7', 'Procedure Description 7') ON CONFLICT (procedure_id) DO UPDATE SET procedure_name = 'Procedure 7', procedure_description = 'Updated Procedure Description 7';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n\tpolicy_id INT PRIMARY KEY,\n\tpolicy_name VARCHAR(255) NOT NULL,\n\tpolicy_description TEXT\n);\n\n\nCREATE TABLE procedures (\n\tprocedure_id INT PRIMARY KEY,\n\tprocedure_name VARCHAR(255) NOT NULL,\n\tprocedure_description TEXT\n);\n\n\nCREATE TABLE policy_procedure_mapping (\n\tmapping_id INT PRIMARY KEY,\n\tpolicy_id INT,\n\tprocedure_id INT,\n\tFOREIGN KEY (policy_id) REFERENCES compliance_policies(policy_id),\n\tFOREIGN KEY (procedure_id) REFERENCES procedures(procedure_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_procedure_mapping (mapping_id, policy_id, procedure_id) VALUES (7, 7, 7) ON CONFLICT (mapping_id) DO UPDATE SET policy_id = 7, procedure_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies_and_procedures (policy_name, policy_description, created_at) VALUES ('Policy 1', 'Description of Policy 1', '2022-10-01 08:00:00') ON CONFLICT (policy_id) DO UPDATE SET policy_name = EXCLUDED.policy_name, policy_description = EXCLUDED.policy_description, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO industry_standards (standard_name, standard_description) VALUES ('Standard 1', 'Description of Standard 1') ON CONFLICT (standard_id) DO UPDATE SET standard_name = EXCLUDED.standard_name, standard_description = EXCLUDED.standard_description;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_links (policy_id, standard_id) VALUES (1, 1) ON CONFLICT (link_id) DO UPDATE SET policy_id = EXCLUDED.policy_id, standard_id = EXCLUDED.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO document_history (document_name, policy_id, date_modified) VALUES ('Document 1', 1, '2022-10-01 09:00:00') ON CONFLICT (document_id) DO UPDATE SET document_name = EXCLUDED.document_name, policy_id = EXCLUDED.policy_id, date_modified = EXCLUDED.date_modified;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies_and_procedures (policy_name, policy_description, created_at) VALUES ('Policy 2', 'Description of Policy 2', '2022-10-02 08:00:00') ON CONFLICT (policy_id) DO UPDATE SET policy_name = EXCLUDED.policy_name, policy_description = EXCLUDED.policy_description, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO industry_standards (standard_name, standard_description) VALUES ('Standard 2', 'Description of Standard 2') ON CONFLICT (standard_id) DO UPDATE SET standard_name = EXCLUDED.standard_name, standard_description = EXCLUDED.standard_description;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_links (policy_id, standard_id) VALUES (2, 2) ON CONFLICT (link_id) DO UPDATE SET policy_id = EXCLUDED.policy_id, standard_id = EXCLUDED.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO document_history (document_name, policy_id, date_modified) VALUES ('Document 2', 2, '2022-10-02 09:00:00') ON CONFLICT (document_id) DO UPDATE SET document_name = EXCLUDED.document_name, policy_id = EXCLUDED.policy_id, date_modified = EXCLUDED.date_modified;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies_and_procedures (policy_name, policy_description, created_at) VALUES ('Policy 3', 'Description of Policy 3', '2022-10-03 08:00:00') ON CONFLICT (policy_id) DO UPDATE SET policy_name = EXCLUDED.policy_name, policy_description = EXCLUDED.policy_description, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO industry_standards (standard_name, standard_description) VALUES ('Standard 3', 'Description of Standard 3') ON CONFLICT (standard_id) DO UPDATE SET standard_name = EXCLUDED.standard_name, standard_description = EXCLUDED.standard_description;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_links (policy_id, standard_id) VALUES (3, 3) ON CONFLICT (link_id) DO UPDATE SET policy_id = EXCLUDED.policy_id, standard_id = EXCLUDED.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO document_history (document_name, policy_id, date_modified) VALUES ('Document 3', 3, '2022-10-03 09:00:00') ON CONFLICT (document_id) DO UPDATE SET document_name = EXCLUDED.document_name, policy_id = EXCLUDED.policy_id, date_modified = EXCLUDED.date_modified;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies_and_procedures (policy_name, policy_description, created_at) VALUES ('Policy 4', 'Description of Policy 4', '2022-10-04 08:00:00') ON CONFLICT (policy_id) DO UPDATE SET policy_name = EXCLUDED.policy_name, policy_description = EXCLUDED.policy_description, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO industry_standards (standard_name, standard_description) VALUES ('Standard 4', 'Description of Standard 4') ON CONFLICT (standard_id) DO UPDATE SET standard_name = EXCLUDED.standard_name, standard_description = EXCLUDED.standard_description;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_links (policy_id, standard_id) VALUES (4, 4) ON CONFLICT (link_id) DO UPDATE SET policy_id = EXCLUDED.policy_id, standard_id = EXCLUDED.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO document_history (document_name, policy_id, date_modified) VALUES ('Document 4', 4, '2022-10-04 09:00:00') ON CONFLICT (document_id) DO UPDATE SET document_name = EXCLUDED.document_name, policy_id = EXCLUDED.policy_id, date_modified = EXCLUDED.date_modified;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies_and_procedures (policy_name, policy_description, created_at) VALUES ('Policy 5', 'Description of Policy 5', '2022-10-05 08:00:00') ON CONFLICT (policy_id) DO UPDATE SET policy_name = EXCLUDED.policy_name, policy_description = EXCLUDED.policy_description, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO industry_standards (standard_name, standard_description) VALUES ('Standard 5', 'Description of Standard 5') ON CONFLICT (standard_id) DO UPDATE SET standard_name = EXCLUDED.standard_name, standard_description = EXCLUDED.standard_description;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_links (policy_id, standard_id) VALUES (5, 5) ON CONFLICT (link_id) DO UPDATE SET policy_id = EXCLUDED.policy_id, standard_id = EXCLUDED.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO document_history (document_name, policy_id, date_modified) VALUES ('Document 5', 5, '2022-10-05 09:00:00') ON CONFLICT (document_id) DO UPDATE SET document_name = EXCLUDED.document_name, policy_id = EXCLUDED.policy_id, date_modified = EXCLUDED.date_modified;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies_and_procedures (policy_name, policy_description, created_at) VALUES ('Policy 1', 'Description of Policy 1', NOW()) ON CONFLICT (policy_name) DO UPDATE SET policy_description = EXCLUDED.policy_description, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO industry_standards (standard_name, standard_description) VALUES ('Standard 1', 'Description of Standard 1') ON CONFLICT (standard_name) DO UPDATE SET standard_description = EXCLUDED.standard_description;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_links (policy_id, standard_id) VALUES (1, 1) ON CONFLICT (policy_id, standard_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO document_history (document_name, policy_id, date_modified) VALUES ('Document 1', 1, NOW()) ON CONFLICT (document_name) DO UPDATE SET policy_id = EXCLUDED.policy_id, date_modified = EXCLUDED.date_modified;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies_and_procedures (policy_name, policy_description, created_at) VALUES ('Policy 2', 'Description of Policy 2', NOW()) ON CONFLICT (policy_name) DO UPDATE SET policy_description = EXCLUDED.policy_description, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO industry_standards (standard_name, standard_description) VALUES ('Standard 2', 'Description of Standard 2') ON CONFLICT (standard_name) DO UPDATE SET standard_description = EXCLUDED.standard_description;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_links (policy_id, standard_id) VALUES (2, 2) ON CONFLICT (policy_id, standard_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO document_history (document_name, policy_id, date_modified) VALUES ('Document 2', 2, NOW()) ON CONFLICT (document_name) DO UPDATE SET policy_id = EXCLUDED.policy_id, date_modified = EXCLUDED.date_modified;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies_and_procedures (policy_name, policy_description, created_at) VALUES ('Policy 3', 'Description of Policy 3', NOW()) ON CONFLICT (policy_name) DO UPDATE SET policy_description = EXCLUDED.policy_description, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO industry_standards (standard_name, standard_description) VALUES ('Standard 3', 'Description of Standard 3') ON CONFLICT (standard_name) DO UPDATE SET standard_description = EXCLUDED.standard_description;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_links (policy_id, standard_id) VALUES (3, 3) ON CONFLICT (policy_id, standard_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO document_history (document_name, policy_id, date_modified) VALUES ('Document 3', 3, NOW()) ON CONFLICT (document_name) DO UPDATE SET policy_id = EXCLUDED.policy_id, date_modified = EXCLUDED.date_modified;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies_and_procedures (policy_name, policy_description, created_at) VALUES ('Policy 4', 'Description of Policy 4', NOW()) ON CONFLICT (policy_name) DO UPDATE SET policy_description = EXCLUDED.policy_description, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO industry_standards (standard_name, standard_description) VALUES ('Standard 4', 'Description of Standard 4') ON CONFLICT (standard_name) DO UPDATE SET standard_description = EXCLUDED.standard_description;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_links (policy_id, standard_id) VALUES (4, 4) ON CONFLICT (policy_id, standard_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO document_history (document_name, policy_id, date_modified) VALUES ('Document 4', 4, NOW()) ON CONFLICT (document_name) DO UPDATE SET policy_id = EXCLUDED.policy_id, date_modified = EXCLUDED.date_modified;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies_and_procedures (policy_name, policy_description, created_at) VALUES ('Policy 5', 'Description of Policy 5', NOW()) ON CONFLICT (policy_name) DO UPDATE SET policy_description = EXCLUDED.policy_description, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO industry_standards (standard_name, standard_description) VALUES ('Standard 5', 'Description of Standard 5') ON CONFLICT (standard_name) DO UPDATE SET standard_description = EXCLUDED.standard_description;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_links (policy_id, standard_id) VALUES (5, 5) ON CONFLICT (policy_id, standard_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO document_history (document_name, policy_id, date_modified) VALUES ('Document 5', 5, NOW()) ON CONFLICT (document_name) DO UPDATE SET policy_id = EXCLUDED.policy_id, date_modified = EXCLUDED.date_modified;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies_and_procedures (policy_name, policy_description, created_at) VALUES ('Policy 6', 'Description of Policy 6', NOW()) ON CONFLICT (policy_name) DO UPDATE SET policy_description = EXCLUDED.policy_description, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO industry_standards (standard_name, standard_description) VALUES ('Standard 6', 'Description of Standard 6') ON CONFLICT (standard_name) DO UPDATE SET standard_description = EXCLUDED.standard_description;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_links (policy_id, standard_id) VALUES (6, 6) ON CONFLICT (policy_id, standard_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies_and_procedures (\n    policy_id SERIAL PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE industry_standards (\n    standard_id SERIAL PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL,\n    standard_description TEXT NOT NULL\n);\n\nCREATE TABLE policy_links (\n    link_id SERIAL PRIMARY KEY,\n    policy_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(standard_id)\n);\n\nCREATE TABLE document_history (\n    document_id SERIAL PRIMARY KEY,\n    document_name VARCHAR(255) NOT NULL,\n    policy_id INT NOT NULL,\n    date_modified TIMESTAMP NOT NULL,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies_and_procedures(policy_id)\n);\n\n### STATEMENT\n\nINSERT INTO document_history (document_name, policy_id, date_modified) VALUES ('Document 6', 6, NOW()) ON CONFLICT (document_name) DO UPDATE SET policy_id = EXCLUDED.policy_id, date_modified = EXCLUDED.date_modified;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_policies (id, policy_name, policy_description, compliance_level) VALUES (1, 'Policy 1', 'Description 1', 'Level A') ON CONFLICT (id) DO UPDATE SET policy_name = 'Updated Policy 1', policy_description = 'Updated Description 1', compliance_level = 'Updated Level A';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nUPSERT INTO compliance_policies (id, policy_name, policy_description, compliance_level) VALUES (2, 'Policy 2', 'Description 2', 'Level B') ON CONFLICT (id) DO UPDATE SET policy_name = 'Updated Policy 2', policy_description = 'Updated Description 2', compliance_level = 'Updated Level B';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nUPSERT INTO procedures (id, procedure_name, procedure_details, policy_id) VALUES (1, 'Procedure 1', 'Details 1', 1) ON CONFLICT (id) DO UPDATE SET procedure_name = 'Updated Procedure 1', procedure_details = 'Updated Details 1', policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nUPSERT INTO procedures (id, procedure_name, procedure_details, policy_id) VALUES (2, 'Procedure 2', 'Details 2', 2) ON CONFLICT (id) DO UPDATE SET procedure_name = 'Updated Procedure 2', procedure_details = 'Updated Details 2', policy_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nUPSERT INTO industry_standards (id, standard_name, standard_description) VALUES (1, 'Standard 1', 'Description 1') ON CONFLICT (id) DO UPDATE SET standard_name = 'Updated Standard 1', standard_description = 'Updated Description 1';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nUPSERT INTO industry_standards (id, standard_name, standard_description) VALUES (2, 'Standard 2', 'Description 2') ON CONFLICT (id) DO UPDATE SET standard_name = 'Updated Standard 2', standard_description = 'Updated Description 2';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nUPSERT INTO policy_mapping (id, policy_id, standard_id) VALUES (1, 1, 1) ON CONFLICT (id) DO UPDATE SET policy_id = 1, standard_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nUPSERT INTO policy_mapping (id, policy_id, standard_id) VALUES (2, 2, 2) ON CONFLICT (id) DO UPDATE SET policy_id = 2, standard_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nUPSERT INTO employee_compliance (id, employee_id, policy_id, status) VALUES (1, 1, 1, 'Active') ON CONFLICT (id) DO UPDATE SET employee_id = 1, policy_id = 1, status = 'Inactive';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nUPSERT INTO employee_compliance (id, employee_id, policy_id, status) VALUES (2, 2, 2, 'Inactive') ON CONFLICT (id) DO UPDATE SET employee_id = 2, policy_id = 2, status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nINSERT INTO compliance_policies (id, policy_name, policy_description, compliance_level) VALUES (1, 'Data Protection Policy', 'Policy for protecting sensitive data', 'High') ON DUPLICATE KEY UPDATE policy_description = 'Updated policy for protecting sensitive data';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nINSERT INTO procedures (id, procedure_name, procedure_details, policy_id) VALUES (1, 'Data Encryption Procedure', 'Procedure for encrypting data at rest and in transit', 1) ON DUPLICATE KEY UPDATE procedure_details = 'Updated procedure for encrypting data at rest and in transit';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nINSERT INTO industry_standards (id, standard_name, standard_description) VALUES (1, 'GDPR', 'General Data Protection Regulation') ON DUPLICATE KEY UPDATE standard_description = 'Updated General Data Protection Regulation';",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nINSERT INTO policy_mapping (id, policy_id, standard_id) VALUES (1, 1, 1) ON DUPLICATE KEY UPDATE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE compliance_policies (\n    id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    compliance_level VARCHAR(50)\n);\n\n\nCREATE TABLE procedures (\n    id INT PRIMARY KEY,\n    procedure_name VARCHAR(255),\n    procedure_details TEXT,\n    policy_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n\nCREATE TABLE industry_standards (\n    id INT PRIMARY KEY,\n    standard_name VARCHAR(255),\n    standard_description TEXT\n);\n\n\nCREATE TABLE policy_mapping (\n    id INT PRIMARY KEY,\n    policy_id INT,\n    standard_id INT,\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id),\n    FOREIGN KEY (standard_id) REFERENCES industry_standards(id)\n);\n\n\nCREATE TABLE employee_compliance (\n    id INT PRIMARY KEY,\n    employee_id INT,\n    policy_id INT,\n    status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(id),\n    FOREIGN KEY (policy_id) REFERENCES compliance_policies(id)\n);\n\n### STATEMENT\n\nINSERT INTO employee_compliance (id, employee_id, policy_id, status) VALUES (1, 1, 1, 'Compliant') ON DUPLICATE KEY UPDATE status = 'Update Compliant';"
]