[
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (1, 'john_doe', 'password123', 'john.doe@example.com', 'admin', '2022-04-01 12:00:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (2, 'jane_smith', 'securepass321', 'jane.smith@example.com', 'user', '2022-04-02 10:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (3, 'alice_wonderland', 'wonderpass456', 'alice.wonderland@example.com', 'user', '2022-04-03 15:45:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (4, 'bob_marley', 'reggaepass789', 'bob.marley@example.com', 'user', '2022-04-04 08:20:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (5, 'cindy_jones', 'cindypass098', 'cindy.jones@example.com', 'user', '2022-04-05 17:10:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (6, 'peter_pan', 'neverland123', 'peter.pan@example.com', 'user', '2022-04-06 09:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (7, 'sarah_connor', 'terminator123', 'sarah.connor@example.com', 'user', '2022-04-07 13:45:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (8, 'michael_scott', 'theboss321', 'michael.scott@example.com', 'user', '2022-04-08 11:20:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (9, 'lucy_williams', 'lucypass555', 'lucy.williams@example.com', 'user', '2022-04-09 14:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (10, 'david_jackson', 'djacksonpass444', 'david.jackson@example.com', 'user', '2022-04-10 12:15:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (11, 'emily_smith', 'emilypass777', 'emily.smith@example.com', 'user', '2022-04-11 08:40:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (12, 'mark_johnson', 'mjpass123', 'mark.johnson@example.com', 'user', '2022-04-12 16:25:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (13, 'linda_wong', 'lindapass444', 'linda.wong@example.com', 'user', '2022-04-13 10:50:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (14, 'george_brown', 'gbrownpass123', 'george.brown@example.com', 'user', '2022-04-14 13:35:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (15, 'olivia_miller', 'omillerpass555', 'olivia.miller@example.com', 'user', '2022-04-15 15:15:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (16, 'ryan_smith', 'ryanspass999', 'ryan.smith@example.com', 'user', '2022-04-16 11:10:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (17, 'jessica_cole', 'jcolepass222', 'jessica.cole@example.com', 'user', '2022-04-17 12:45:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (18, 'alex_turner', 'turnerpass123', 'alex.turner@example.com', 'user', '2022-04-18 14:20:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (19, 'sophia_hall', 'sophiapass777', 'sophia.hall@example.com', 'user', '2022-04-19 09:55:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (20, 'nathan_lee', 'nathanpass321', 'nathan.lee@example.com', 'user', '2022-04-20 16:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (1, 'john_doe', 'password123', 'john.doe@example.com', 'admin', '2022-01-01 12:00:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (2, 'jane_smith', 'securepass', 'jane.smith@example.com', 'user', '2022-01-05 08:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (3, 'alice_wonderland', 'wonderland123', 'alice.wonderland@example.com', 'user', '2022-01-10 15:45:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (4, 'bob_marley', 'reggaeman', 'bob.marley@example.com', 'user', '2022-01-15 10:20:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (5, 'eve_jones', 'eve1234', 'eve.jones@example.com', 'user', '2022-01-20 17:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (6, 'admin1', 'adm!np@ss', 'admin1@example.com', 'admin', '2022-01-25 10:15:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (7, 'user2', 'secureuser', 'user2@example.com', 'user', '2022-02-01 14:40:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (8, 'test_user', 'testpass', 'test.user@example.com', 'user', '2022-02-05 16:55:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (9, 'super_admin', 'superpass123', 'super.admin@example.com', 'admin', '2022-02-10 09:20:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (10, 'joanna_smith', 'password!@#', 'joanna.smith@example.com', 'user', '2022-02-15 10:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (11, 'tim_davis', 'davistime', 'tim.davis@example.com', 'user', '2022-02-20 11:45:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (12, 'sam_jackson', 'jackson5', 'sam.jackson@example.com', 'user', '2022-02-25 13:00:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (13, 'sara_miller', 'sara123', 'sara.miller@example.com', 'user', '2022-03-01 15:15:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (14, 'admin2', 'adminpass', 'admin2@example.com', 'admin', '2022-03-05 17:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (15, 'user3', 'password321', 'user3@example.com', 'user', '2022-03-10 10:25:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (16, 'superuser1', 'super!', 'superuser1@example.com', 'admin', '2022-03-15 14:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (17, 'michael_smith', 'smith123', 'michael.smith@example.com', 'user', '2022-03-20 16:45:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (18, 'julia_roberts', 'julia@123', 'julia.roberts@example.com', 'user', '2022-03-25 18:00:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (19, 'robert_johnson', 'robertpass', 'robert.johnson@example.com', 'user', '2022-03-30 09:35:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email, role, last_login) VALUES (20, 'admin3', 'adminadmin', 'admin3@example.com', 'admin', '2022-04-02 12:50:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (1, 'john_doe', 'password123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (2, 'jane_smith', 'qwerty456', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (3, 'bob_johnson', 'hello123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (4, 'sara_brown', 'secret789', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (5, 'mike_smith', 'letmein12', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (6, 'lisa_wilson', 'ilovecats', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (7, 'alex_green', 'password456', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (8, 'emily_grey', 'pass1234', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (9, 'peter_miller', 'sunsun123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (10, 'linda_jackson', 'abcd1234', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (11, 'sam_roberts', 'test123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (12, 'susan_white', 'passpass', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (13, 'tom_hill', 'password123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (14, 'jenny_clark', 'letmeinnow', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (15, 'matt_gray', 'secret321', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (16, 'carol_adams', 'abc12345', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (17, 'kevin_hall', 'hallpass', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (18, 'laura_davis', 'davispass', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (19, 'chris_thomas', 'pw123456', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (20, 'anna_cook', 'cooking321', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (1, 'john_doe', 'password123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (2, 'jane_doe', 'pass321word', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (3, 'alice_smith', 'securepwd', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (4, 'bob_jenkins', 'bobby123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (5, 'emily_white', 'pwd456', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (6, 'charlie_brown', 'brownie', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (7, 'sara_parker', 'parksara', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (8, 'david_james', 'dj567', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (9, 'lisa_richards', 'richlisa', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (10, 'mark_jackson', 'mjjackson', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (11, 'natalie_adams', 'nads123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (12, 'kevin_miller', 'km789', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (13, 'sophia_cooper', 'socoop1', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (14, 'michael_wilson', 'wilsonmike', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (15, 'natalie_green', 'green123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (16, 'sam_roberts', 'sammyr', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (17, 'linda_hall', 'hallinda', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (18, 'peter_adams', 'petera12', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (19, 'olivia_baker', 'olbak123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, user_role) VALUES (20, 'ryan_smith', 'rsmith98', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (1, 'john_doe', 'password123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (2, 'jane_smith', 'pass123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (3, 'bob_jones', 'secret', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (4, 'alice_brown', '12345', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (5, 'charlie_green', 'green123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (6, 'emily_white', 'abcde', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (7, 'sam_black', 'black456', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (8, 'olivia_red', 'redpass', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (9, 'max_gray', 'gray654', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (10, 'lily_purple', 'purpleabc', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (11, 'mike_orange', 'orange007', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (12, 'sara_pink', 'pinkpass', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (13, 'adam_yellow', 'yellow567', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (14, 'ella_brown', 'brown999', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (15, 'jack_green', 'greentree', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (16, 'mia_white', 'whitecloud', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (17, 'ryan_black', 'blackcat', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (18, 'ava_red', 'redrose', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (19, 'tom_gray', 'graywolf', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (20, 'sophia_purple', 'purpleiris', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (1, 'admin', 'admin123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (2, 'john_doe', 'johndoe123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (3, 'jane_smith', 'janesmith123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (4, 'bob_jackson', 'bobjackson123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (5, 'sarah_miller', 'sarahmiller123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (1, 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (2, 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (3, 2);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (4, 2);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (5, 2);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (6, 'mary_smith', 'marysmith123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (7, 'alex_jones', 'alexjones123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (8, 'emily_brown', 'emilybrown123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (9, 'mike_clark', 'mikeclark123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role) VALUES (10, 'lisa_wilson', 'lisawilson123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (3, 'manager');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (4, 'guest');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (6, 3);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (7, 3);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (8, 3);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (9, 3);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (10, 3);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, email, password) VALUES (1, 'john_doe', 'john.doe@example.com', 'password123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, email, password) VALUES (2, 'jane_smith', 'jane.smith@example.com', 'pass123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, email, password) VALUES (3, 'mike_jones', 'mike.jones@example.com', 'securepwd321')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (1, 'admin')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (2, 'user')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (3, 'manager')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, role_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, role_id) VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, role_id) VALUES (3, 3)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (1, 'read')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (2, 'write')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (3, 'delete')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, email, password) VALUES (4, 'jacob_brown', 'jacob.brown@example.com', 'secure123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, email, password) VALUES (5, 'emily_williams', 'emily.williams@example.com', 'password321')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, email, password) VALUES (6, 'sarah_clark', 'sarah.clark@example.com', 'pass456')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (4, 'guest')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (5, 'developer')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (6, 'analyst')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, role_id) VALUES (4, 4)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, role_id) VALUES (5, 5)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, email, password) VALUES (1, 'john_doe', 'john.doe@example.com', 'password123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, email, password) VALUES (2, 'jane_smith', 'jane.smith@example.com', 'securepass')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (1, 'admin')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (2, 'user')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, role_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, role_id) VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (1, 'read')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (2, 'write')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, email, password) VALUES (3, 'alice_green', 'alice.green@example.com', 'strongpassword')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, email, password) VALUES (4, 'bob_white', 'bob.white@example.com', 'p@ssw0rd')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (3, 'guest')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (4, 'manager')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, role_id) VALUES (3, 3)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, role_id) VALUES (4, 4)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (3, 'delete')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (4, 'update')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, email, password) VALUES (5, 'sam_brown', 'sam.brown@example.com', 'newpass123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, email, password) VALUES (6, 'emily_hall', 'emily.hall@example.com', 'password4321')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (5, 'editor')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (6, 'writer')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, role_id) VALUES (5, 5)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, role_id) VALUES (6, 6)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (5, 'create')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (6, 'approve')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (1, 'alice', 'password123');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (2, 'bob', 'password456');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (3, 'charlie', 'password789');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (1, 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (2, 'editor');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (3, 'viewer');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (3, 3);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (1, 'create');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (2, 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (3, 'update');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permissions (role_id, permission_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permissions (role_id, permission_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permissions (role_id, permission_id) VALUES (3, 3);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (4, 'david', 'password101');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (5, 'emily', 'password202');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (6, 'frank', 'password303');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (4, 'author');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (5, 'publisher');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (1, 'john_doe', 'password123');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (2, 'jane_smith', 'securepass456');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (1, 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (2, 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (1, 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (2, 'write');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permissions (role_id, permission_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permissions (role_id, permission_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (3, 'alice_jones', 'strongpass789');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (4, 'bob_smith', 'bobby123');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (3, 'manager');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (4, 'guest');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (3, 3);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (4, 4);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (3, 'delete');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO permissions (permission_id, permission_name) VALUES (4, 'update');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permissions (role_id, permission_id) VALUES (3, 3);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permissions (role_id, permission_id) VALUES (4, 4);"
]