[
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE users RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE users CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    password VARCHAR(50),\n    email VARCHAR(100),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users; TRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  user_role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE user_roles (\n  role_id INT PRIMARY KEY,\n  role_name VARCHAR(20) NOT NULL,\n  role_description TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nTRUNCATE TABLE roles;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nTRUNCATE TABLE roles;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY,\n username VARCHAR(50),\n password VARCHAR(50),\n role VARCHAR(20));\n\nCREATE TABLE roles (role_id INT PRIMARY KEY,\n role_name VARCHAR(50));\n\nCREATE TABLE user_roles (user_id INT,\n role_id INT,\n FOREIGN KEY (user_id) REFERENCES users(user_id),\n FOREIGN KEY (role_id) REFERENCES roles(role_id));\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    id INT,\n    role_id INT,\n    PRIMARY KEY (id, role_id),\n    FOREIGN KEY (id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE permissions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE role_permissions (\n    role_id INT,\n    permission_id INT,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE permissions;"
]