<t>CREATE TABLE augmented_reality (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    image_url VARCHAR(255)
);</t><stat>CREATE TABLE augmented_reality (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    image_url VARCHAR(255)
);</stat><divider><t>CREATE TABLE augmented_reality (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    image_url VARCHAR(255)
);</t><stat>create table augmented_reality (
    id int primary key,
    name varchar(50) not null,
    description text,
    image_url varchar(255)
);</stat><divider><t>CREATE TABLE ar_users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    created_at TIMESTAMP
);


CREATE TABLE ar_objects (
    object_id INT PRIMARY KEY,
    object_name VARCHAR(50) NOT NULL,
    object_type VARCHAR(50),
    description TEXT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES ar_users(user_id)
);
</t><stat>CREATE TABLE ar_users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE ar_users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    created_at TIMESTAMP
);


CREATE TABLE ar_objects (
    object_id INT PRIMARY KEY,
    object_name VARCHAR(50) NOT NULL,
    object_type VARCHAR(50),
    description TEXT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES ar_users(user_id)
);
</t><stat>create table ar_users (
    user_id int primary key,
    username varchar(50) not null,
    email varchar(100) unique,
    created_at timestamp
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id INT PRIMARY KEY,
    object_name VARCHAR(50) NOT NULL,
    object_type VARCHAR(50),
    description TEXT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES ar_users(user_id)
);


CREATE TABLE ar_users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE ar_users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id INT PRIMARY KEY,
    object_name VARCHAR(50) NOT NULL,
    object_type VARCHAR(50),
    description TEXT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES ar_users(user_id)
);


CREATE TABLE ar_users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    created_at TIMESTAMP
);
</t><stat>create table ar_users (
    user_id int primary key,
    username varchar(50) not null,
    email varchar(100) unique,
    created_at timestamp
);</stat><divider><t>CREATE TABLE ar_users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    created_at TIMESTAMP
);


CREATE TABLE ar_objects (
    object_id INT PRIMARY KEY,
    object_name VARCHAR(50) NOT NULL,
    object_type VARCHAR(50),
    description TEXT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES ar_users(user_id)
);
</t><stat>CREATE TABLE ar_objects (
    object_id INT PRIMARY KEY,
    object_name VARCHAR(50) NOT NULL,
    object_type VARCHAR(50),
    description TEXT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES ar_users(user_id)
);</stat><divider><t>CREATE TABLE ar_users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    created_at TIMESTAMP
);


CREATE TABLE ar_objects (
    object_id INT PRIMARY KEY,
    object_name VARCHAR(50) NOT NULL,
    object_type VARCHAR(50),
    description TEXT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES ar_users(user_id)
);
</t><stat>create table ar_objects (
    object_id int primary key,
    object_name varchar(50) not null,
    object_type varchar(50),
    description text,
    user_id int,
    foreign key (user_id) references ar_users(user_id)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id INT PRIMARY KEY,
    object_name VARCHAR(50) NOT NULL,
    object_type VARCHAR(50),
    description TEXT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES ar_users(user_id)
);


CREATE TABLE ar_users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE ar_objects (
    object_id INT PRIMARY KEY,
    object_name VARCHAR(50) NOT NULL,
    object_type VARCHAR(50),
    description TEXT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES ar_users(user_id)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id INT PRIMARY KEY,
    object_name VARCHAR(50) NOT NULL,
    object_type VARCHAR(50),
    description TEXT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES ar_users(user_id)
);


CREATE TABLE ar_users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    created_at TIMESTAMP
);
</t><stat>create table ar_objects (
    object_id int primary key,
    object_name varchar(50) not null,
    object_type varchar(50),
    description text,
    user_id int,
    foreign key (user_id) references ar_users(user_id)
);</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</t><stat>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</t><stat>create table users (
    id serial primary key,
    username varchar(50) not null,
    age int,
    location varchar(100)
);</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</t><stat>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</t><stat>create table users (
    id serial primary key,
    username varchar(50) not null,
    age int,
    location varchar(100)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</t><stat>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</t><stat>create table users (
    id serial primary key,
    username varchar(50) not null,
    age int,
    location varchar(100)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</t><stat>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</t><stat>create table users (
    id serial primary key,
    username varchar(50) not null,
    age int,
    location varchar(100)
);</stat><divider><t>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</t><stat>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</stat><divider><t>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</t><stat>create table users (
    id serial primary key,
    username varchar(50) not null,
    age int,
    location varchar(100)
);</stat><divider><t>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</t><stat>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</stat><divider><t>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</t><stat>create table users (
    id serial primary key,
    username varchar(50) not null,
    age int,
    location varchar(100)
);</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</t><stat>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</t><stat>create table ar_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    user_id int references users(id)
);</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</t><stat>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</t><stat>create table ar_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    user_id int references users(id)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</t><stat>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</t><stat>create table ar_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    user_id int references users(id)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</t><stat>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</t><stat>create table ar_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    user_id int references users(id)
);</stat><divider><t>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</t><stat>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</stat><divider><t>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</t><stat>create table ar_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    user_id int references users(id)
);</stat><divider><t>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</t><stat>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</stat><divider><t>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</t><stat>create table ar_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    user_id int references users(id)
);</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</t><stat>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</t><stat>create table ar_sessions (
    session_id serial primary key,
    session_name varchar(100) not null,
    start_time timestamp,
    end_time timestamp,
    user_id int references users(id),
    ar_object_id int references ar_objects(object_id)
);</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</t><stat>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</t><stat>create table ar_sessions (
    session_id serial primary key,
    session_name varchar(100) not null,
    start_time timestamp,
    end_time timestamp,
    user_id int references users(id),
    ar_object_id int references ar_objects(object_id)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</t><stat>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</t><stat>create table ar_sessions (
    session_id serial primary key,
    session_name varchar(100) not null,
    start_time timestamp,
    end_time timestamp,
    user_id int references users(id),
    ar_object_id int references ar_objects(object_id)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</t><stat>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</stat><divider><t>CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</t><stat>create table ar_sessions (
    session_id serial primary key,
    session_name varchar(100) not null,
    start_time timestamp,
    end_time timestamp,
    user_id int references users(id),
    ar_object_id int references ar_objects(object_id)
);</stat><divider><t>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</t><stat>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</stat><divider><t>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);</t><stat>create table ar_sessions (
    session_id serial primary key,
    session_name varchar(100) not null,
    start_time timestamp,
    end_time timestamp,
    user_id int references users(id),
    ar_object_id int references ar_objects(object_id)
);</stat><divider><t>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</t><stat>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);</stat><divider><t>CREATE TABLE ar_sessions (
    session_id SERIAL PRIMARY KEY,
    session_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    user_id INT REFERENCES users(id),
    ar_object_id INT REFERENCES ar_objects(object_id)
);

CREATE TABLE ar_objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    user_id INT REFERENCES users(id)
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    age INT,
    location VARCHAR(100)
);</t><stat>create table ar_sessions (
    session_id serial primary key,
    session_name varchar(100) not null,
    start_time timestamp,
    end_time timestamp,
    user_id int references users(id),
    ar_object_id int references ar_objects(object_id)
);</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, age INT, location VARCHAR(100) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table user_profile ( user_id int primary key, username varchar(50) not null, email varchar(100) not null, age int, location varchar(100) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name VARCHAR(50) NOT NULL, description VARCHAR(255), url VARCHAR(255) NOT NULL, category VARCHAR(50) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table ar_models ( model_id int primary key, model_name varchar(50) not null, description varchar(255), url varchar(255) not null, category varchar(50) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description VARCHAR(255), start_date DATE, end_date DATE, user_id INT, FOREIGN KEY (user_id) REFERENCES user_profile(user_id) )</stat><divider><t>CREATE TABLE ar_logs ( log_id INT PRIMARY KEY, timestamp TIMESTAMP NOT NULL, action STRING(50) NOT NULL, user_id INT REFERENCES user_profile(user_id), project_id INT REFERENCES ar_projects(project_id) )

CREATE TABLE ar_projects ( project_id INT PRIMARY KEY, project_name STRING(100) NOT NULL, description STRING(255), start_date DATE, end_date DATE, user_id INT REFERENCES user_profile(user_id) )

CREATE TABLE ar_models ( model_id INT PRIMARY KEY, model_name STRING(50) NOT NULL, description STRING(255), url STRING(255) NOT NULL, category STRING(50) )

CREATE TABLE user_profile ( user_id INT PRIMARY KEY, username STRING(50) NOT NULL, email STRING(100) NOT NULL, age INT, location STRING(100) )</t><stat>create table ar_projects ( project_id int primary key, project_name varchar(100) not null, description varchar(255), start_date date, end_date date, user_id int, foreign key (user_id) references user_profile(user_id) )</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_users (
    user_id serial primary key,
    username varchar(50) not null,
    email varchar(100) not null,
    age int,
    location varchar(100),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_events (
    event_id serial primary key,
    event_name varchar(100) not null,
    event_date date,
    event_location varchar(100),
    event_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_places (
    place_id serial primary key,
    place_name varchar(100) not null,
    address varchar(200),
    city varchar(50),
    country varchar(50),
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_objects (
    object_id serial primary key,
    object_name varchar(100) not null,
    object_type varchar(50),
    object_description text,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);</stat><divider><t>CREATE TABLE Augmented_Reality_Interactions (
    interaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Augmented_Reality_Users(user_id),
    object_id INT REFERENCES Augmented_Reality_Objects(object_id),
    interaction_type VARCHAR(50),
    interaction_timestamp TIMESTAMP,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Objects (
    object_id SERIAL PRIMARY KEY,
    object_name VARCHAR(100) NOT NULL,
    object_type VARCHAR(50),
    object_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Places (
    place_id SERIAL PRIMARY KEY,
    place_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    city VARCHAR(50),
    country VARCHAR(50),
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Events (
    event_id SERIAL PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    event_location VARCHAR(100),
    event_description TEXT,
    created_at TIMESTAMP
);


CREATE TABLE Augmented_Reality_Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    location VARCHAR(100),
    created_at TIMESTAMP
);
</t><stat>create table augmented_reality_interactions (
    interaction_id serial primary key,
    user_id int references augmented_reality_users(user_id),
    object_id int references augmented_reality_objects(object_id),
    interaction_type varchar(50),
    interaction_timestamp timestamp,
    created_at timestamp
);</stat>