[
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT appointment_id, provider_id, patient_id FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT appointment_id, appointment_date, appointment_time FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments WHERE provider_id = 'provider123';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments WHERE patient_id = 'patient456';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments WHERE appointment_date = '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments WHERE appointment_time BETWEEN '09:00:00' AND '12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_appointments FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT MAX(appointment_date) AS latest_appointment_date FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT MIN(appointment_date) AS earliest_appointment_date FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT AVG(DATE_PART('day', appointment_date)) AS avg_days_between_appointments FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT DISTINCT provider_id FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT DISTINCT patient_id FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments ORDER BY appointment_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments ORDER BY appointment_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments WHERE provider_id = 'provider123' AND patient_id = 'patient456';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments WHERE provider_id = 'provider123' OR patient_id = 'patient456';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments WHERE provider_id = 'provider123' AND appointment_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, COUNT(*) AS total_appointments FROM appointments GROUP BY provider_id;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments WHERE appointment_date > CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT appointment_id, provider_id, patient_id FROM appointments WHERE provider_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM appointments WHERE patient_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT appointment_id, appointment_date, appointment_time FROM appointments WHERE provider_id = '123e4567-e89b-12d3-a456-426614174002' AND appointment_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT appointment_id, patient_id, appointment_date, appointment_time FROM appointments WHERE provider_id = '123e4567-e89b-12d3-a456-426614174003' ORDER BY appointment_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT appointment_id, provider_id, patient_id, appointment_date FROM appointments WHERE provider_id = '123e4567-e89b-12d3-a456-426614174004' AND appointment_date <= CURRENT_DATE ORDER BY appointment_time ASC;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, MIN(appointment_date) AS first_appointment_date, MAX(appointment_date) AS last_appointment_date FROM appointments GROUP BY provider_id;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, COUNT(DISTINCT patient_id) AS unique_patients FROM appointments GROUP BY provider_id HAVING COUNT(DISTINCT patient_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, AVG(DATE_PART('day', AGE(appointment_date, CURRENT_DATE))) AS avg_days_since_appointment FROM appointments GROUP BY provider_id;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, EXTRACT(YEAR FROM appointment_date) AS appointment_year, SUM(DATE_PART('day', AGE(appointment_date, CURRENT_DATE))) AS total_days_passed FROM appointments GROUP BY provider_id, EXTRACT(YEAR FROM appointment_date);",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, COUNT(*) AS total_appointments, COUNT(CASE WHEN extract(month from appointment_date) = 1 THEN 1 END) AS january_count FROM appointments GROUP BY provider_id;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, appointment_date, appointment_time, ROW_NUMBER() OVER (PARTITION BY provider_id ORDER BY appointment_date) AS row_num FROM appointments WHERE appointment_date >= '2023-01-01' AND appointment_date <= '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, patient_id, appointment_date, appointment_time, LAG(appointment_date) OVER (PARTITION BY provider_id ORDER BY appointment_date) AS prev_appointment_date FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT appointment_id, provider_id, patient_id, appointment_date, appointment_time, LEAD(appointment_time) OVER (ORDER BY appointment_date DESC) AS next_appointment_time FROM appointments WHERE provider_id = '123e4567-e89b-12d3-a456-426614174005';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, patient_id, appointment_date, appointment_time, appointment_time - LAG(appointment_time) OVER (PARTITION BY provider_id ORDER BY appointment_date) AS time_between_appointments FROM appointments WHERE provider_id = '123e4567-e89b-12d3-a456-426614174006';",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nWITH ranked_appointments AS (SELECT provider_id, appointment_date, appointment_time, ROW_NUMBER() OVER (PARTITION BY provider_id ORDER BY appointment_date) AS rank FROM appointments) SELECT * FROM ranked_appointments WHERE rank <= 5;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, COUNT(*) FILTER(WHERE EXTRACT(month FROM appointment_date) = 12) AS december_appointments FROM appointments GROUP BY provider_id;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, COUNT(*) FILTER(WHERE appointment_time BETWEEN '08:00:00' AND '12:00:00') AS morning_appointments FROM appointments GROUP BY provider_id;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, COUNT(*) FILTER(WHERE appointment_time BETWEEN '12:00:00' AND '18:00:00') AS afternoon_appointments FROM appointments GROUP BY provider_id;",
  "### TABLEDATA\n\nCREATE TABLE appointments (\n    appointment_id UUID PRIMARY KEY,\n    provider_id UUID,\n    patient_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT DISTINCT provider_id, COUNT(*) OVER (PARTITION BY provider_id) AS total_appointments FROM appointments ORDER BY provider_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_id, provider_name FROM healthcare_providers;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_name, specialty FROM healthcare_providers;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_id, specialty, location FROM healthcare_providers;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers WHERE provider_id = '123e4567-e89b-12d3-a456-426655440000';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers WHERE specialty = 'Cardiology';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_name, location FROM healthcare_providers WHERE specialty = 'Dermatology';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_id, provider_name FROM healthcare_providers WHERE location = 'Chicago';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers WHERE specialty = 'Orthopedics' AND location = 'Los Angeles';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM healthcare_providers;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT MAX(provider_id) FROM healthcare_providers;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT DISTINCT specialty FROM healthcare_providers;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_id, COUNT(*) FROM healthcare_providers GROUP BY specialty;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_name, COUNT(*) FROM healthcare_providers GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT location, MAX(provider_id) FROM healthcare_providers GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers ORDER BY provider_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers ORDER BY location, specialty;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_id, provider_name FROM healthcare_providers WHERE location = 'New York'",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers WHERE specialty = 'Dentist' AND location = 'California'",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_name, specialty FROM healthcare_providers WHERE location = 'Texas'",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM healthcare_providers WHERE location = 'Florida'",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_id, provider_name, specialty FROM healthcare_providers WHERE location IN ('Texas', 'California')",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers WHERE provider_name LIKE '%Smith%'",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT DISTINCT specialty FROM healthcare_providers",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers ORDER BY provider_name ASC",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_id, provider_name FROM healthcare_providers WHERE specialty = 'Pediatrician' ORDER BY provider_id DESC",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT AVG(provider_id) FROM healthcare_providers",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT MAX(provider_id) FROM healthcare_providers",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT MIN(provider_id) FROM healthcare_providers",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT UPPER(provider_name) FROM healthcare_providers",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT LENGTH(provider_name) FROM healthcare_providers",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_id, COUNT(*) FROM healthcare_providers GROUP BY provider_id",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT AVG(provider_id), MAX(provider_id), MIN(provider_id) FROM healthcare_providers",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_id FROM healthcare_providers WHERE specialty = 'Cardiologist' UNION SELECT provider_id FROM healthcare_providers WHERE specialty = 'Neurologist'",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_id FROM healthcare_providers WHERE specialty = 'Dermatologist' INTERSECT SELECT provider_id FROM healthcare_providers WHERE specialty = 'Gynecologist'",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT provider_id FROM healthcare_providers WHERE specialty = 'Physiotherapist' EXCEPT SELECT provider_id FROM healthcare_providers WHERE specialty = 'Nutritionist'",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name STRING,\n  specialty STRING,\n  location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers WHERE provider_id IN (SELECT provider_id FROM healthcare_providers WHERE specialty = 'Surgeon' ORDER BY provider_name DESC)",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Providers;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT provider_name, specialty FROM Providers;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT provider_id, provider_name, specialty FROM Providers;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, age FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, age FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Appointments;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT appointment_date, status FROM Appointments;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT appointment_id, provider_id, patient_id, appointment_date, status FROM Appointments;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT provider_id, patient_id FROM Appointments;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, a.appointment_date FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, a.appointment_date FROM Patients p JOIN Appointments a ON p.patient_id = a.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, pr.provider_name, a.appointment_date FROM Patients p JOIN Providers pr ON p.patient_id = pr.provider_id JOIN Appointments a ON p.patient_id = a.patient_id AND pr.provider_id = a.provider_id;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, pr.provider_name, a.appointment_date FROM Patients p, Providers pr, Appointments a WHERE p.patient_id = a.patient_id AND pr.provider_id = a.provider_id;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Providers WHERE specialty = 'General Medicine';",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Patients WHERE age >= 30;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Appointments WHERE status = 'Confirmed';",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT pr.provider_name, COUNT(a.appointment_id) AS num_appointments FROM Providers pr JOIN Appointments a ON pr.provider_id = a.provider_id GROUP BY pr.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, COUNT(a.appointment_id) AS num_appointments FROM Patients p JOIN Appointments a ON p.patient_id = a.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT pr.provider_name, AVG(DATEDIFF(NOW(), a.appointment_date)) AS avg_days_since_last_appointment FROM Providers pr JOIN Appointments a ON pr.provider_id = a.provider_id GROUP BY pr.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Providers;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT provider_id, provider_name, specialty FROM Providers;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, age, contact_info FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Appointments;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT appointment_id, provider_id, patient_id, appointment_date, status FROM Appointments;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, a.appointment_id, a.appointment_date, a.status FROM Providers p INNER JOIN Appointments a ON p.provider_id = a.provider_id;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, pa.patient_name, a.appointment_date, a.status FROM Providers p INNER JOIN Appointments a ON p.provider_id = a.provider_id INNER JOIN Patients pa ON a.patient_id = pa.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, pa.patient_name, a.appointment_date, a.status FROM Providers p LEFT JOIN Appointments a ON p.provider_id = a.provider_id LEFT JOIN Patients pa ON a.patient_id = pa.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, COUNT(a.appointment_id) AS total_appointments FROM Providers p INNER JOIN Appointments a ON p.provider_id = a.provider_id GROUP BY p.provider_id, p.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT pa.patient_name, COUNT(a.appointment_id) AS total_appointments FROM Patients pa INNER JOIN Appointments a ON pa.patient_id = a.patient_id GROUP BY pa.patient_id, pa.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT provider_name, specialty, COUNT(appointment_id) AS total_appointments FROM Providers p INNER JOIN Appointments a ON p.provider_id = a.provider_id GROUP BY p.provider_id, p.provider_name, p.specialty;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT pa.patient_name, AVG(age) AS average_age FROM Patients pa GROUP BY pa.patient_id, pa.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, MIN(a.appointment_date) AS earliest_appointment FROM Providers p INNER JOIN Appointments a ON p.provider_id = a.provider_id GROUP BY p.provider_id, p.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT pa.patient_name, MAX(a.appointment_date) AS latest_appointment FROM Patients pa INNER JOIN Appointments a ON pa.patient_id = a.patient_id GROUP BY pa.patient_id, pa.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT provider_name, specialty, MIN(appointment_date) AS earliest_appointment FROM Providers p INNER JOIN Appointments a ON p.provider_id = a.provider_id GROUP BY p.provider_id, p.provider_name, p.specialty;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT provider_name, specialty, MAX(appointment_date) AS latest_appointment FROM Providers p INNER JOIN Appointments a ON p.provider_id = a.provider_id GROUP BY p.provider_id, p.provider_name, p.specialty;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT provider_name, specialty, AVG(DATEDIFF(appointment_date, CURRENT_DATE)) AS average_days_until_appointment FROM Providers p INNER JOIN Appointments a ON p.provider_id = a.provider_id GROUP BY p.provider_id, p.provider_name, p.specialty;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT pa.patient_name, AGE(appointment_date, DATE '2000-01-01') AS patient_age_at_appointment FROM Patients pa INNER JOIN Appointments a ON pa.patient_id = a.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT provider_name, COUNT(appointment_id) AS total_appointments, MAX(AGE(appointment_date, CURRENT_DATE)) AS max_waiting_days FROM Providers p INNER JOIN Appointments a ON p.provider_id = a.provider_id GROUP BY p.provider_id, p.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR(50) NOT NULL,\n  specialty VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  contact_info VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT NOT NULL,\n  patient_id INT NOT NULL,\n  appointment_date TIMESTAMP NOT NULL,\n  status VARCHAR(20) NOT NULL,\n  FOREIGN KEY (provider_id) REFERENCES Providers(provider_id),\n  FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT pa.patient_name, COUNT(appointment_id) AS total_appointments, MIN(AGE(DATE '2022-12-31', appointment_date)) AS min_waiting_days FROM Patients pa INNER JOIN Appointments a ON pa.patient_id = a.patient_id GROUP BY pa.patient_id, pa.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Providers;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT provider_id, provider_name FROM Providers;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT provider_id, provider_name, specialty FROM Providers;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT provider_id, provider_name, location FROM Providers;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT patient_id, date_of_birth FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT patient_id, gender FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Appointments;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT appointment_id, provider_id, patient_id FROM Appointments;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT appointment_id, appointment_date FROM Appointments;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT appointment_id, status FROM Appointments;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Services;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT service_id, service_name FROM Services;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT service_id, price FROM Services;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT service_id, description FROM Services;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT appointment_id, provider_name, patient_name, appointment_date, status FROM Appointments INNER JOIN Providers ON Appointments.provider_id = Providers.provider_id INNER JOIN Patients ON Appointments.patient_id = Patients.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT appointment_id, provider_name, patient_name, appointment_date, status, specialty FROM Appointments INNER JOIN Providers ON Appointments.provider_id = Providers.provider_id INNER JOIN Patients ON Appointments.patient_id = Patients.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT appointment_id, provider_name, patient_name, appointment_date, status, location FROM Appointments INNER JOIN Providers ON Appointments.provider_id = Providers.provider_id INNER JOIN Patients ON Appointments.patient_id = Patients.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT provider_name, service_name, description, price FROM Providers INNER JOIN Services ON Providers.provider_id = Services.service_id;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT provider_name, service_name, description, price FROM Providers INNER JOIN Services ON Providers.provider_id = Services.service_id WHERE price > 100.00;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id WHERE p.specialty = 'Cardiology' AND a.status = 'Confirmed';",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, COUNT(a.appointment_id) AS total_appointments FROM Providers p LEFT JOIN Appointments a ON p.provider_id = a.provider_id GROUP BY p.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, COUNT(a.appointment_id) AS total_appointments FROM Providers p LEFT JOIN Appointments a ON p.provider_id = a.provider_id WHERE p.specialty = 'Dermatology' GROUP BY p.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, AVG(s.price) AS avg_price FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id JOIN Services s ON s.service_id = a.service_id GROUP BY p.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, COUNT(DISTINCT a.patient_id) AS unique_patients FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id GROUP BY p.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT provider_name, location FROM Providers WHERE specialty = 'Psychiatry' UNION SELECT provider_name, location FROM Providers WHERE specialty = 'Psychology';",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, a.appointment_date, s.service_name, s.price FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id JOIN Services s ON s.service_id = a.service_id WHERE p.specialty = 'Pediatrics' AND a.status = 'Confirmed';",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, COUNT(a.appointment_id) AS total_appointments FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id GROUP BY p.provider_name HAVING COUNT(a.appointment_id) > 10;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, MAX(s.price) AS max_price FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id JOIN Services s ON s.service_id = a.service_id GROUP BY p.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, AVG(DATE_PART('year', AGE(p.date_of_birth))) AS avg_age FROM Providers p JOIN Patients pt ON p.provider_id = pt.provider_id GROUP BY p.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, COUNT(a.appointment_id) AS total_appointments, AVG(s.price) AS avg_price FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id JOIN Services s ON s.service_id = a.service_id GROUP BY p.provider_name HAVING COUNT(a.appointment_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, MIN(s.price) AS min_price, MAX(s.price) AS max_price FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id JOIN Services s ON s.service_id = a.service_id GROUP BY p.provider_name HAVING MIN(s.price) < 50;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, COUNT(a.appointment_id) AS total_appointments, SUM(s.price) AS total_revenue FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id JOIN Services s ON s.service_id = a.service_id GROUP BY p.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, MIN(DATE_PART('year', AGE(p.date_of_birth))) AS min_age, MAX(DATE_PART('year', AGE(p.date_of_birth))) AS max_age FROM Providers p JOIN Patients pt ON p.provider_id = pt.provider_id GROUP BY p.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, COUNT(DISTINCT a.patient_id) AS unique_patients, SUM(s.price) AS total_revenue FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id JOIN Services s ON s.service_id = a.service_id GROUP BY p.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT provider_name, COUNT(*) AS total_appointments FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id WHERE EXTRACT(MONTH FROM a.appointment_date) = 11 GROUP BY provider_name;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.specialty, COUNT(a.appointment_id) AS total_appointments, AVG(s.price) AS avg_price FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id JOIN Services s ON s.service_id = a.service_id GROUP BY p.specialty HAVING COUNT(a.appointment_id) > 20;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, a.appointment_date, s.service_name, s.price FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id JOIN Services s ON s.service_id = a.service_id WHERE a.appointment_date::date = CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, s.service_name, s.price FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id JOIN Services s ON s.service_id = a.service_id WHERE s.price > 100;",
  "### TABLEDATA\n\nCREATE TABLE Providers (\n  provider_id UUID PRIMARY KEY,\n  provider_name VARCHAR(255),\n  specialty VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE Appointments (\n  appointment_id UUID PRIMARY KEY,\n  provider_id UUID,\n  patient_id UUID,\n  appointment_date TIMESTAMP,\n  status VARCHAR(20)\n);\n\nCREATE TABLE Services (\n  service_id UUID PRIMARY KEY,\n  service_name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT p.provider_name, a.appointment_date, s.service_name, s.price FROM Providers p JOIN Appointments a ON p.provider_id = a.provider_id JOIN Services s ON s.service_id = a.service_id WHERE p.specialty = 'Orthopedics' AND a.appointment_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_name, specialty FROM healthcare_providers;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT patient_name, dob FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, patient_id, appointment_date FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM medical_records;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT patient_id, provider_id, diagnosis FROM medical_records;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, day_of_week, start_time, end_time FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_name, location FROM healthcare_providers WHERE specialty='Cardiology';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT patient_name, gender, dob FROM patients WHERE gender='Female';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT appointment_id, reason, status FROM appointments WHERE status='Scheduled';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT patient_id, diagnosis, treatment FROM medical_records WHERE diagnosis='Hypertension';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_id, start_time, end_time FROM schedules WHERE day_of_week='Monday';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers WHERE provider_id=101;",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE dob >= '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT patient_name, address FROM patients WHERE address LIKE '%Ave%';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments WHERE provider_id=201 AND status='Cancelled';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_name, location FROM healthcare_providers WHERE specialty='Dermatology' AND location='New York';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers WHERE specialty = 'Cardiology';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_name, location FROM healthcare_providers WHERE location LIKE '%New York%';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_name, specialty, location FROM healthcare_providers WHERE location = 'California' AND specialty = 'Dermatology';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE gender = 'Male' AND address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM appointments WHERE appointment_date = '2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_name, patient_name FROM healthcare_providers JOIN appointments ON healthcare_providers.provider_id = appointments.provider_id JOIN patients ON appointments.patient_id = patients.patient_id WHERE appointments.status = 'Confirmed';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, treatment FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id WHERE diagnosis = 'Hypertension';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM healthcare_providers JOIN schedules ON healthcare_providers.provider_id = schedules.provider_id WHERE schedules.day_of_week = 'Monday' AND schedules.start_time BETWEEN '08:00:00' AND '12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT provider_name, reason, appointment_date FROM healthcare_providers JOIN appointments ON healthcare_providers.provider_id = appointments.provider_id WHERE appointments.appointment_date BETWEEN '2022-10-01' AND '2022-10-31';",
  "### TABLEDATA\n\nCREATE TABLE healthcare_providers (\n  provider_id INT PRIMARY KEY,\n  provider_name VARCHAR,\n  specialty VARCHAR,\n  location VARCHAR\n);\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR,\n  gender VARCHAR,\n  dob DATE,\n  address VARCHAR\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  provider_id INT,\n  patient_id INT,\n  appointment_date DATE,\n  reason VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  provider_id INT,\n  date_created DATE,\n  diagnosis VARCHAR,\n  treatment VARCHAR\n);\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  provider_id INT,\n  day_of_week VARCHAR,\n  start_time TIME,\n  end_time TIME\n);\n\n### STATEMENT\n\nSELECT patient_name, provider_name, appointment_date FROM appointments JOIN patients ON patients.patient_id = appointments.patient_id JOIN healthcare_providers ON healthcare_providers.provider_id = appointments.provider_id WHERE appointments.status = 'Completed';"
]