[
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM PatientInformation WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE date_of_birth < '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, address, contact_number FROM PatientInformation WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE patient_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, medical_history FROM PatientInformation WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE date_of_birth >= '2000-01-01';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_id, patient_name, address FROM PatientInformation WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE gender = 'Male' AND current_medications LIKE '%Aspirin%';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, address FROM PatientInformation WHERE contact_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE gender = 'Female' AND address LIKE '%Lane';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, medical_history FROM PatientInformation WHERE date_of_birth < '1980-01-01';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE contact_number LIKE '%123%' AND current_medications NOT LIKE '%Antibiotics%';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, address, medical_history FROM PatientInformation WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE date_of_birth = '1995-05-20';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_id, patient_name, address, contact_number FROM PatientInformation WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE address LIKE '%Street%' AND medical_history LIKE '%diabetes%';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, current_medications FROM PatientInformation WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE patient_id = 5 OR patient_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, contact_number FROM PatientInformation WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM PatientInformation WHERE date_of_birth >= '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE gender = 'Female' AND address LIKE '%New York%';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, contact_number FROM PatientInformation WHERE medical_history LIKE '%diabetes%';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE gender = 'Male' ORDER BY date_of_birth DESC;",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM PatientInformation;",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_patients FROM PatientInformation;",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, address, medical_history FROM PatientInformation WHERE current_medications IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, contact_number FROM PatientInformation WHERE date_of_birth < '1980-01-01' AND (gender = 'Male' OR gender = 'Other');",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, address FROM PatientInformation WHERE contact_number IN ('1234567890', '9876543210');",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_id, patient_name, gender FROM PatientInformation WHERE date_of_birth BETWEEN '1980-01-01' AND '2000-12-31';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, medical_history FROM PatientInformation WHERE medical_history IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_id, patient_name, date_of_birth, contact_number FROM PatientInformation WHERE gender = 'Female' ORDER BY date_of_birth ASC;",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, address, contact_number FROM PatientInformation WHERE medical_history LIKE '%hypertension%' OR current_medications LIKE '%heart%';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE address = '123 Main Street' AND medical_history LIKE '%asthma%' AND current_medications IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_id, patient_name, medical_history FROM PatientInformation WHERE gender = 'Male' AND (medical_history LIKE '%cancer%' OR medical_history LIKE '%tumor%');",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM PatientInformation WHERE gender = 'Female' AND DATE_FORMAT(date_of_birth, '%Y') = '1995';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientInformation WHERE address NOT LIKE '%Street';",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, medical_history FROM PatientInformation WHERE patient_name LIKE '%John%' AND medical_history IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, address, contact_number FROM PatientInformation WHERE current_medications IS NOT NULL ORDER BY patient_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE PatientInformation (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    address VARCHAR(100),\n    contact_number VARCHAR(15),\n    medical_history TEXT,\n    current_medications TEXT\n)\n\n### STATEMENT\n\nSELECT patient_id, patient_name, gender FROM PatientInformation WHERE medical_history LIKE '%infection%' OR current_medications LIKE '%antibiotics%';",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM demographics",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT patient_id, first_name, last_name FROM demographics",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_history",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT patient_id, diagnosis, treatment FROM medical_history",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM demographics WHERE patient_id = 1",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM demographics WHERE date_of_birth < '1990-01-01'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT diagnosis FROM medical_history WHERE date_of_visit BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM demographics ORDER BY last_name ASC",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_history ORDER BY date_of_visit DESC",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT first_name FROM demographics",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM demographics",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT AVG(patient_id) FROM demographics",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT MAX(date_of_birth) FROM demographics",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT MIN(date_of_visit) FROM medical_history",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM demographics WHERE first_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_history WHERE treatment LIKE '%surgery%'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT patient_id, diagnosis, date_of_visit FROM medical_history WHERE patient_id = 5",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM demographics WHERE patient_id IN (1, 2, 3)",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM demographics LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT date_of_visit FROM medical_history WHERE diagnosis = 'Flu'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM demographics",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM demographics",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_history",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT diagnosis, treatment FROM medical_history",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM demographics WHERE patient_id = 1",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_history WHERE patient_id = 1",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM demographics WHERE patient_id = 1",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT diagnosis, treatment FROM medical_history WHERE patient_id = 1",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM demographics WHERE date_of_birth BETWEEN '2000-01-01' AND '2005-12-31'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_history WHERE date_of_visit BETWEEN '2010-01-01' AND '2015-12-31'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM demographics WHERE date_of_birth BETWEEN '2000-01-01' AND '2005-12-31'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT diagnosis, treatment FROM medical_history WHERE date_of_visit BETWEEN '2010-01-01' AND '2015-12-31'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT d.first_name, m.diagnosis FROM demographics d JOIN medical_history m ON d.patient_id = m.patient_id",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT d.last_name, m.treatment FROM demographics d JOIN medical_history m ON d.patient_id = m.patient_id",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM demographics WHERE first_name LIKE 'J%'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_history WHERE diagnosis LIKE 'Cancer%'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM demographics WHERE first_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT diagnosis, treatment FROM medical_history WHERE diagnosis LIKE 'Diabetes%'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM demographics WHERE last_name = 'Smith'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  date_of_birth DATE\n);\n\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis VARCHAR(100),\n  treatment VARCHAR(100),\n  date_of_visit DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_history WHERE treatment = 'Surgery'",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, date_of_birth FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_id, full_name, date_of_birth, gender FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM medical_history;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT diagnosis, treatment FROM medical_history;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_id, last_visit_date FROM medical_history;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM medications;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM medications;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_id, frequency FROM medications;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT demographics.full_name, medical_history.diagnosis, medications.medication_name FROM demographics, medical_history, medications WHERE demographics.patient_id = medical_history.patient_id AND demographics.patient_id = medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT demographics.full_name, medical_history.last_visit_date, medications.dosage FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id JOIN medications ON demographics.patient_id = medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT demographics.full_name, medical_history.diagnosis, medications.medication_name FROM demographics INNER JOIN medical_history ON demographics.patient_id = medical_history.patient_id INNER JOIN medications ON demographics.patient_id = medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT demographics.full_name, medical_history.diagnosis, medications.medication_name FROM demographics LEFT JOIN medical_history ON demographics.patient_id = medical_history.patient_id LEFT JOIN medications ON demographics.patient_id = medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT demographics.full_name, medical_history.diagnosis, medications.medication_name FROM demographics RIGHT JOIN medical_history ON demographics.patient_id = medical_history.patient_id RIGHT JOIN medications ON demographics.patient_id = medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT demographics.full_name, medical_history.diagnosis, medications.medication_name FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id AND medical_history.last_visit_date >= '2022-01-01' JOIN medications ON demographics.patient_id = medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT demographics.full_name, medical_history.diagnosis, medications.medication_name FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id AND medical_history.last_visit_date < '2022-01-01' JOIN medications ON demographics.patient_id = medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(date_of_birth) FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MIN(last_visit_date) FROM medical_history;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MAX(dosage) FROM medications;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, date_of_birth FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, gender FROM demographics WHERE gender = 'M';",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, diagnosis, last_visit_date FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, medication_name, dosage, frequency FROM demographics JOIN medications ON demographics.patient_id = medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, diagnosis, treatment FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id WHERE treatment IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, medication_name, dosage FROM demographics JOIN medications ON demographics.patient_id = medications.patient_id WHERE dosage > '100mg';",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, medication_name, frequency FROM demographics JOIN medications ON demographics.patient_id = medications.patient_id WHERE frequency = 'daily';",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, gender, treatment, last_visit_date FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id WHERE gender = 'F' AND last_visit_date > '2020-01-01';",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT gender, COUNT(*) FROM demographics GROUP BY gender;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, COUNT(*) AS num_medication FROM demographics JOIN medications ON demographics.patient_id = medications.patient_id GROUP BY full_name HAVING num_medication > 2;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, AVG(DATEDIFF(NOW(), date_of_birth)) AS avg_age FROM demographics GROUP BY full_name ORDER BY avg_age DESC;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, medication_name, frequency FROM demographics JOIN medications ON demographics.patient_id = medications.patient_id ORDER BY full_name ASC, frequency DESC;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, diagnosis, last_visit_date FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id UNION SELECT full_name, diagnosis, last_visit_date FROM demographics RIGHT JOIN medical_history ON demographics.patient_id = medical_history.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, medication_name, last_visit_date FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id UNION SELECT full_name, medication_name, last_visit_date FROM demographics RIGHT JOIN medical_history ON demographics.patient_id = medical_history.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, medication_name, last_visit_date FROM demographics LEFT JOIN medical_history ON demographics.patient_id = medical_history.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, medication_name, last_visit_date FROM demographics RIGHT JOIN medical_history ON demographics.patient_id = medical_history.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, diagnosis, treatment FROM demographics LEFT JOIN medical_history ON demographics.patient_id = medical_history.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, medication_name, dosage FROM demographics RIGHT JOIN medications ON demographics.patient_id = medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n  patient_id INT PRIMARY KEY,\n  full_name VARCHAR(100),\n  date_of_birth DATE,\n  gender CHAR(1)\n);\n\nCREATE TABLE medical_history (\n  patient_id INT PRIMARY KEY,\n  diagnosis TEXT,\n  treatment TEXT,\n  last_visit_date DATE\n);\n\nCREATE TABLE medications (\n  patient_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  frequency VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT full_name, diagnosis, date_of_birth FROM demographics CROSS JOIN medical_history;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, age FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, age, gender FROM demographics WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM medical_history;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT diagnosis, treatment FROM medical_history WHERE diagnosis LIKE 'Cancer%';",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM medications;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT medications.medication_name, medications.dosage, demographics.patient_name FROM medications INNER JOIN demographics ON medications.patient_id = demographics.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergen FROM demographics INNER JOIN allergies ON demographics.patient_id = allergies.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, frequency FROM medications INNER JOIN demographics ON medications.patient_id = demographics.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM demographics WHERE patient_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM medical_history WHERE date_admitted > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis FROM medical_history INNER JOIN demographics ON medical_history.patient_id = demographics.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergen, reaction FROM allergies INNER JOIN demographics ON allergies.patient_id = demographics.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, treatment FROM medical_history INNER JOIN demographics ON medical_history.patient_id = demographics.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name FROM medications INNER JOIN demographics ON medications.patient_id = demographics.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage FROM medications INNER JOIN demographics ON medications.patient_id = demographics.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, frequency, age FROM medications INNER JOIN demographics ON medications.patient_id = demographics.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM allergies WHERE reaction LIKE '%itching%';",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergen FROM demographics LEFT JOIN allergies ON demographics.patient_id = allergies.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, age FROM demographics ORDER BY age DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, age FROM demographics WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergen FROM demographics JOIN allergies ON demographics.patient_id = allergies.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage FROM demographics JOIN medications ON demographics.patient_id = medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_patients FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, age, diagnosis FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, frequency FROM demographics JOIN medications ON demographics.patient_id = medications.patient_id WHERE frequency = 'daily';",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, allergen FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id JOIN allergies ON demographics.patient_id = allergies.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, treatment, date_admitted FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, frequency FROM demographics JOIN medications ON demographics.patient_id = medications.patient_id WHERE age BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, age, allergen FROM demographics JOIN allergies ON demographics.patient_id = allergies.patient_id WHERE reaction = 'severe';",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergen, reaction FROM demographics JOIN allergies ON demographics.patient_id = allergies.patient_id WHERE age > 60;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, medication_name FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id JOIN medications ON demographics.patient_id = medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, medication_name FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id JOIN medications ON demographics.patient_id = medications.patient_id WHERE age < 50;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, treatment, date_admitted, reaction FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id JOIN allergies ON demographics.patient_id = allergies.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, age, diagnosis, allergen FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id JOIN allergies ON demographics.patient_id = allergies.patient_id WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, frequency, allergen FROM demographics JOIN medications ON demographics.patient_id = medications.patient_id JOIN allergies ON demographics.patient_id = allergies.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE medical_history (\n    patient_id INT PRIMARY KEY,\n    diagnosis VARCHAR(100),\n    treatment VARCHAR(100),\n    date_admitted DATE\n);\n\n\nCREATE TABLE medications (\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage VARCHAR(20),\n    frequency VARCHAR(20),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n\nCREATE TABLE allergies (\n    patient_id INT,\n    allergen VARCHAR(50),\n    reaction VARCHAR(100),\n    FOREIGN KEY (patient_id) REFERENCES demographics(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, medication_name, dosage FROM demographics JOIN medical_history ON demographics.patient_id = medical_history.patient_id JOIN medications ON demographics.patient_id = medications.patient_id WHERE age > 40;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT * FROM demographics",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_id, patient_name FROM demographics",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_id, date_of_birth FROM demographics",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT * FROM medical_history",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_id, diagnosis FROM medical_history",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_id, treatment FROM medical_history",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT * FROM medications",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_id, medication_name FROM medications",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_id, dosage FROM medications",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT * FROM appointments",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT appointment_id, patient_id FROM appointments",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT appointment_id, appointment_date FROM appointments",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT * FROM allergies",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_id, allergen FROM allergies",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_id, reaction FROM allergies",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT demographics.patient_name, medical_history.diagnosis FROM demographics INNER JOIN medical_history ON demographics.patient_id = medical_history.patient_id",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT medications.medication_name, appointments.appointment_date FROM medications INNER JOIN appointments ON medications.patient_id = appointments.patient_id",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT demographics.patient_name, appointments.appointment_date FROM demographics INNER JOIN appointments ON demographics.patient_id = appointments.patient_id",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name, DATE_PART('year', age(date_of_birth)) AS age FROM demographics",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name, allergen, reaction FROM demographics INNER JOIN allergies ON demographics.patient_id = allergies.patient_id",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT * FROM demographics WHERE patient_name LIKE 'John%' AND date_of_birth > '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name,diagnosis,treatment FROM demographics d JOIN medical_history m ON d.patient_id = m.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name,medication_name,dosage FROM demographics d JOIN medications md ON d.patient_id = md.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT appointment_date,notes FROM demographics d JOIN appointments a ON d.patient_id = a.patient_id WHERE appointment_date >= '2022-01-01' ORDER BY appointment_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name,allergen,reaction FROM demographics d JOIN allergies al ON d.patient_id = al.patient_id WHERE reaction = 'Severe';",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT diagnosis, COUNT(patient_id) AS diagnosis_count FROM medical_history GROUP BY diagnosis;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name, COUNT(a.appointment_id) AS num_appointments FROM demographics d JOIN appointments a ON d.patient_id = a.patient_id GROUP BY d.patient_id, patient_name;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT medication_name, COUNT(patient_id) AS num_patients FROM medications GROUP BY medication_name HAVING COUNT(patient_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name, COUNT(*) AS num_allergies FROM demographics d JOIN allergies al ON d.patient_id = al.patient_id GROUP BY d.patient_id, patient_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT d.patient_name, m.diagnosis, a.appointment_date, al.allergen FROM demographics d JOIN medical_history m ON d.patient_id = m.patient_id JOIN appointments a ON d.patient_id = a.patient_id JOIN allergies al ON d.patient_id = al.patient_id WHERE a.appointment_date >= '2022-01-01' AND m.diagnosis = 'Influenza' AND al.reaction = 'Severe';",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, allergy_count FROM (SELECT d.patient_name, m.diagnosis, COUNT(al.patient_id) AS allergy_count FROM demographics d JOIN medical_history m ON d.patient_id = m.patient_id JOIN allergies al ON d.patient_id = al.patient_id GROUP BY d.patient_name, m.diagnosis) AS temp WHERE allergy_count > 0;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name, latest_appointment_date FROM (SELECT d.patient_name, MAX(appointment_date) AS latest_appointment_date FROM demographics d JOIN appointments a ON d.patient_id = a.patient_id GROUP BY d.patient_name) AS temp;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name, MAX(date_of_birth) AS oldest_date_of_birth FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name, AVG(date_of_birth) AS avg_age FROM demographics;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT diagnosis, SUM(CASE WHEN treatment = 'Medication' THEN 1 ELSE 0 END) AS medication_count, SUM(CASE WHEN treatment = 'Surgery' THEN 1 ELSE 0 END) AS surgery_count FROM medical_history GROUP BY diagnosis;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name, MIN(appointment_date) AS first_appointment FROM demographics d JOIN appointments a ON d.patient_id = a.patient_id GROUP BY d.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name, medication_name FROM demographics d JOIN medications md ON d.patient_id = md.patient_id WHERE medication_name IN ('Aspirin', 'Penicillin', 'Ibuprofen');",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name, COUNT(*) AS total_records FROM (SELECT patient_id FROM demographics UNION ALL SELECT patient_id FROM medical_history UNION ALL SELECT patient_id FROM medications UNION ALL SELECT patient_id FROM appointments UNION ALL SELECT patient_id FROM allergies) AS temp GROUP BY patient_name HAVING COUNT(*) = 5;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_name, AVG(cast(datediff(year, date_of_birth, getdate()) as float)) AS avg_age FROM demographics GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT COUNT(patient_id) AS total_patients FROM demographics UNION ALL SELECT COUNT(patient_id) AS total_records FROM medical_history UNION ALL SELECT COUNT(patient_id) AS total_medications FROM medications UNION ALL SELECT COUNT(appointment_id) AS total_appointments FROM appointments UNION ALL SELECT COUNT(patient_id) AS total_allergies FROM allergies;",
  "### TABLEDATA\n\nCREATE TABLE demographics ( patient_id UUID PRIMARY KEY, patient_name VARCHAR(255), date_of_birth DATE )\n\nCREATE TABLE medical_history ( patient_id UUID PRIMARY KEY, diagnosis VARCHAR(255), treatment VARCHAR(255) )\n\nCREATE TABLE medications ( patient_id UUID PRIMARY KEY, medication_name VARCHAR(255), dosage VARCHAR(50) )\n\nCREATE TABLE appointments ( appointment_id UUID PRIMARY KEY, patient_id UUID, appointment_date DATE, notes TEXT )\n\nCREATE TABLE allergies ( patient_id UUID PRIMARY KEY, allergen VARCHAR(255), reaction VARCHAR(255) )\n\n### STATEMENT\n\nSELECT patient_id, patient_name, appointment_date, notes FROM demographics d JOIN appointments a ON d.patient_id = a.patient_id WHERE YEAR(appointment_date) = 2022;"
]