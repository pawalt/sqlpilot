[
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (1, 'Introduction to Programming', 'Slide 1', 'Quiz 1')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (2, 'Data Structures and Algorithms', 'Slide 2', 'Quiz 2')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (3, 'Database Management Systems', 'Slide 3', 'Quiz 3')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (4, 'Web Development', 'Slide 4', 'Quiz 4')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (5, 'Network Security', 'Slide 5', 'Quiz 5')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (6, 'Software Engineering', 'Slide 6', 'Quiz 6')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (7, 'Operating Systems', 'Slide 7', 'Quiz 7')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (8, 'Machine Learning', 'Slide 8', 'Quiz 8')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (9, 'Cybersecurity', 'Slide 9', 'Quiz 9')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (10, 'Data Analysis', 'Slide 10', 'Quiz 10')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (11, 'Computer Networks', 'Slide 11', 'Quiz 11')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (12, 'Artificial Intelligence', 'Slide 12', 'Quiz 12')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (13, 'Mobile App Development', 'Slide 13', 'Quiz 13')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (14, 'Internet of Things', 'Slide 14', 'Quiz 14')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (15, 'Cloud Computing', 'Slide 15', 'Quiz 15')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (16, 'Software Testing', 'Slide 16', 'Quiz 16')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (17, 'Big Data', 'Slide 17', 'Quiz 17')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (18, 'Blockchain Technology', 'Slide 18', 'Quiz 18')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (19, 'Computer Graphics', 'Slide 19', 'Quiz 19')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (20, 'System Administration', 'Slide 20', 'Quiz 20')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (1, 'Some lecture notes 1', 'Some slides 1', 'Some quizzes 1')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (2, 'Some lecture notes 2', 'Some slides 2', 'Some quizzes 2')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (3, 'Some lecture notes 3', 'Some slides 3', 'Some quizzes 3')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (4, 'Some lecture notes 4', 'Some slides 4', 'Some quizzes 4')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (5, 'Some lecture notes 5', 'Some slides 5', 'Some quizzes 5')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (6, 'Some lecture notes 6', 'Some slides 6', 'Some quizzes 6')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (7, 'Some lecture notes 7', 'Some slides 7', 'Some quizzes 7')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (8, 'Some lecture notes 8', 'Some slides 8', 'Some quizzes 8')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (9, 'Some lecture notes 9', 'Some slides 9', 'Some quizzes 9')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (10, 'Some lecture notes 10', 'Some slides 10', 'Some quizzes 10')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (11, 'Some lecture notes 11', 'Some slides 11', 'Some quizzes 11')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (12, 'Some lecture notes 12', 'Some slides 12', 'Some quizzes 12')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (13, 'Some lecture notes 13', 'Some slides 13', 'Some quizzes 13')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (14, 'Some lecture notes 14', 'Some slides 14', 'Some quizzes 14')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (15, 'Some lecture notes 15', 'Some slides 15', 'Some quizzes 15')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (16, 'Some lecture notes 16', 'Some slides 16', 'Some quizzes 16')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (17, 'Some lecture notes 17', 'Some slides 17', 'Some quizzes 17')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (18, 'Some lecture notes 18', 'Some slides 18', 'Some quizzes 18')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (19, 'Some lecture notes 19', 'Some slides 19', 'Some quizzes 19')",
  "### TABLEDATA\n\nCREATE TABLE CourseMaterials (\n    course_id INT PRIMARY KEY,\n    lecture_notes TEXT,\n    slides TEXT,\n    quizzes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO CourseMaterials (course_id, lecture_notes, slides, quizzes) VALUES (20, 'Some lecture notes 20', 'Some slides 20', 'Some quizzes 20')",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (1, 'Introduction to SQL', 'SQL basics for beginners', 'John Doe', NOW())",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (2, 'Advanced SQL Queries', 'In-depth guide to SQL queries', 'Jane Smith', NOW())",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (3, 'Normalization in Databases', 'Understanding database normalization', 'Alice Johnson', NOW())",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (4, 'Database Design Principles', 'Best practices for database design', 'Robert Williams', NOW())",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (5, 'Data Modeling Techniques', 'Data modeling concepts and techniques', 'Sarah Brown', NOW())",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (1, 'What is a primary key?', 'A unique identifier for a record', 'Easy', NOW())",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (2, 'What is a foreign key?', 'A reference to a primary key in another table', 'Medium', NOW())",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (3, 'What is normalization?', 'Organizing data to reduce redundancy', 'Hard', NOW())",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (4, 'What is database indexing?', 'Improving query performance by creating indexes', 'Medium', NOW())",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (5, 'What is SQL injection?', 'A security vulnerability in databases', 'Hard', NOW())",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (1, 'Introduction to SQL', 'SQL is a standard language for accessing and manipulating databases.', 'John Doe', '2022-01-01 08:00:00') ON CONFLICT (id) DO UPDATE SET title = 'Introduction to SQL', content = 'SQL is a standard language for accessing and manipulating databases.', author = 'John Doe', created_at = '2022-01-01 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (1, 'What is SQL?', 'Structured Query Language', 'Easy', '2022-01-01 09:00:00') ON CONFLICT (id) DO UPDATE SET question = 'What is SQL?', answer = 'Structured Query Language', difficulty = 'Easy', created_at = '2022-01-01 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (2, 'Advanced SQL Queries', 'Learn about advanced SQL query techniques.', 'Jane Smith', '2022-01-02 10:00:00') ON CONFLICT (id) DO UPDATE SET title = 'Advanced SQL Queries', content = 'Learn about advanced SQL query techniques.', author = 'Jane Smith', created_at = '2022-01-02 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (2, 'What is a JOIN?', 'Combines columns from two or more tables based on a related column between them.', 'Medium', '2022-01-02 11:00:00') ON CONFLICT (id) DO UPDATE SET question = 'What is a JOIN?', answer = 'Combines columns from two or more tables based on a related column between them.', difficulty = 'Medium', created_at = '2022-01-02 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (3, 'Normalization in Databases', 'Understand the process of organizing data in a database.', 'Emily White', '2022-01-03 12:00:00') ON CONFLICT (id) DO UPDATE SET title = 'Normalization in Databases', content = 'Understand the process of organizing data in a database.', author = 'Emily White', created_at = '2022-01-03 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (3, 'What is database normalization?', 'Organizing a database to minimize redundancy and dependency.', 'Hard', '2022-01-03 13:00:00') ON CONFLICT (id) DO UPDATE SET question = 'What is database normalization?', answer = 'Organizing a database to minimize redundancy and dependency.', difficulty = 'Hard', created_at = '2022-01-03 13:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (4, 'Indexes in Databases', 'Learn how indexes improve the performance of database queries.', 'Michael Brown', '2022-01-04 14:00:00') ON CONFLICT (id) DO UPDATE SET title = 'Indexes in Databases', content = 'Learn how indexes improve the performance of database queries.', author = 'Michael Brown', created_at = '2022-01-04 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (4, 'What are database indexes?', 'Data structures that improve the speed of data retrieval operations.', 'Medium', '2022-01-04 15:00:00') ON CONFLICT (id) DO UPDATE SET question = 'What are database indexes?', answer = 'Data structures that improve the speed of data retrieval operations.', difficulty = 'Medium', created_at = '2022-01-04 15:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (5, 'Database Transactions', 'Learn about ACID properties and transaction management in databases.', 'Sophia Green', '2022-01-05 16:00:00') ON CONFLICT (id) DO UPDATE SET title = 'Database Transactions', content = 'Learn about ACID properties and transaction management in databases.', author = 'Sophia Green', created_at = '2022-01-05 16:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (5, 'What are the ACID properties of a transaction?', 'Atomicity, Consistency, Isolation, Durability', 'Hard', '2022-01-05 17:00:00') ON CONFLICT (id) DO UPDATE SET question = 'What are the ACID properties of a transaction?', answer = 'Atomicity, Consistency, Isolation, Durability', difficulty = 'Hard', created_at = '2022-01-05 17:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (6, 'Backup and Recovery in Databases', 'Explore strategies for backing up and recovering database data.', 'David Lee', '2022-01-06 18:00:00') ON CONFLICT (id) DO UPDATE SET title = 'Backup and Recovery in Databases', content = 'Explore strategies for backing up and recovering database data.', author = 'David Lee', created_at = '2022-01-06 18:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (6, 'Why is database backup important?', 'To protect against data loss and ensure data integrity.', 'Medium', '2022-01-06 19:00:00') ON CONFLICT (id) DO UPDATE SET question = 'Why is database backup important?', answer = 'To protect against data loss and ensure data integrity.', difficulty = 'Medium', created_at = '2022-01-06 19:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (7, 'Data Warehousing Concepts', 'Understand data warehousing architecture and concepts.', 'Jennifer Smith', '2022-01-07 20:00:00') ON CONFLICT (id) DO UPDATE SET title = 'Data Warehousing Concepts', content = 'Understand data warehousing architecture and concepts.', author = 'Jennifer Smith', created_at = '2022-01-07 20:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (7, 'What is data warehousing?', 'Centralized repository for storing and managing data from multiple sources.', 'Easy', '2022-01-07 21:00:00') ON CONFLICT (id) DO UPDATE SET question = 'What is data warehousing?', answer = 'Centralized repository for storing and managing data from multiple sources.', difficulty = 'Easy', created_at = '2022-01-07 21:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (8, 'Data Mining Techniques', 'Learn about data mining algorithms and applications.', 'William Johnson', '2022-01-08 22:00:00') ON CONFLICT (id) DO UPDATE SET title = 'Data Mining Techniques', content = 'Learn about data mining algorithms and applications.', author = 'William Johnson', created_at = '2022-01-08 22:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (8, 'What is data mining?', 'Analyzing and discovering patterns in large datasets.', 'Hard', '2022-01-08 23:00:00') ON CONFLICT (id) DO UPDATE SET question = 'What is data mining?', answer = 'Analyzing and discovering patterns in large datasets.', difficulty = 'Hard', created_at = '2022-01-08 23:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (9, 'Data Visualization Fundamentals', 'Explore visualization techniques for presenting data.', 'Michelle Davis', '2022-01-09 00:00:00') ON CONFLICT (id) DO UPDATE SET title = 'Data Visualization Fundamentals', content = 'Explore visualization techniques for presenting data.', author = 'Michelle Davis', created_at = '2022-01-09 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (9, 'Why is data visualization important?', 'To convey complex information in a clear and concise manner.', 'Medium', '2022-01-09 01:00:00') ON CONFLICT (id) DO UPDATE SET question = 'Why is data visualization important?', answer = 'To convey complex information in a clear and concise manner.', difficulty = 'Medium', created_at = '2022-01-09 01:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO LectureNotes (id, title, content, author, created_at) VALUES (10, 'Big Data Analytics', 'Learn about analyzing and deriving insights from large datasets.', 'Christopher Thomas', '2022-01-10 02:00:00') ON CONFLICT (id) DO UPDATE SET title = 'Big Data Analytics', content = 'Learn about analyzing and deriving insights from large datasets.', author = 'Christopher Thomas', created_at = '2022-01-10 02:00:00';",
  "### TABLEDATA\n\nCREATE TABLE LectureNotes (\n    id INT PRIMARY KEY,\n    title VARCHAR(255),\n    content TEXT,\n    author VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE Quiz (\n    id INT PRIMARY KEY,\n    question TEXT,\n    answer TEXT,\n    difficulty VARCHAR(50),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Quiz (id, question, answer, difficulty, created_at) VALUES (10, 'What is big data analytics?', 'Process of examining large and varied data sets to uncover hidden patterns and insights.', 'Hard', '2022-01-10 03:00:00') ON CONFLICT (id) DO UPDATE SET question = 'What is big data analytics?', answer = 'Process of examining large and varied data sets to uncover hidden patterns and insights.', difficulty = 'Hard', created_at = '2022-01-10 03:00:00';",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO lecture_notes (course_id, title, content, created_at) VALUES (1, 'Introduction to SQL', 'SQL is used to communicate with databases', '2022-01-01 08:00:00') ON CONFLICT (course_id) DO UPDATE SET title = EXCLUDED.title, content = EXCLUDED.content",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO lecture_notes (course_id, title, content, created_at) VALUES (2, 'Normalization in Databases', 'Understanding database normalization concepts', '2022-01-02 09:00:00') ON CONFLICT (course_id) DO UPDATE SET title = EXCLUDED.title, content = EXCLUDED.content",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO lecture_notes (course_id, title, content, created_at) VALUES (3, 'Indexes in Databases', 'Optimizing database performance with indexes', '2022-01-03 10:00:00') ON CONFLICT (course_id) DO UPDATE SET title = EXCLUDED.title, content = EXCLUDED.content",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO slides (course_id, slide_number, image_url, created_at) VALUES (1, 1, 'image1.jpg', '2022-01-01 11:00:00') ON CONFLICT (course_id, slide_number) DO UPDATE SET image_url = EXCLUDED.image_url",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO slides (course_id, slide_number, image_url, created_at) VALUES (2, 1, 'image2.jpg', '2022-01-02 12:00:00') ON CONFLICT (course_id, slide_number) DO UPDATE SET image_url = EXCLUDED.image_url",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO slides (course_id, slide_number, image_url, created_at) VALUES (3, 1, 'image3.jpg', '2022-01-03 13:00:00') ON CONFLICT (course_id, slide_number) DO UPDATE SET image_url = EXCLUDED.image_url",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quizzes (course_id, question, options, correct_answer, created_at) VALUES (1, 'What is SQL?', '[\"Structured Query Language\"]', 1, '2022-01-01 14:00:00') ON CONFLICT (course_id, question) DO UPDATE SET options = EXCLUDED.options, correct_answer = EXCLUDED.correct_answer",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quizzes (course_id, question, options, correct_answer, created_at) VALUES (2, 'Which statement is correct?', '[\"Statement 1\", \"Statement 2\", \"Statement 3\"]', 2, '2022-01-02 15:00:00') ON CONFLICT (course_id, question) DO UPDATE SET options = EXCLUDED.options, correct_answer = EXCLUDED.correct_answer",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quizzes (course_id, question, options, correct_answer, created_at) VALUES (3, 'Understanding Indexes', '[\"Indexes are used to optimize queries\"]', 1, '2022-01-03 16:00:00') ON CONFLICT (course_id, question) DO UPDATE SET options = EXCLUDED.options, correct_answer = EXCLUDED.correct_answer",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO lecture_notes (id, course_id, title, content, created_at) VALUES (1, 101, 'Introduction to SQL', 'This lecture covers the basics of SQL queries.', '2022-01-01 09:00:00') ON CONFLICT (id) DO UPDATE SET title = excluded.title, content = excluded.content, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO slides (id, course_id, slide_number, image_url, created_at) VALUES (1, 101, 1, 'image_url_1.jpg', '2022-01-01 10:00:00') ON CONFLICT (id) DO UPDATE SET slide_number = excluded.slide_number, image_url = excluded.image_url, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO quizzes (id, course_id, question, options, correct_answer, created_at) VALUES (1, 101, 'What is SQL?', '[\"A\", \"B\", \"C\", \"D\"]', 1, '2022-01-01 11:00:00') ON CONFLICT (id) DO UPDATE SET question = excluded.question, options = excluded.options, correct_answer = excluded.correct_answer, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO lecture_notes (id, course_id, title, content, created_at) VALUES (2, 101, 'Advanced SQL', 'This lecture covers advanced SQL techniques.', '2022-02-01 09:00:00') ON CONFLICT (id) DO UPDATE SET title = excluded.title, content = excluded.content, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO slides (id, course_id, slide_number, image_url, created_at) VALUES (2, 101, 2, 'image_url_2.jpg', '2022-02-01 10:00:00') ON CONFLICT (id) DO UPDATE SET slide_number = excluded.slide_number, image_url = excluded.image_url, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO quizzes (id, course_id, question, options, correct_answer, created_at) VALUES (2, 101, 'What is a JOIN?', '[\"A\", \"B\", \"C\", \"D\"]', 3, '2022-02-01 11:00:00') ON CONFLICT (id) DO UPDATE SET question = excluded.question, options = excluded.options, correct_answer = excluded.correct_answer, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO lecture_notes (id, course_id, title, content, created_at) VALUES (3, 102, 'Introduction to Python', 'This lecture covers the basics of Python programming.', '2022-01-02 09:00:00') ON CONFLICT (id) DO UPDATE SET title = excluded.title, content = excluded.content, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO slides (id, course_id, slide_number, image_url, created_at) VALUES (3, 102, 1, 'image_url_3.jpg', '2022-01-02 10:00:00') ON CONFLICT (id) DO UPDATE SET slide_number = excluded.slide_number, image_url = excluded.image_url, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO quizzes (id, course_id, question, options, correct_answer, created_at) VALUES (3, 102, 'What is a variable?', '[\"A\", \"B\", \"C\", \"D\"]', 2, '2022-01-02 11:00:00') ON CONFLICT (id) DO UPDATE SET question = excluded.question, options = excluded.options, correct_answer = excluded.correct_answer, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO lecture_notes (id, course_id, title, content, created_at) VALUES (4, 102, 'Advanced Python', 'This lecture covers advanced Python concepts.', '2022-02-02 09:00:00') ON CONFLICT (id) DO UPDATE SET title = excluded.title, content = excluded.content, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO slides (id, course_id, slide_number, image_url, created_at) VALUES (4, 102, 2, 'image_url_4.jpg', '2022-02-02 10:00:00') ON CONFLICT (id) DO UPDATE SET slide_number = excluded.slide_number, image_url = excluded.image_url, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO quizzes (id, course_id, question, options, correct_answer, created_at) VALUES (4, 102, 'What is a function?', '[\"A\", \"B\", \"C\", \"D\"]', 4, '2022-02-02 11:00:00') ON CONFLICT (id) DO UPDATE SET question = excluded.question, options = excluded.options, correct_answer = excluded.correct_answer, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO lecture_notes (id, course_id, title, content, created_at) VALUES (5, 103, 'Introduction to JavaScript', 'This lecture covers the basics of JavaScript programming.', '2022-01-03 09:00:00') ON CONFLICT (id) DO UPDATE SET title = excluded.title, content = excluded.content, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO slides (id, course_id, slide_number, image_url, created_at) VALUES (5, 103, 1, 'image_url_5.jpg', '2022-01-03 10:00:00') ON CONFLICT (id) DO UPDATE SET slide_number = excluded.slide_number, image_url = excluded.image_url, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO quizzes (id, course_id, question, options, correct_answer, created_at) VALUES (5, 103, 'What is an array?', '[\"A\", \"B\", \"C\", \"D\"]', 2, '2022-01-03 11:00:00') ON CONFLICT (id) DO UPDATE SET question = excluded.question, options = excluded.options, correct_answer = excluded.correct_answer, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO lecture_notes (id, course_id, title, content, created_at) VALUES (6, 103, 'Advanced JavaScript', 'This lecture covers advanced JavaScript concepts.', '2022-02-03 09:00:00') ON CONFLICT (id) DO UPDATE SET title = excluded.title, content = excluded.content, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO slides (id, course_id, slide_number, image_url, created_at) VALUES (6, 103, 2, 'image_url_6.jpg', '2022-02-03 10:00:00') ON CONFLICT (id) DO UPDATE SET slide_number = excluded.slide_number, image_url = excluded.image_url, created_at = excluded.created_at;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE slides (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    slide_number INT NOT NULL,\n    image_url TEXT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE quizzes (\n    id SERIAL PRIMARY KEY,\n    course_id INT NOT NULL,\n    question TEXT NOT NULL,\n    options JSONB NOT NULL,\n    correct_answer INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO quizzes (id, course_id, question, options, correct_answer, created_at) VALUES (6, 103, 'What is an object?', '[\"A\", \"B\", \"C\", \"D\"]', 3, '2022-02-03 11:00:00');",
  "### TABLEDATA\n\nCREATE TABLE Lecture_Notes (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  content TEXT\n)\n\nCREATE TABLE Slides (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  slide_image BYTEA\n)\n\nCREATE TABLE Quizzes (\n  id INT PRIMARY KEY,\n  question TEXT,\n  correct_answer VARCHAR(255),\n  explanation TEXT\n)\n\nCREATE TABLE Course (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor_name VARCHAR(255),\n  course_description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO Lecture_Notes (id, title, content) VALUES (1, 'Introduction to SQL', 'This is an introduction to SQL queries.');",
  "### TABLEDATA\n\nCREATE TABLE Lecture_Notes (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  content TEXT\n)\n\nCREATE TABLE Slides (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  slide_image BYTEA\n)\n\nCREATE TABLE Quizzes (\n  id INT PRIMARY KEY,\n  question TEXT,\n  correct_answer VARCHAR(255),\n  explanation TEXT\n)\n\nCREATE TABLE Course (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor_name VARCHAR(255),\n  course_description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO Slides (id, title, slide_image) VALUES (1, 'Database Basics', '\\x89504E47');",
  "### TABLEDATA\n\nCREATE TABLE Lecture_Notes (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  content TEXT\n)\n\nCREATE TABLE Slides (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  slide_image BYTEA\n)\n\nCREATE TABLE Quizzes (\n  id INT PRIMARY KEY,\n  question TEXT,\n  correct_answer VARCHAR(255),\n  explanation TEXT\n)\n\nCREATE TABLE Course (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor_name VARCHAR(255),\n  course_description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO Quizzes (id, question, correct_answer, explanation) VALUES (1, 'What is a primary key?', 'A primary key uniquely identifies each record in a table.', 'The primary key constraint ensures that the values in this column are unique.');",
  "### TABLEDATA\n\nCREATE TABLE Lecture_Notes (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  content TEXT\n)\n\nCREATE TABLE Slides (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  slide_image BYTEA\n)\n\nCREATE TABLE Quizzes (\n  id INT PRIMARY KEY,\n  question TEXT,\n  correct_answer VARCHAR(255),\n  explanation TEXT\n)\n\nCREATE TABLE Course (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor_name VARCHAR(255),\n  course_description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO Course (id, course_name, instructor_name, course_description) VALUES (1, 'Database Management', 'John Doe', 'Learn how to design and manage databases.');",
  "### TABLEDATA\n\nCREATE TABLE Lecture_Notes (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  content TEXT\n)\n\nCREATE TABLE Slides (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  slide_image BYTEA\n)\n\nCREATE TABLE Quizzes (\n  id INT PRIMARY KEY,\n  question TEXT,\n  correct_answer VARCHAR(255),\n  explanation TEXT\n)\n\nCREATE TABLE Course (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor_name VARCHAR(255),\n  course_description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO Lecture_Notes (id, title, content) VALUES (1, 'Introduction to SQL', 'This is an introductory note about SQL') ON CONFLICT (id) DO UPDATE SET title = 'Introduction to SQL Updated', content = 'Updated content for SQL introduction';",
  "### TABLEDATA\n\nCREATE TABLE Lecture_Notes (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  content TEXT\n)\n\nCREATE TABLE Slides (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  slide_image BYTEA\n)\n\nCREATE TABLE Quizzes (\n  id INT PRIMARY KEY,\n  question TEXT,\n  correct_answer VARCHAR(255),\n  explanation TEXT\n)\n\nCREATE TABLE Course (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor_name VARCHAR(255),\n  course_description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO Slides (id, title, slide_image) VALUES (1, 'Slide 1', 'image1.jpg') ON CONFLICT (id) DO UPDATE SET title = 'Slide 1 Updated', slide_image = 'updated_image1.jpg';",
  "### TABLEDATA\n\nCREATE TABLE Lecture_Notes (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  content TEXT\n)\n\nCREATE TABLE Slides (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  slide_image BYTEA\n)\n\nCREATE TABLE Quizzes (\n  id INT PRIMARY KEY,\n  question TEXT,\n  correct_answer VARCHAR(255),\n  explanation TEXT\n)\n\nCREATE TABLE Course (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor_name VARCHAR(255),\n  course_description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO Quizzes (id, question, correct_answer, explanation) VALUES (1, 'What is a primary key?', 'A primary key uniquely identifies a record in a table.', 'An explanation about primary keys') ON CONFLICT (id) DO UPDATE SET question = 'What is a primary key? Updated', correct_answer = 'Updated answer', explanation = 'Updated explanation';",
  "### TABLEDATA\n\nCREATE TABLE Lecture_Notes (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  content TEXT\n)\n\nCREATE TABLE Slides (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  slide_image BYTEA\n)\n\nCREATE TABLE Quizzes (\n  id INT PRIMARY KEY,\n  question TEXT,\n  correct_answer VARCHAR(255),\n  explanation TEXT\n)\n\nCREATE TABLE Course (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor_name VARCHAR(255),\n  course_description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO Course (id, course_name, instructor_name, course_description) VALUES (1, 'Database Management', 'John Doe', 'This course covers database management concepts') ON CONFLICT (id) DO UPDATE SET course_name = 'Database Management Updated', instructor_name = 'Jane Smith', course_description = 'Updated course description';",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO lecture_notes (course_id, note_title, note_content) VALUES (1, 'Introduction to SQL', 'This is a note about SQL');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO slides (course_id, slide_title, slide_content) VALUES (1, 'SQL Basics', 'Basic SQL commands and syntax examples');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO quizzes (course_id, quiz_title, quiz_questions, quiz_answers) VALUES (1, 'SQL Quiz 1', 'What is SQL?', 'Structured Query Language');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_name, course_description) VALUES ('SQL Fundamentals', 'Introduction to SQL concepts and queries');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO materials (material_type, material_title, material_content, course_id) VALUES ('Presentation', 'SQL Overview', 'Overview of SQL and its importance', 1);",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO lecture_notes (course_id, note_title, note_content) VALUES (2, 'Introduction to Python', 'This is a note about Python');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO slides (course_id, slide_title, slide_content) VALUES (2, 'Python Basics', 'Basic Python syntax and data types');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO quizzes (course_id, quiz_title, quiz_questions, quiz_answers) VALUES (2, 'Python Quiz 1', 'What is Python?', 'A programming language');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_name, course_description) VALUES ('Python Programming', 'Introduction to Python programming language');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO materials (material_type, material_title, material_content, course_id) VALUES ('Tutorial', 'Python Tutorial', 'Step-by-step guide to learn Python', 2);",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO lecture_notes (course_id, note_title, note_content) VALUES (3, 'Introduction to JavaScript', 'This is a note about JavaScript');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO slides (course_id, slide_title, slide_content) VALUES (3, 'JavaScript Basics', 'Basic JavaScript concepts and functions');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO quizzes (course_id, quiz_title, quiz_questions, quiz_answers) VALUES (3, 'JavaScript Quiz 1', 'What is JavaScript?', 'A scripting language');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_name, course_description) VALUES ('JavaScript Fundamentals', 'Introduction to JavaScript programming');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO materials (material_type, material_title, material_content, course_id) VALUES ('Video', 'JavaScript Crash Course', 'Quick overview of JavaScript fundamentals', 3);",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO lecture_notes (course_id, note_title, note_content) VALUES (4, 'Introduction to HTML', 'This is a note about HTML');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO slides (course_id, slide_title, slide_content) VALUES (4, 'HTML Basics', 'Basic HTML elements and tags');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO quizzes (course_id, quiz_title, quiz_questions, quiz_answers) VALUES (4, 'HTML Quiz 1', 'What is HTML?', 'Hypertext Markup Language');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_name, course_description) VALUES ('HTML Fundamentals', 'Introduction to HTML markup language');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO materials (material_type, material_title, material_content, course_id) VALUES ('Document', 'HTML Cheat Sheet', 'Quick reference guide for HTML codes', 4);",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO lecture_notes (course_id, note_title, note_content) VALUES (1, 'Introduction to SQL', 'This is an introduction to SQL.');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO slides (course_id, slide_title, slide_content) VALUES (1, 'SQL Basics', 'These are the basics of SQL commands.');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO quizzes (course_id, quiz_title, quiz_questions, quiz_answers) VALUES (1, 'SQL Quiz 1', 'What is SQL?', 'Structured Query Language');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_name, course_description) VALUES ('SQL Fundamentals', 'A course on the fundamentals of SQL.');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO materials (material_type, material_title, material_content, course_id) VALUES ('Textbook', 'SQL Textbook', 'Introductory textbook on SQL.', 1);",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nUPDATE lecture_notes SET note_content = 'Updated content for Introduction to SQL.' WHERE note_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nUPDATE slides SET slide_content = 'Updated content for SQL Basics.' WHERE slide_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nUPDATE quizzes SET quiz_questions = 'What are the benefits of SQL?' WHERE quiz_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nUPDATE courses SET course_description = 'A comprehensive course on SQL fundamentals.' WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nUPDATE materials SET material_content = 'Updated textbook content for SQL.' WHERE material_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO lecture_notes (course_id, note_title, note_content) VALUES (2, 'Advanced SQL Concepts', 'This covers advanced SQL concepts.');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO slides (course_id, slide_title, slide_content) VALUES (2, 'SQL Performance Tuning', 'Techniques to optimize SQL queries.');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO quizzes (course_id, quiz_title, quiz_questions, quiz_answers) VALUES (2, 'SQL Quiz 2', 'How to improve query performance?', 'Use indexes and optimize queries.');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_name, course_description) VALUES ('SQL Optimization', 'A course on optimizing SQL queries for performance.');",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nINSERT INTO materials (material_type, material_title, material_content, course_id) VALUES ('Video Tutorial', 'SQL Performance Tutorial', 'Tutorial on optimizing SQL performance.', 2);",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nUPDATE lecture_notes SET note_content = 'Updated content for Advanced SQL Concepts.' WHERE note_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nUPDATE slides SET slide_content = 'Updated content for SQL Performance Tuning.' WHERE slide_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nUPDATE quizzes SET quiz_questions = 'How does indexing improve query performance in SQL?' WHERE quiz_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nUPDATE courses SET course_description = 'A focused course on SQL query optimization.' WHERE course_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE lecture_notes (\n    note_id SERIAL PRIMARY KEY,\n    course_id INT,\n    note_title VARCHAR(255),\n    note_content TEXT\n);\n\n\nCREATE TABLE slides (\n    slide_id SERIAL PRIMARY KEY,\n    course_id INT,\n    slide_title VARCHAR(255),\n    slide_content TEXT\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id SERIAL PRIMARY KEY,\n    course_id INT,\n    quiz_title VARCHAR(255),\n    quiz_questions TEXT,\n    quiz_answers TEXT\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT\n);\n\n\nCREATE TABLE materials (\n    material_id SERIAL PRIMARY KEY,\n    material_type VARCHAR(50),\n    material_title VARCHAR(255),\n    material_content TEXT,\n    course_id INT\n);\n\n### STATEMENT\n\nUPDATE materials SET material_content = 'Updated video tutorial for SQL performance.' WHERE material_id = 2;"
]