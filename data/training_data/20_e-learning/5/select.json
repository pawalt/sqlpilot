[
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT message_id, sender_id, receiver_id FROM message;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT message_text FROM message WHERE sender_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE receiver_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT message_id, message_text, sent_at FROM message WHERE sender_id = '123e4567-e89b-12d3-a456-426614174000' ORDER BY sent_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(message_id) AS total_messages FROM message;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT sender_id, COUNT(message_id) AS total_sent_messages FROM message GROUP BY sender_id;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT receiver_id, MAX(sent_at) AS last_received_message FROM message GROUP BY receiver_id;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT sender_id, COUNT(message_id) AS total_sent_messages FROM message WHERE sent_at >= '2022-01-01' GROUP BY sender_id;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE sent_at BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE sender_id = receiver_id;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT sender_id FROM message;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE message_text LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE message_text ILIKE '%hello%' OR message_text ILIKE '%hi%';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE sender_id = '123e4567-e89b-12d3-a456-426614174000' AND receiver_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT sender_id, COUNT(DISTINCT receiver_id) AS total_unique_contacts FROM message GROUP BY sender_id;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT sender_id, COUNT(message_id) AS total_sent_messages FROM message HAVING COUNT(message_id) > 10;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message ORDER BY sent_at ASC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT sender_id, COUNT(message_id) AS total_sent_messages FROM message WHERE sent_at >= '2022-01-01' AND sent_at < '2022-02-01' GROUP BY sender_id;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT sender_id, receiver_id, AVG(EXTRACT(EPOCH FROM sent_at)) AS avg_response_time FROM message GROUP BY sender_id, receiver_id HAVING COUNT(message_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE sender_id = '123' AND receiver_id = '456';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT message_text FROM message WHERE sender_id = '789';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT sender_id, receiver_id FROM message WHERE sent_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE sender_id = '101' OR receiver_id = '202';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM message WHERE sender_id = '303';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE sender_id = '404' ORDER BY sent_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT sender_id FROM message;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE sender_id IN ('111', '222', '333');",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE receiver_id = '555' AND message_text LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT sender_id, receiver_id, COUNT(*) FROM message GROUP BY sender_id, receiver_id HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(sent_at), MIN(sent_at) FROM message;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT sender_id, COUNT(*) AS message_count FROM message GROUP BY sender_id ORDER BY message_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE EXTRACT(MONTH FROM sent_at) = 10;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT sender_id, COUNT(*) AS message_count FROM message WHERE sender_id IS NOT NULL GROUP BY sender_id HAVING COUNT(*) >= 3;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE sender_id = '777' UNION SELECT * FROM message WHERE receiver_id = '888';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT sender_id, COUNT(*) AS message_count FROM message GROUP BY sender_id ORDER BY message_count LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM message WHERE sent_at BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT message_text FROM message WHERE sender_id = '999' AND sent_at BETWEEN '2022-02-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT sender_id, AVG(EXTRACT(EPOCH FROM sent_at)) AS avg_time FROM message GROUP BY sender_id;",
  "### TABLEDATA\n\nCREATE TABLE message (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_text TEXT,\n    sent_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT EXTRACT(YEAR FROM sent_at) AS year FROM message;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT email FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT instructor_id, instructor_name FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT email FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, email FROM Students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Instructors WHERE instructor_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name FROM Students WHERE email = 'example@email.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_name LIKE '%son';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students ORDER BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_name IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE email LIKE '%@domain.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_name = 'Alice' OR student_name = 'Bob';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_name = 'Alice' AND email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_name = 'Alice' LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Instructors WHERE instructor_name = 'John' OR instructor_name = 'Jane';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_id > 100;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students ORDER BY student_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, instructor_name FROM Students JOIN Instructors ON Students.student_id = Instructors.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_id IN (SELECT instructor_id FROM Instructors);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, email FROM Students WHERE student_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_id = (SELECT MAX(student_id) FROM Students);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_id = (SELECT MIN(student_id) FROM Students);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_name IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_name LIKE '%Doe%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS total_students FROM Students GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(*) AS total_students FROM Students GROUP BY student_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_students FROM Students UNION SELECT COUNT(*) AS total_instructors FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students UNION SELECT * FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_id = (SELECT student_id FROM Instructors WHERE instructor_name = 'Jane Smith');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_id = (SELECT MAX(instructor_id) FROM Instructors WHERE instructor_name = 'John Doe');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_id = (SELECT MIN(instructor_id) FROM Instructors WHERE instructor_name = 'Alice');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_id = (SELECT AVG(instructor_id) FROM Instructors);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT instructor_name, instructor_email FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Messages;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT sender_id, recipient_id, message_text FROM Messages;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT message_id, message_timestamp FROM Messages;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, student_email, instructor_name, instructor_email FROM Students, Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, student_email, sender_id, recipient_id, message_text FROM Students, Messages;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT instructor_name, instructor_email, sender_id, recipient_id, message_text FROM Instructors, Messages;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, student_email, instructor_name, instructor_email, sender_id, recipient_id, message_text FROM Students, Instructors, Messages;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name FROM Students WHERE student_email = 'example@email.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT instructor_name FROM Instructors WHERE instructor_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT message_text FROM Messages WHERE sender_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT message_text FROM Messages WHERE message_timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name, message_text FROM Students, Instructors, Messages WHERE Students.student_id = Messages.sender_id AND Instructors.instructor_id = Messages.recipient_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name, message_text FROM Students INNER JOIN Messages ON Students.student_id = Messages.sender_id INNER JOIN Instructors ON Instructors.instructor_id = Messages.recipient_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name AS student, instructor_name AS instructor, message_text AS message FROM Students, Instructors, Messages WHERE Students.student_id = Messages.sender_id AND Instructors.instructor_id = Messages.recipient_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, student_email FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT instructor_id, instructor_name, instructor_email FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT message_id, sender_id, recipient_id, message_text, message_timestamp FROM Messages;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM Students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT instructor_name, instructor_email FROM Instructors WHERE instructor_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT message_text, message_timestamp FROM Messages WHERE message_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM Students WHERE student_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT instructor_name, instructor_email FROM Instructors WHERE instructor_name LIKE 'B%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT message_text, message_timestamp FROM Messages WHERE message_text LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students JOIN Messages ON Students.student_id = Messages.sender_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Instructors JOIN Messages ON Instructors.instructor_id = Messages.recipient_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT Students.student_name, Messages.message_text FROM Students JOIN Messages ON Students.student_id = Messages.sender_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT Instructors.instructor_name, Messages.message_text FROM Instructors JOIN Messages ON Instructors.instructor_id = Messages.recipient_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(student_id) AS num_students FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(instructor_id) AS num_instructors FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(message_id) AS num_messages FROM Messages;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(message_id) AS num_messages FROM Students JOIN Messages ON Students.student_id = Messages.sender_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT instructor_name, COUNT(message_id) AS num_messages FROM Instructors JOIN Messages ON Instructors.instructor_id = Messages.recipient_id GROUP BY instructor_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, AVG(message_timestamp) AS avg_timestamp FROM Students JOIN Messages ON Students.student_id = Messages.sender_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_text TEXT,\n    message_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT instructor_name, AVG(message_timestamp) AS avg_timestamp FROM Instructors JOIN Messages ON Instructors.instructor_id = Messages.recipient_id GROUP BY instructor_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_name, instructor_department FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM messages;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT message_id, sender_id, recipient_id FROM messages;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM conversations;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT conversation_id, student_id, instructor_id FROM conversations;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_course FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_name, instructor_department FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT sender_id, recipient_id, message_content FROM messages;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_name, instructor_email, instructor_department FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_email, student_course FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT message_id, message_content, message_date FROM messages;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT conversation_id, start_date, end_date FROM conversations;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_id, student_course FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_name, instructor_id, instructor_department FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT sender_id, message_content, message_date FROM messages;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_name, instructor_email, instructor_department FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_email, student_course FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_course = 'Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM students WHERE student_course = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_name, instructor_department FROM instructors WHERE instructor_department = 'Science';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM students JOIN conversations ON students.student_id = conversations.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, message_content FROM students JOIN messages ON students.student_id = messages.sender_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name, message_date FROM students JOIN conversations ON students.student_id = conversations.student_id JOIN instructors ON conversations.instructor_id = instructors.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM conversations WHERE end_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name, start_date FROM students JOIN conversations ON students.student_id = conversations.student_id JOIN instructors ON conversations.instructor_id = instructors.instructor_id WHERE student_course = 'Physics';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, AVG(message_id) AS average_message_id FROM students JOIN messages ON students.student_id = messages.sender_id GROUP BY student_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM students WHERE student_id IN (SELECT student_id FROM conversations WHERE end_date IS NULL);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, MAX(message_date) FROM students JOIN messages ON students.student_id = messages.sender_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(*) AS total_messages FROM students JOIN messages ON students.student_id = messages.sender_id GROUP BY student_name ORDER BY total_messages DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT student_name, student_course FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(conversation_id) AS avg_conversation_id FROM conversations;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name, AVG(DATEDIFF(end_date, start_date)) AS avg_duration FROM conversations JOIN students ON conversations.student_id = students.student_id JOIN instructors ON conversations.instructor_id = instructors.instructor_id GROUP BY student_name, instructor_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(*) AS total_conversations FROM students JOIN conversations ON students.student_id = conversations.student_id GROUP BY student_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(conversation_id) AS avg_conversation_id FROM conversations WHERE student_id IN (SELECT student_id FROM students WHERE student_course = 'Biology');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, MAX(conversation_id) AS max_conversation_id FROM students JOIN conversations ON students.student_id = conversations.student_id GROUP BY student_name ORDER BY max_conversation_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE,\n    student_course VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    instructor_email VARCHAR(50) UNIQUE,\n    instructor_department VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    recipient_id INT,\n    message_content TEXT,\n    message_date TIMESTAMP\n);\n\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    student_id INT,\n    instructor_id INT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT student_id) AS unique_students FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_name FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT message_content, message_timestamp FROM messages;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, instructor_id FROM student_instructor;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM students WHERE student_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM messages WHERE sender_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_name FROM instructors WHERE instructor_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE notification_type = 'info';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM students WHERE student_id IN (SELECT student_id FROM student_instructor WHERE instructor_id = '123e4567-e89b-12d3-a456-426614174001');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM messages WHERE message_timestamp > '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT sender_id, receiver_id FROM messages WHERE message_content LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE notification_timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-01-31 23:59:59';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(message_timestamp) FROM messages;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(message_content) FROM messages;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT instructor_name FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM messages ORDER BY message_timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(*) AS messages_sent FROM messages JOIN students ON messages.sender_id = students.student_id GROUP BY student_name HAVING messages_sent > 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM students WHERE student_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_name, instructor_email FROM instructors WHERE instructor_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM messages WHERE message_timestamp > '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name FROM students s JOIN student_instructor si ON s.student_id = si.student_id JOIN instructors i ON si.instructor_id = i.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM messages WHERE receiver_id = '123e4567-e89b-12d3-a456-426614174002' ORDER BY message_timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_type, notification_timestamp FROM notifications WHERE recipient_id = '123e4567-e89b-12d3-a456-426614174003';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM students WHERE student_id IN (SELECT student_id FROM student_instructor WHERE instructor_id = '123e4567-e89b-12d3-a456-426614174004');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE notification_timestamp < '2023-06-01' ORDER BY notification_timestamp ASC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM messages WHERE sender_id = '123e4567-e89b-12d3-a456-426614174005' AND receiver_id = '123e4567-e89b-12d3-a456-426614174006';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name FROM students s, student_instructor si, instructors i WHERE s.student_id = si.student_id AND si.instructor_id = i.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_name = 'Alice' AND student_email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT sender_id, receiver_id, message_content FROM messages WHERE message_content LIKE '%important%' OR message_content LIKE '%urgent%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_type, COUNT(notification_id) AS num_notifications FROM notifications GROUP BY notification_type;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM messages WHERE message_timestamp BETWEEN '2023-01-01' AND '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM students s LEFT JOIN student_instructor si ON s.student_id = si.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT SUM(notification_id) AS total_notifications FROM notifications WHERE notification_timestamp > '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name FROM students s JOIN student_instructor si ON s.student_id = si.student_id JOIN instructors i ON si.instructor_id = i.instructor_id WHERE student_name = 'Bob' OR instructor_name = 'Jane';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(instructor_id) AS num_instructors FROM student_instructor GROUP BY student_id HAVING COUNT(instructor_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name STRING,\n    student_email STRING\n);\n\n\nCREATE TABLE instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name STRING,\n    instructor_email STRING\n);\n\n\nCREATE TABLE messages (\n    message_id UUID PRIMARY KEY,\n    sender_id UUID,\n    receiver_id UUID,\n    message_content STRING,\n    message_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE student_instructor (\n    student_id UUID,\n    instructor_id UUID\n);\n\n\nCREATE TABLE notifications (\n    notification_id UUID PRIMARY KEY,\n    message_id UUID,\n    recipient_id UUID,\n    notification_type STRING,\n    notification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM messages WHERE sender_id = receiver_id;"
]