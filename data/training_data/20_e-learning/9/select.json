[
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM learning_experience;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, course_id FROM learning_experience;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, enrollment_date FROM learning_experience;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM learning_experience WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM learning_experience WHERE course_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, completion_status FROM learning_experience WHERE completion_status = true;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, course_id FROM learning_experience WHERE enrollment_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM learning_experience WHERE completion_status = false;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, enrollment_date FROM learning_experience WHERE enrollment_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, completion_date FROM learning_experience WHERE completion_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, course_id FROM learning_experience ORDER BY course_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM learning_experience WHERE student_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, enrollment_date FROM learning_experience WHERE course_id = 200;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM learning_experience WHERE completion_date < '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM learning_experience WHERE completion_status = true AND enrollment_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, course_id FROM learning_experience WHERE completion_status = false;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM learning_experience;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT DISTINCT course_id FROM learning_experience;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT AVG(course_id) FROM learning_experience;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT MAX(enrollment_date) FROM learning_experience;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM learning_experience WHERE student_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, enrollment_date FROM learning_experience WHERE completion_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, enrollment_date, completion_date FROM learning_experience WHERE completion_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, completion_date FROM learning_experience WHERE enrollment_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM learning_experience WHERE completion_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT AVG(course_id) FROM learning_experience WHERE student_id = 200;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT MAX(enrollment_date) FROM learning_experience WHERE course_id = 300;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT MIN(completion_date) FROM learning_experience WHERE student_id = 400;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, completion_status FROM learning_experience WHERE completion_date BETWEEN '2022-01-01' AND '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM learning_experience WHERE student_id = 500 AND completion_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, enrollment_date, completion_status FROM learning_experience WHERE course_id = 600 AND enrollment_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, completion_status FROM learning_experience WHERE completion_status = TRUE AND enrollment_date BETWEEN '2022-01-01' AND '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, completion_status FROM learning_experience WHERE student_id = 700 OR course_id = 800;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, course_id FROM learning_experience WHERE enrollment_date >= '2022-01-01' OR completion_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM learning_experience WHERE completion_status != FALSE;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, completion_date FROM learning_experience WHERE student_id = 900 AND enrollment_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, completion_status FROM learning_experience WHERE enrollment_date <= '2022-12-31' AND completion_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, completion_date FROM learning_experience WHERE course_id = 1000 AND completion_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, enrollment_date, completion_date FROM learning_experience WHERE enrollment_date = completion_date;",
  "### TABLEDATA\n\nCREATE TABLE learning_experience (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    enrollment_date DATE,\n    completion_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT student_id, completion_status FROM learning_experience WHERE enrollment_date = '2022-06-30' AND completion_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT name, grade FROM students WHERE age > 20;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT * FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM courses WHERE credits > 3;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT * FROM students WHERE major = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT name, grade FROM students WHERE major = 'Engineering';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT * FROM courses WHERE dept = 'Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM courses WHERE credits > 2 AND dept = 'Science';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT * FROM students WHERE age < 25;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT name, age FROM students WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT * FROM courses WHERE credits <= 4;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM courses WHERE course_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT * FROM students WHERE major = 'Biology' AND age >= 21;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT name, age FROM students WHERE grade = 'B' AND major = 'Physics';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT * FROM courses WHERE dept = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM courses WHERE credits = 5;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT * FROM students WHERE age BETWEEN 18 AND 22;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT name, grade FROM students WHERE major = 'Chemistry';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT * FROM courses WHERE instructor = 'Professor Smith';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM courses WHERE dept = 'Engineering';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, students.grade, courses.course_name FROM students JOIN courses ON students.major = courses.dept WHERE students.age > 20 AND courses.credits > 3;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT courses.course_name, courses.instructor, students.name FROM courses JOIN students ON courses.dept = students.major WHERE students.grade = 'A' AND courses.credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT courses.course_name, students.name FROM courses LEFT JOIN students ON courses.dept = students.major;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, students.age, courses.course_name, courses.instructor FROM students LEFT JOIN courses ON students.major = courses.dept WHERE students.age < 25;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, courses.course_name FROM students INNER JOIN courses ON students.major = courses.dept WHERE students.age >= 20 AND courses.credits >= 3;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, courses.course_name FROM students LEFT JOIN courses ON students.major = courses.dept WHERE students.major IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, students.age, courses.course_name FROM students LEFT JOIN courses ON students.major = courses.dept;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, courses.course_name FROM students RIGHT JOIN courses ON students.major = courses.dept;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, courses.course_name FROM students JOIN courses ON students.major = courses.dept WHERE students.grade != 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, courses.course_name, students.age FROM students JOIN courses ON students.major = courses.dept WHERE students.age BETWEEN 20 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, courses.course_name, students.major FROM students JOIN courses ON students.major = courses.dept WHERE courses.credits > 2 AND courses.credits < 5;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, students.age, courses.course_name, courses.instructor FROM students JOIN courses ON students.major = courses.dept WHERE students.grade = 'A' OR students.grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT courses.course_name, courses.instructor, students.name FROM courses JOIN students ON courses.dept = students.major WHERE students.age > 25 AND courses.credits < 4;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, students.age, courses.course_name FROM students LEFT JOIN courses ON students.major = courses.dept WHERE students.age > 18 AND courses.credits > 4;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, students.age, courses.course_name FROM students RIGHT JOIN courses ON students.major = courses.dept WHERE students.age < 30;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, courses.course_name FROM students JOIN courses ON students.major = courses.dept WHERE students.major IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, students.age, courses.course_name, courses.instructor FROM students JOIN courses ON students.major = courses.dept WHERE students.age >= 22 AND courses.credits >= 4;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, courses.course_name, students.major FROM students JOIN courses ON students.major = courses.dept WHERE students.grade = 'A' OR students.grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT courses.course_name, courses.credits, students.name FROM courses JOIN students ON courses.dept = students.major WHERE students.age > 21 AND courses.credits > 3;",
  "### TABLEDATA\n\nCREATE TABLE students (id INT PRIMARY KEY,\nname VARCHAR(50),\ngrade VARCHAR(10),\nage INT,\nmajor VARCHAR(50));\n\nCREATE TABLE courses (course_id INT PRIMARY KEY,\ncourse_name VARCHAR(50),\ninstructor VARCHAR(50),\ndept VARCHAR(50),\ncredits INT);\n\n### STATEMENT\n\nSELECT students.name, courses.course_name, students.age FROM students JOIN courses ON students.major = courses.dept WHERE students.age < 28;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, major FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_id, birth_date FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT course_name, department FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT course_id, credits FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Enrollments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_id, course_id FROM Enrollments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT enrollment_id, enrollment_date FROM Enrollments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students, Courses WHERE Students.student_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students, Courses, Enrollments WHERE Students.student_id = Enrollments.student_id AND Courses.course_id = Enrollments.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, enrollment_date FROM Students, Courses, Enrollments WHERE Students.student_id = Enrollments.student_id AND Courses.course_id = Enrollments.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, department, credits FROM Students JOIN Courses ON Students.major = Courses.department;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, enrollment_date FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, enrollment_date FROM Students INNER JOIN Enrollments ON Students.student_id = Enrollments.student_id INNER JOIN Courses ON Enrollments.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, enrollment_date FROM Students LEFT JOIN Enrollments ON Students.student_id = Enrollments.student_id LEFT JOIN Courses ON Enrollments.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, enrollment_date FROM Students RIGHT JOIN Enrollments ON Students.student_id = Enrollments.student_id RIGHT JOIN Courses ON Enrollments.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, enrollment_date FROM Students FULL JOIN Enrollments ON Students.student_id = Enrollments.student_id FULL JOIN Courses ON Enrollments.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, birth_date, course_id, course_name, department FROM Students, Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Students",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, major FROM Students",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, credits FROM Courses",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Enrollments",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT Students.student_id, Students.student_name, Courses.course_name FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT Students.student_name, Courses.credits FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_id, count(course_id) AS courses_enrolled FROM Enrollments GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT major, avg(credits) AS avg_credits FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id GROUP BY major",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, enrollment_date FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id ORDER BY enrollment_date DESC",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, count(enrollment_id) AS total_enrollments FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id GROUP BY student_name HAVING total_enrollments > 5",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT department, sum(credits) AS total_credits FROM Courses GROUP BY department HAVING total_credits > 50",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT Students.student_name, Courses.course_name, Courses.credits FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id JOIN Students ON Enrollments.student_id = Students.student_id ORDER BY Students.student_name, Courses.course_name",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE birth_date BETWEEN '1990-01-01' AND '2000-12-31'",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, major FROM Students WHERE major IN ('Computer Science', 'Mathematics')",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, enrollment_date FROM Enrollments WHERE enrollment_date > '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE Students (\n   student_id INT PRIMARY KEY,\n   student_name VARCHAR(255),\n   birth_date DATE,\n   major VARCHAR(100)\n);\n\nCREATE TABLE Courses (\n   course_id INT PRIMARY KEY,\n   course_name VARCHAR(255),\n   department VARCHAR(100),\n   credits INT\n);\n\nCREATE TABLE Enrollments (\n   enrollment_id INT PRIMARY KEY,\n   student_id INT,\n   course_id INT,\n   enrollment_date DATE\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE Courses.credits > 3",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, age FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT course_id, credits FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM enrollments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_id, course_id FROM enrollments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT enrollment_id, enrollment_date FROM enrollments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM grades;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT enrollment_id, course_id FROM grades;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT grade_id, grade_value FROM grades;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, grade_value FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN grades ON enrollments.enrollment_id = grades.enrollment_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade_value FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id JOIN grades ON enrollments.enrollment_id = grades.enrollment_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE age > 18;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM courses WHERE credits >= 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM enrollments WHERE enrollment_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM grades WHERE grade_value >= 80.0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, age FROM students WHERE age > 20;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, grade FROM students WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, age, grade FROM students WHERE age > 20 AND grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM courses WHERE credits > 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE grade_value > 80;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, enrollment_date FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE enrollment_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, enrollment_date, grade_value FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN grades ON enrollments.enrollment_id = grades.enrollment_id WHERE grade_value < 60;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, age, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE age BETWEEN 20 AND 25;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, grade FROM students WHERE grade IN ('A', 'B');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE instructor = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id ORDER BY student_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id ORDER BY enrollment_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_students FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(credits) AS max_credits FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(course_id) AS total_courses FROM students JOIN enrollments ON students.student_id = enrollments.student_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    credits INT\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    course_id INT,\n    grade_value FLOAT\n);\n\n### STATEMENT\n\nSELECT student_name, AVG(grade_value) AS average_grade FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN grades ON enrollments.enrollment_id = grades.enrollment_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, enrollment_date FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT course_name FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT instructor_name, department_id FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT department_name FROM Departments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT instructor_name, course_name, start_date FROM Instructors JOIN Courses ON Instructors.instructor_id = Courses.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, enrollment_date, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT course_name, start_date FROM Courses WHERE start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, enrollment_date FROM Students WHERE enrollment_date < '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT course_name, instructor_name FROM Courses JOIN Instructors ON Courses.instructor_id = Instructors.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT department_name, instructor_name FROM Departments JOIN Instructors ON Departments.department_id = Instructors.department_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id ORDER BY grade DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT course_name, COUNT(*) AS enrolled_students FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT instructor_name, AVG(grade) AS average_grade FROM Instructors JOIN Courses ON Instructors.instructor_id = Courses.instructor_id JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY instructor_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, SUM(CASE WHEN grade = 'A' THEN 1 ELSE 0 END) AS total_A_grades FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT instructor_name, COUNT(*) AS num_courses FROM Instructors JOIN Courses ON Instructors.instructor_id = Courses.instructor_id GROUP BY instructor_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT MAX(enrollment_date) AS latest_enrollment_date FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, course_id FROM Students WHERE enrollment_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT Students.student_name, Courses.course_name FROM Students JOIN Courses ON Students.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT Students.student_name, Courses.course_name, Instructors.instructor_name FROM Students JOIN Courses ON Students.course_id = Courses.course_id JOIN Instructors ON Courses.instructor_id = Instructors.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, instructor_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id JOIN Instructors ON Courses.instructor_id = Instructors.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade != 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade IN ('A', 'B');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_students FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT department_name, COUNT(student_id) AS total_students FROM Departments JOIN Instructors ON Departments.department_id = Instructors.department_id JOIN Courses ON Instructors.instructor_id = Courses.instructor_id JOIN Students ON Courses.course_id = Students.course_id GROUP BY department_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT department_name, AVG(grade) AS avg_grade FROM Departments JOIN Instructors ON Departments.department_id = Instructors.department_id JOIN Courses ON Instructors.instructor_id = Courses.instructor_id JOIN Students ON Courses.course_id = Students.course_id JOIN Grades ON Students.student_id = Grades.student_id GROUP BY department_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT course_name, MIN(grade) AS min_grade FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT course_name, MAX(grade) AS max_grade FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT instructor_name, COUNT(course_id) AS total_courses FROM Instructors JOIN Courses ON Instructors.instructor_id = Courses.instructor_id GROUP BY instructor_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT course_name, start_date FROM Courses WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT course_name, start_date FROM Courses WHERE start_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name FROM Students JOIN Courses ON Students.course_id = Courses.course_id JOIN Instructors ON Courses.instructor_id = Instructors.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    course_id INT,\n    enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor_id INT,\n    start_date DATE\n);\n\n\nCREATE TABLE Instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50),\n    department_id INT\n);\n\n\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2)\n);\n\n### STATEMENT\n\nSELECT department_name, AVG(DATEDIFF(enrollment_date, start_date)) AS avg_days_to_enroll FROM Students JOIN Courses ON Students.course_id = Courses.course_id JOIN Instructors ON Courses.instructor_id = Instructors.instructor_id JOIN Departments ON Instructors.department_id = Departments.department_id GROUP BY department_name;"
]