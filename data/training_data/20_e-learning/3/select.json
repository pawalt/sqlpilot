[
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, username FROM users WHERE role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, role FROM users WHERE username LIKE 'j%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, role FROM users WHERE role IN ('admin', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE role = 'user' AND password = 'password123';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, role FROM users WHERE id != '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE role = 'admin' ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, username, role FROM users WHERE role = 'user' ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT MAX(id) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT MIN(id) FROM users WHERE role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT role FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE role = 'user' LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE role = 'admin' OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, username FROM users WHERE role = 'admin' AND username LIKE 'a%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE role = 'user' OR role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, COUNT(*) FROM users GROUP BY id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT role, COUNT(*) FROM users GROUP BY role HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, username FROM users WHERE role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE role = 'user' AND password LIKE '%pass%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, username FROM users WHERE role IN ('admin', 'manager');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT role FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, role FROM users WHERE username LIKE 'a%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT MAX(id) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT AVG(id) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE username ILIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE password IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, role FROM users WHERE id > 5 AND id < 10;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT role) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, username FROM users WHERE id BETWEEN 1000 AND 2000;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE role = 'admin' OR role = 'manager';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT MIN(id) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE role = 'admin' AND (id < 5 OR id > 10);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE username LIKE '%abc%' OR username LIKE '%xyz%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, student_email FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, student_email FROM students WHERE student_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, student_email FROM students WHERE student_email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM teachers;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_id, teacher_name FROM teachers;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_id, teacher_name, teacher_email FROM teachers WHERE teacher_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_id, teacher_name, teacher_email FROM teachers WHERE teacher_name = 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_id, teacher_name, teacher_email FROM teachers WHERE teacher_email = 'jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM teachers WHERE teacher_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, teacher_id, teacher_name FROM students JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, teacher_id, teacher_name FROM students INNER JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, teacher_id, teacher_name FROM students LEFT JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, teacher_id, teacher_name FROM students RIGHT JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(*) AS student_count FROM students GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_name, COUNT(*) AS teacher_count FROM teachers GROUP BY teacher_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students, teachers WHERE students.student_id = 1 AND teachers.teacher_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students CROSS JOIN teachers WHERE student_id = 1 AND teacher_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM students WHERE student_id > 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_name, teacher_email FROM teachers WHERE teacher_id < 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_students FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_teachers FROM teachers;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students INNER JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students INNER JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students LEFT JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students LEFT JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students RIGHT JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students RIGHT JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students FULL JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students FULL JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students INNER JOIN teachers ON students.student_id = teachers.teacher_id WHERE students.student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students INNER JOIN teachers ON students.student_id = teachers.teacher_id WHERE students.student_id > 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students LEFT JOIN teachers ON students.student_id = teachers.teacher_id WHERE students.student_id < 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students LEFT JOIN teachers ON students.student_id = teachers.teacher_id WHERE students.student_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students RIGHT JOIN teachers ON students.student_id = teachers.teacher_id WHERE teachers.teacher_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students RIGHT JOIN teachers ON students.student_id = teachers.teacher_id WHERE students.student_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students FULL JOIN teachers ON students.student_id = teachers.teacher_id WHERE students.student_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students FULL JOIN teachers ON students.student_id = teachers.teacher_id WHERE teachers.teacher_id < 8;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_name, teacher_email FROM teachers;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT admin_name, admin_email FROM administrators;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_id, teacher_name FROM teachers WHERE teacher_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT admin_id, admin_name FROM administrators WHERE admin_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM teachers WHERE teacher_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM administrators WHERE admin_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM teachers WHERE teacher_email = 'teacher@example.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM administrators WHERE admin_password = 'password123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(student_id) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(teacher_id) FROM teachers;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(admin_id) FROM administrators;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(student_id) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT(student_name) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students ORDER BY student_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM teachers WHERE teacher_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT admin_name, admin_email FROM administrators WHERE admin_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_name FROM teachers WHERE teacher_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students JOIN teachers ON students.student_name = teachers.teacher_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students JOIN teachers ON students.student_id = teachers.teacher_id WHERE teachers.teacher_name = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT admin_name FROM administrators WHERE admin_email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS student_count FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(teacher_id) AS max_teacher_id FROM teachers;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT admin_name FROM administrators;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students LEFT JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(student_id) AS student_count, MAX(student_id) AS max_student_id FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_name, COUNT(*) AS student_count FROM teachers LEFT JOIN students ON teachers.teacher_id = students.student_id GROUP BY teacher_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students INNER JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM students RIGHT JOIN teachers ON students.student_id = teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name FROM students ORDER BY student_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_name LIKE '%son%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT admin_email, COUNT(*) AS admin_count FROM administrators GROUP BY admin_email HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT name, email FROM teachers;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT password FROM administrators;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, name, email, password FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM teachers WHERE teacher_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT name, email FROM administrators WHERE admin_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE email = 'example@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, name FROM students WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM teachers WHERE email LIKE '%@company.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM administrators WHERE password = 'admin123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM teachers ORDER BY teacher_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT name FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(student_id) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM teachers;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT SUM(teacher_id) FROM teachers;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(admin_id) FROM administrators;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(student_id) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT name, email FROM teachers WHERE teacher_id > 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM administrators WHERE name IN ('Alice', 'Bob');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT name, email FROM teachers WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM administrators WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students s INNER JOIN teachers t ON s.student_id = t.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT s.name AS student_name, t.name AS teacher_name FROM students s LEFT JOIN teachers t ON s.student_id = t.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id IN (SELECT user_id FROM user_roles WHERE role = 'student');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT name, email FROM administrators WHERE admin_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, name FROM students UNION SELECT teacher_id, name FROM teachers;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE name LIKE '%John%' AND email LIKE '%@domain.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM teachers ORDER BY name DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT role) FROM user_roles;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM administrators WHERE email IN (SELECT email FROM teachers);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT name, COUNT(*) AS student_count FROM students GROUP BY name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(student_id) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id = (SELECT MAX(student_id) FROM students);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM teachers WHERE password IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT email FROM administrators;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id = 1 UNION SELECT * FROM teachers WHERE teacher_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM teachers WHERE teacher_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nSELECT name, email FROM students WHERE student_id = 1 OR email = 'example@example.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT id, username FROM teachers WHERE teacher_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, teacher_id FROM courses WHERE teacher_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT id, student_id, course_id FROM grades WHERE grade > 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT course_id FROM grades;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT username FROM students WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT * FROM teachers WHERE username = 'teacher1';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT * FROM administrators WHERE admin_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT course_id, students_enrolled FROM courses WHERE teacher_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT id, student_id, grade FROM grades WHERE grade < 60;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, students_enrolled FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT id, username, password FROM students WHERE id = 7;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT teacher_id, course_id FROM courses WHERE course_name LIKE 'Math%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT id, student_id, course_id, grade FROM grades WHERE student_id = 8 AND grade >= 80;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT id, course_id, grade FROM grades WHERE student_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, teacher_id FROM courses WHERE teacher_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE username = 'student1';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT id, username, password FROM administrators WHERE username = 'admin1';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT course_id, course_name FROM courses WHERE teacher_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT id, student_id, grade FROM grades WHERE course_id = 3 AND grade < 70;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT username, student_id FROM students WHERE username LIKE '%john%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT id, course_name FROM courses WHERE teacher_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT * FROM teachers WHERE id = (SELECT teacher_id FROM courses WHERE course_id = 101);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT course_name, grade FROM courses JOIN grades ON courses.course_id = grades.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT courses.course_name, COUNT(students.id) AS num_students FROM courses LEFT JOIN students ON courses.teacher_id = students.id GROUP BY courses.course_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT course_name, AVG(grade) AS avg_grade FROM courses JOIN grades ON courses.course_id = grades.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id IN (SELECT student_id FROM grades WHERE grade < 60);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT course_name, teacher_id, jsonb_array_length(students_enrolled) AS num_enrolled_students FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT * FROM administrators WHERE admin_id = (SELECT MAX(admin_id) FROM administrators);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT * FROM teachers UNION SELECT * FROM administrators;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT course_name, teachers.username AS teacher_username, administrators.username AS admin_username FROM courses JOIN teachers ON courses.teacher_id = teachers.id JOIN administrators ON administrators.admin_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT students.id) AS num_students, AVG(grade) AS avg_grade FROM students JOIN grades ON students.id = grades.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT course_name, teacher_id, COUNT(grade) AS num_grades FROM courses LEFT JOIN grades ON courses.course_id = grades.course_id GROUP BY course_name, teacher_id HAVING COUNT(grade) > 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT student_id, SUM(grade) AS total_grade FROM grades GROUP BY student_id HAVING SUM(grade) > 200;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT course_name, teacher_id, grade FROM courses JOIN grades ON courses.course_id = grades.course_id ORDER BY grade DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT MAX(grade) AS max_grade, MIN(grade) AS min_grade FROM grades WHERE student_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT AVG(grade) AS avg_grade FROM grades WHERE course_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE username IN (SELECT username FROM teachers);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nSELECT course_name, COUNT(student_id) AS num_students FROM courses LEFT JOIN grades ON courses.course_id = grades.course_id GROUP BY course_name HAVING COUNT(student_id) < 5;"
]