[
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('f3b25898-9c97-4348-b06c-121c1b86909d', 'john.doe', 'Passw0rd!', 'admin') ON CONFLICT (username) DO UPDATE SET password = 'NewPassw0rd!', role = 'user';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('d6363a84-e5e9-492a-81cc-8fb511dc7707', 'jane.smith', 'Password123', 'user') ON CONFLICT (username) DO UPDATE SET password = 'NewPassword123', role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('21fd443d-9e2b-4689-a5e8-0b9338d1db0e', 'alice.wonderland', 'qwerty', 'user') ON CONFLICT (username) DO UPDATE SET password = 'NewQwerty', role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('af7c2a8e-8734-4a2e-b775-c1036ac81a87', 'bob.brown', '123456', 'admin') ON CONFLICT (username) DO UPDATE SET password = 'New123456', role = 'user';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('86f12591-9ed2-4c4d-a262-3b66f0a0e246', 'sarah.jones', 'abc123', 'user') ON CONFLICT (username) DO UPDATE SET password = 'NewAbc123', role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('9f5175d3-3c8a-4d5b-87fc-924eeecdb7e3', 'michael.williams', 'password', 'admin') ON CONFLICT (username) DO UPDATE SET password = 'NewPassword', role = 'user';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('1e2d3558-ea36-43ce-b06a-d4d4c6ef264f', 'emily.wilson', 'letmein', 'user') ON CONFLICT (username) DO UPDATE SET password = 'NewLetmein', role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('40f4da00-404c-46f5-b993-e08e3f6c58f1', 'david.miller', 'football', 'admin') ON CONFLICT (username) DO UPDATE SET password = 'NewFootball', role = 'user';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('c2bfed77-2b57-4601-8d2c-4a4254ad9717', 'laura.davis', 'welcome', 'user') ON CONFLICT (username) DO UPDATE SET password = 'NewWelcome', role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('2365c34e-2d71-4451-800e-c3b9ffa80259', 'peter.johnson', 'password123', 'admin') ON CONFLICT (username) DO UPDATE SET password = 'NewPassword123', role = 'user';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('080ec5f1-6c2c-40a7-8559-5855b794cd97', 'amanda.brown', '123abc', 'user') ON CONFLICT (username) DO UPDATE SET password = 'New123abc', role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('3fb8b919-ae03-4c6f-8c2f-5252ce70f485', 'kevin.carter', 'securepass', 'user') ON CONFLICT (username) DO UPDATE SET password = 'NewSecurepass', role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('27575539-5fa9-49f2-9bcb-5965e584ff8c', 'jennifer.wilson', 'password321', 'admin') ON CONFLICT (username) DO UPDATE SET password = 'NewPassword321', role = 'user';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('46cb639b-d7d4-44e4-a4af-bb0bacea9f26', 'mark.jackson', 'iloveyou', 'user') ON CONFLICT (username) DO UPDATE SET password = 'NewIloveyou', role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('c9b6659b-0ec9-4bc7-a268-df5719cbe4be', 'james.anderson', 'password1234', 'admin') ON CONFLICT (username) DO UPDATE SET password = 'NewPassword1234', role = 'user';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('61dabf36-6865-4048-9cb6-dcf1ebeb1e47', 'samantha.wright', 'abcdef', 'user') ON CONFLICT (username) DO UPDATE SET password = 'NewAbcdef', role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('51c6fa78-9f71-4395-82c3-8c484e2f56f7', 'george.clark', 'letmein123', 'admin') ON CONFLICT (username) DO UPDATE SET password = 'NewLetmein123', role = 'user';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('3f9cb272-3579-4322-9289-df06b3972308', 'linda.thomas', 'pass123word', 'user') ON CONFLICT (username) DO UPDATE SET password = 'NewPass123word', role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('a76ee1e2-d46b-4d11-96b3-0f72727fa4d7', 'chris.roberts', 'abcdef123', 'admin') ON CONFLICT (username) DO UPDATE SET password = 'NewAbcdef123', role = 'user';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, role) VALUES ('3b116b7e-875a-4840-b733-f689ae4b8127', 'natalie.young', 'password!@#', 'user') ON CONFLICT (username) DO UPDATE SET password = 'NewPassword!@#', role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('7654bce4-21c8-4ff7-959f-24696f842bdf', 'user1', 'password123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('a5c26872-e6c9-4412-a946-92ead970b90c', 'user2', 'pass456', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('332a376b-8f67-4640-a146-d3b0b1fe0c9b', 'user3', 'secure123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('c7e2aa05-8db6-4b50-a4e2-fe0f03993172', 'user4', 'p@55w0rd', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('ee556849-3b20-4e40-9c82-b438437060e0', 'user5', 'myP@ssw0rd', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('6d9c6e3d-369a-405e-aac9-7b7a5c1db39f', 'user6', 'password321', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('ee7e88da-c722-4bae-a285-c83159ec46e9', 'user7', 'pass123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('a347e365-c72a-4d3b-9fe0-042d4b263567', 'user8', 'securepass', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('cdfbf031-7996-4895-a683-059f1ab0f422', 'user9', 'password123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('93b7ce6c-6697-4902-b1c6-203b3d5f4263', 'user10', 'passw0rd', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('619930d8-a7d1-49a4-a205-fe6016441088', 'user11', 'MyP@ssw0rd', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('7b1da462-9517-4c8c-9f1e-72c3757a6b17', 'user12', 'password321', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('3f77ce43-4c48-4338-b100-d721d493d1a2', 'user13', 'p@ss123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('46161e15-7a07-47a9-af4c-3e08f340d95f', 'user14', 'secure123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('fc1fc17d-6c12-4ce9-a215-9a8d8e235697', 'user15', 'password432', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('06f5d1bf-6cf7-456c-8ec4-a61c68f2e01a', 'user16', 'pass456', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('e5e3c73b-eeab-4b1d-b50b-9637ec3719ba', 'user17', 'mySecurePass', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('f9a1b46e-8c37-4a26-8104-87e0696bb857', 'user18', 'securepass123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('d1f80f64-d203-4c09-9d26-e03d9d73fafa', 'user19', 'password123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    role VARCHAR(20) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO users (id, username, password, role) VALUES ('4afde9e1-77cc-4b9e-bfe1-8d3341292297', 'user20', 'p@ssw0rd123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (1, 'Alice', 'alice@example.com', 'password123') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice', student_email = 'alice@example.com', student_password = 'password123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (2, 'Bob', 'bob@example.com', 'pass456') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob', student_email = 'bob@example.com', student_password = 'pass456';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (3, 'Charlie', 'charlie@example.com', 'test789') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Charlie', student_email = 'charlie@example.com', student_password = 'test789';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (4, 'David', 'david@example.com', 'davidpass') ON CONFLICT (student_id) DO UPDATE SET student_name = 'David', student_email = 'david@example.com', student_password = 'davidpass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (5, 'Emma', 'emma@example.com', 'emma123') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Emma', student_email = 'emma@example.com', student_password = 'emma123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (6, 'Frank', 'frank@example.com', 'abc456') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Frank', student_email = 'frank@example.com', student_password = 'abc456';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (7, 'Grace', 'grace@example.com', 'gracepass') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Grace', student_email = 'grace@example.com', student_password = 'gracepass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (8, 'Henry', 'henry@example.com', 'henry789') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Henry', student_email = 'henry@example.com', student_password = 'henry789';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (9, 'Ivy', 'ivy@example.com', 'ivy456') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Ivy', student_email = 'ivy@example.com', student_password = 'ivy456';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (10, 'Jack', 'jack@example.com', 'jackpass') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Jack', student_email = 'jack@example.com', student_password = 'jackpass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (11, 'Kate', 'kate@example.com', 'kate123') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Kate', student_email = 'kate@example.com', student_password = 'kate123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (12, 'Leo', 'leo@example.com', 'leo456') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Leo', student_email = 'leo@example.com', student_password = 'leo456';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (13, 'Mia', 'mia@example.com', 'miapass') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Mia', student_email = 'mia@example.com', student_password = 'miapass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (14, 'Nick', 'nick@example.com', 'nickpass') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Nick', student_email = 'nick@example.com', student_password = 'nickpass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (15, 'Olivia', 'olivia@example.com', 'olivia123') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Olivia', student_email = 'olivia@example.com', student_password = 'olivia123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (16, 'Peter', 'peter@example.com', 'peterpass') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Peter', student_email = 'peter@example.com', student_password = 'peterpass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (17, 'Queen', 'queen@example.com', 'queenpass') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Queen', student_email = 'queen@example.com', student_password = 'queenpass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (18, 'Ryan', 'ryan@example.com', 'ryan456') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Ryan', student_email = 'ryan@example.com', student_password = 'ryan456';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (19, 'Sara', 'sara@example.com', 'sara123') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Sara', student_email = 'sara@example.com', student_password = 'sara123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (20, 'Tom', 'tom@example.com', 'tompass') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Tom', student_email = 'tom@example.com', student_password = 'tompass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, student_name, student_email, student_password) VALUES (1, 'John Doe', 'john.doe@example.com', 'password123') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, student_password = EXCLUDED.student_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, teacher_name, teacher_email, teacher_password) VALUES (1, 'Jane Smith', 'jane.smith@example.com', 'password456') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = EXCLUDED.teacher_name, teacher_email = EXCLUDED.teacher_email, teacher_password = EXCLUDED.teacher_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, student_name, student_email, student_password) VALUES (2, 'Alice Johnson', 'alice.johnson@example.com', 'pass123') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, student_password = EXCLUDED.student_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, teacher_name, teacher_email, teacher_password) VALUES (2, 'Michael Brown', 'michael.brown@example.com', 'pass456') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = EXCLUDED.teacher_name, teacher_email = EXCLUDED.teacher_email, teacher_password = EXCLUDED.teacher_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, student_name, student_email, student_password) VALUES (3, 'Sarah Wilson', 'sarah.wilson@example.com', '123456') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, student_password = EXCLUDED.student_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, teacher_name, teacher_email, teacher_password) VALUES (3, 'David Miller', 'david.miller@example.com', '456789') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = EXCLUDED.teacher_name, teacher_email = EXCLUDED.teacher_email, teacher_password = EXCLUDED.teacher_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, student_name, student_email, student_password) VALUES (4, 'Emily Adams', 'emily.adams@example.com', 'qwerty123') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, student_password = EXCLUDED.student_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, teacher_name, teacher_email, teacher_password) VALUES (4, 'Robert Clark', 'robert.clark@example.com', 'qwerty456') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = EXCLUDED.teacher_name, teacher_email = EXCLUDED.teacher_email, teacher_password = EXCLUDED.teacher_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, student_name, student_email, student_password) VALUES (5, 'Maria Garcia', 'maria.garcia@example.com', 'abcdef123') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, student_password = EXCLUDED.student_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, teacher_name, teacher_email, teacher_password) VALUES (5, 'George Wilson', 'george.wilson@example.com', 'abcdef456') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = EXCLUDED.teacher_name, teacher_email = EXCLUDED.teacher_email, teacher_password = EXCLUDED.teacher_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, student_name, student_email, student_password) VALUES (6, 'Linda Martinez', 'linda.martinez@example.com', 'passpass') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, student_password = EXCLUDED.student_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, teacher_name, teacher_email, teacher_password) VALUES (6, 'Christopher Lee', 'christopher.lee@example.com', 'passpasspass') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = EXCLUDED.teacher_name, teacher_email = EXCLUDED.teacher_email, teacher_password = EXCLUDED.teacher_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, student_name, student_email, student_password) VALUES (7, 'Mark Thompson', 'mark.thompson@example.com', 'password123') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, student_password = EXCLUDED.student_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, teacher_name, teacher_email, teacher_password) VALUES (7, 'Laura Evans', 'laura.evans@example.com', 'password456') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = EXCLUDED.teacher_name, teacher_email = EXCLUDED.teacher_email, teacher_password = EXCLUDED.teacher_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, student_name, student_email, student_password) VALUES (8, 'Jason Moore', 'jason.moore@example.com', 'pass123') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, student_password = EXCLUDED.student_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, teacher_name, teacher_email, teacher_password) VALUES (8, 'Rebecca Hill', 'rebecca.hill@example.com', 'pass456') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = EXCLUDED.teacher_name, teacher_email = EXCLUDED.teacher_email, teacher_password = EXCLUDED.teacher_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, student_name, student_email, student_password) VALUES (9, 'Karen Jackson', 'karen.jackson@example.com', '123456') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, student_password = EXCLUDED.student_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, teacher_name, teacher_email, teacher_password) VALUES (9, 'Kevin Adams', 'kevin.adams@example.com', '456789') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = EXCLUDED.teacher_name, teacher_email = EXCLUDED.teacher_email, teacher_password = EXCLUDED.teacher_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, student_name, student_email, student_password) VALUES (10, 'Diana Brown', 'diana.brown@example.com', 'qwerty123') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, student_password = EXCLUDED.student_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, teacher_name, teacher_email, teacher_password) VALUES (10, 'Samuel White', 'samuel.white@example.com', 'qwerty456') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = EXCLUDED.teacher_name, teacher_email = EXCLUDED.teacher_email, teacher_password = EXCLUDED.teacher_password;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, student_password) VALUES (1, 'Alice', 'alice@example.com', 'alice123') ON DUPLICATE KEY UPDATE student_name = 'Alice', student_email = 'alice@example.com', student_password = 'alice123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, student_password) VALUES (2, 'Bob', 'bob@example.com', 'bob123') ON DUPLICATE KEY UPDATE student_name = 'Bob', student_email = 'bob@example.com', student_password = 'bob123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (1, 'John', 'john@example.com', 'john123') ON DUPLICATE KEY UPDATE teacher_name = 'John', teacher_email = 'john@example.com', teacher_password = 'john123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (2, 'Mary', 'mary@example.com', 'mary123') ON DUPLICATE KEY UPDATE teacher_name = 'Mary', teacher_email = 'mary@example.com', teacher_password = 'mary123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (1, 'Admin1', 'admin1@example.com', 'admin1123') ON DUPLICATE KEY UPDATE admin_name = 'Admin1', admin_email = 'admin1@example.com', admin_password = 'admin1123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (2, 'Admin2', 'admin2@example.com', 'admin2123') ON DUPLICATE KEY UPDATE admin_name = 'Admin2', admin_email = 'admin2@example.com', admin_password = 'admin2123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, student_password) VALUES (3, 'Charlie', 'charlie@example.com', 'charlie123') ON DUPLICATE KEY UPDATE student_name = 'Charlie', student_email = 'charlie@example.com', student_password = 'charlie123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, student_password) VALUES (4, 'David', 'david@example.com', 'david123') ON DUPLICATE KEY UPDATE student_name = 'David', student_email = 'david@example.com', student_password = 'david123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (3, 'Laura', 'laura@example.com', 'laura123') ON DUPLICATE KEY UPDATE teacher_name = 'Laura', teacher_email = 'laura@example.com', teacher_password = 'laura123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (4, 'Michael', 'michael@example.com', 'michael123') ON DUPLICATE KEY UPDATE teacher_name = 'Michael', teacher_email = 'michael@example.com', teacher_password = 'michael123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (3, 'Admin3', 'admin3@example.com', 'admin3123') ON DUPLICATE KEY UPDATE admin_name = 'Admin3', admin_email = 'admin3@example.com', admin_password = 'admin3123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (4, 'Admin4', 'admin4@example.com', 'admin4123') ON DUPLICATE KEY UPDATE admin_name = 'Admin4', admin_email = 'admin4@example.com', admin_password = 'admin4123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, student_password) VALUES (5, 'Eve', 'eve@example.com', 'eve123') ON DUPLICATE KEY UPDATE student_name = 'Eve', student_email = 'eve@example.com', student_password = 'eve123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, student_password) VALUES (6, 'Frank', 'frank@example.com', 'frank123') ON DUPLICATE KEY UPDATE student_name = 'Frank', student_email = 'frank@example.com', student_password = 'frank123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (5, 'Olivia', 'olivia@example.com', 'olivia123') ON DUPLICATE KEY UPDATE teacher_name = 'Olivia', teacher_email = 'olivia@example.com', teacher_password = 'olivia123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (6, 'Peter', 'peter@example.com', 'peter123') ON DUPLICATE KEY UPDATE teacher_name = 'Peter', teacher_email = 'peter@example.com', teacher_password = 'peter123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (5, 'Admin5', 'admin5@example.com', 'admin5123') ON DUPLICATE KEY UPDATE admin_name = 'Admin5', admin_email = 'admin5@example.com', admin_password = 'admin5123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (6, 'Admin6', 'admin6@example.com', 'admin6123') ON DUPLICATE KEY UPDATE admin_name = 'Admin6', admin_email = 'admin6@example.com', admin_password = 'admin6123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (1, 'Alice', 'alice@example.com', 'password123')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (1, 'Bob', 'bob@example.com', 'teacherpwd123')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (1, 'Admin1', 'admin1@example.com', 'adminpwd123')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (2, 'Charlie', 'charlie@example.com', 'pwd456')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (2, 'David', 'david@example.com', 'teachpwd456')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (2, 'Admin2', 'admin2@example.com', 'adminpwd456')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (3, 'Eve', 'eve@example.com', 'evepass')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (3, 'Frank', 'frank@example.com', 'frankpwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (3, 'Admin3', 'admin3@example.com', 'adminpass')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (4, 'Grace', 'grace@example.com', 'grace123')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (4, 'Henry', 'henry@example.com', 'henry456')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (4, 'Admin4', 'admin4@example.com', 'adpass456')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (5, 'Ivy', 'ivy@example.com', 'ivypass')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (5, 'Jack', 'jack@example.com', 'jackpwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (5, 'Admin5', 'admin5@example.com', 'adminpwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (6, 'Kate', 'kate@example.com', 'katepwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (6, 'Liam', 'liam@example.com', 'liampwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (6, 'Admin6', 'admin6@example.com', 'admin6pwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (7, 'Michael', 'michael@example.com', 'michaelpwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (7, 'Nancy', 'nancy@example.com', 'nancypwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (7, 'Admin7', 'admin7@example.com', 'admin7pwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (8, 'Oliver', 'oliver@example.com', 'oliverpwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (8, 'Peter', 'peter@example.com', 'peterpwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (8, 'Admin8', 'admin8@example.com', 'admin8pwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (9, 'Queenie', 'queenie@example.com', 'queeniepwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (9, 'Robert', 'robert@example.com', 'robertpwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (9, 'Admin9', 'admin9@example.com', 'admin9pwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email, student_password) VALUES (10, 'Sophia', 'sophia@example.com', 'sophiapwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO teachers (teacher_id, teacher_name, teacher_email, teacher_password) VALUES (10, 'Thomas', 'thomas@example.com', 'thomaspwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(100) UNIQUE NOT NULL,\n    student_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    teacher_email VARCHAR(100) UNIQUE NOT NULL,\n    teacher_password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE administrators (\n    admin_id INT PRIMARY KEY,\n    admin_name VARCHAR(50) NOT NULL,\n    admin_email VARCHAR(100) UNIQUE NOT NULL,\n    admin_password VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO administrators (admin_id, admin_name, admin_email, admin_password) VALUES (10, 'Admin10', 'admin10@example.com', 'admin10pwd')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, name, email, password) VALUES (1, 'John Doe', 'john.doe@example.com', 'password123') ON CONFLICT (student_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', password = 'password123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, name, email, password) VALUES (1, 'Jane Smith', 'jane.smith@example.com', 'teacherpass') ON CONFLICT (teacher_id) DO UPDATE SET name = 'Jane Smith', email = 'jane.smith@example.com', password = 'teacherpass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO administrators(admin_id, name, email, password) VALUES (1, 'Admin1', 'admin1@example.com', 'adminpass') ON CONFLICT (admin_id) DO UPDATE SET name = 'Admin1', email = 'admin1@example.com', password = 'adminpass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_roles(user_id, role) VALUES (1, 'student') ON CONFLICT (user_id) DO UPDATE SET role = 'student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, name, email, password) VALUES (2, 'Alice Johnson', 'alice.johnson@example.com', 'alicepass') ON CONFLICT (student_id) DO UPDATE SET name = 'Alice Johnson', email = 'alice.johnson@example.com', password = 'alicepass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, name, email, password) VALUES (2, 'Tom Brown', 'tom.brown@example.com', 'tombpass') ON CONFLICT (teacher_id) DO UPDATE SET name = 'Tom Brown', email = 'tom.brown@example.com', password = 'tombpass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO administrators(admin_id, name, email, password) VALUES (2, 'Admin2', 'admin2@example.com', 'adminpass2') ON CONFLICT (admin_id) DO UPDATE SET name = 'Admin2', email = 'admin2@example.com', password = 'adminpass2';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_roles(user_id, role) VALUES (2, 'teacher') ON CONFLICT (user_id) DO UPDATE SET role = 'teacher';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, name, email, password) VALUES (3, 'Mike Roberts', 'mike.roberts@example.com', 'mikerpass') ON CONFLICT (student_id) DO UPDATE SET name = 'Mike Roberts', email = 'mike.roberts@example.com', password = 'mikerpass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, name, email, password) VALUES (3, 'Sara White', 'sara.white@example.com', 'sarakpass') ON CONFLICT (teacher_id) DO UPDATE SET name = 'Sara White', email = 'sara.white@example.com', password = 'sarakpass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO administrators(admin_id, name, email, password) VALUES (3, 'Admin3', 'admin3@example.com', 'adminpass3') ON CONFLICT (admin_id) DO UPDATE SET name = 'Admin3', email = 'admin3@example.com', password = 'adminpass3';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_roles(user_id, role) VALUES (3, 'admin') ON CONFLICT (user_id) DO UPDATE SET role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, name, email, password) VALUES (4, 'Emily Thompson', 'emily.thompson@example.com', 'emilytpass') ON CONFLICT (student_id) DO UPDATE SET name = 'Emily Thompson', email = 'emily.thompson@example.com', password = 'emilytpass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, name, email, password) VALUES (4, 'Sam Wilson', 'sam.wilson@example.com', 'samwpass') ON CONFLICT (teacher_id) DO UPDATE SET name = 'Sam Wilson', email = 'sam.wilson@example.com', password = 'samwpass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO administrators(admin_id, name, email, password) VALUES (4, 'Admin4', 'admin4@example.com', 'adminpass4') ON CONFLICT (admin_id) DO UPDATE SET name = 'Admin4', email = 'admin4@example.com', password = 'adminpass4';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_roles(user_id, role) VALUES (4, 'student') ON CONFLICT (user_id) DO UPDATE SET role = 'student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students(student_id, name, email, password) VALUES (5, 'Chris Davies', 'chris.davies@example.com', 'chrispass') ON CONFLICT (student_id) DO UPDATE SET name = 'Chris Davies', email = 'chris.davies@example.com', password = 'chrispass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO teachers(teacher_id, name, email, password) VALUES (5, 'Linda Adams', 'linda.adams@example.com', 'lindapass') ON CONFLICT (teacher_id) DO UPDATE SET name = 'Linda Adams', email = 'linda.adams@example.com', password = 'lindapass';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO administrators(admin_id, name, email, password) VALUES (5, 'Admin5', 'admin5@example.com', 'adminpass5') ON CONFLICT (admin_id) DO UPDATE SET name = 'Admin5', email = 'admin5@example.com', password = 'adminpass5';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_roles(user_id, role) VALUES (5, 'teacher') ON CONFLICT (user_id) DO UPDATE SET role = 'teacher';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, email, password) VALUES (1, 'Alice', 'alice@example.com', 'pass123') ON CONFLICT(student_id) DO UPDATE SET name='Alice', password='pass123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO teachers (teacher_id, name, email, password) VALUES (1, 'Bob', 'bob@example.com', 'pass456') ON CONFLICT(teacher_id) DO UPDATE SET name='Bob', password='pass456';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO administrators (admin_id, name, email, password) VALUES (1, 'Eve', 'eve@example.com', 'pass789') ON CONFLICT(admin_id) DO UPDATE SET name='Eve', password='pass789';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role) VALUES (1, 'student') ON CONFLICT(user_id) DO UPDATE SET role='student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, email, password) VALUES (2, 'Charlie', 'charlie@example.com', 'pass234') ON CONFLICT(student_id) DO UPDATE SET name='Charlie', password='pass234';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO teachers (teacher_id, name, email, password) VALUES (2, 'David', 'david@example.com', 'pass567') ON CONFLICT(teacher_id) DO UPDATE SET name='David', password='pass567';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO administrators (admin_id, name, email, password) VALUES (2, 'Frank', 'frank@example.com', 'pass234') ON CONFLICT(admin_id) DO UPDATE SET name='Frank', password='pass234';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role) VALUES (2, 'teacher') ON CONFLICT(user_id) DO UPDATE SET role='teacher';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, email, password) VALUES (3, 'Grace', 'grace@example.com', 'pass890') ON CONFLICT(student_id) DO UPDATE SET name='Grace', password='pass890';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO teachers (teacher_id, name, email, password) VALUES (3, 'Henry', 'henry@example.com', 'pass123') ON CONFLICT(teacher_id) DO UPDATE SET name='Henry', password='pass123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO administrators (admin_id, name, email, password) VALUES (3, 'Ivy', 'ivy@example.com', 'pass456') ON CONFLICT(admin_id) DO UPDATE SET name='Ivy', password='pass456';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role) VALUES (3, 'admin') ON CONFLICT(user_id) DO UPDATE SET role='admin';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, email, password) VALUES (4, 'Jack', 'jack@example.com', 'pass567') ON CONFLICT(student_id) DO UPDATE SET name='Jack', password='pass567';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO teachers (teacher_id, name, email, password) VALUES (4, 'Kelly', 'kelly@example.com', 'pass234') ON CONFLICT(teacher_id) DO UPDATE SET name='Kelly', password='pass234';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO administrators (admin_id, name, email, password) VALUES (4, 'Leo', 'leo@example.com', 'pass890') ON CONFLICT(admin_id) DO UPDATE SET name='Leo', password='pass890';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role) VALUES (4, 'student') ON CONFLICT(user_id) DO UPDATE SET role='student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, email, password) VALUES (5, 'Mary', 'mary@example.com', 'pass123') ON CONFLICT(student_id) DO UPDATE SET name='Mary', password='pass123';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO teachers (teacher_id, name, email, password) VALUES (5, 'Nancy', 'nancy@example.com', 'pass456') ON CONFLICT(teacher_id) DO UPDATE SET name='Nancy', password='pass456';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO administrators (admin_id, name, email, password) VALUES (5, 'Oscar', 'oscar@example.com', 'pass567') ON CONFLICT(admin_id) DO UPDATE SET name='Oscar', password='pass567';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE teachers (\n    teacher_id   INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE administrators (\n    admin_id     INT PRIMARY KEY,\n    name         TEXT,\n    email        TEXT UNIQUE,\n    password     TEXT\n);\n\nCREATE TABLE user_roles (\n    user_id      INT PRIMARY KEY,\n    role         TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role) VALUES (5, 'teacher') ON CONFLICT(user_id) DO UPDATE SET role='teacher';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO students (id, username, password, student_id) VALUES (1, 'john_doe', 'password123', 1001) ON CONFLICT (id) DO UPDATE SET username = excluded.username, password = excluded.password, student_id = excluded.student_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO teachers (id, username, password, teacher_id) VALUES (1, 'mary_smith', 'teacherpass456', 2001) ON CONFLICT (id) DO UPDATE SET username = excluded.username, password = excluded.password, teacher_id = excluded.teacher_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO administrators (id, username, password, admin_id) VALUES (1, 'admin_jane', 'adminpass789', 3001) ON CONFLICT (id) DO UPDATE SET username = excluded.username, password = excluded.password, admin_id = excluded.admin_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, teacher_id, students_enrolled) VALUES (101, 'Mathematics', 1, '[1001, 1002, 1003]') ON CONFLICT (course_id) DO UPDATE SET course_name = excluded.course_name, teacher_id = excluded.teacher_id, students_enrolled = excluded.students_enrolled",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (1, 1001, 101, 90) ON CONFLICT (id) DO UPDATE SET student_id = excluded.student_id, course_id = excluded.course_id, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO students (id, username, password, student_id) VALUES (1, 'student1', 'password1', 101) ON CONFLICT (id) DO UPDATE SET username = 'student1_updated';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO teachers (id, username, password, teacher_id) VALUES (1, 'teacher1', 'password1', 201) ON CONFLICT (id) DO UPDATE SET username = 'teacher1_updated';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO administrators (id, username, password, admin_id) VALUES (1, 'admin1', 'password1', 301) ON CONFLICT (id) DO UPDATE SET username = 'admin1_updated';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, teacher_id, students_enrolled) VALUES (1, 'Math', 201, '[101, 102]') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Math_updated';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, teacher_id, students_enrolled) VALUES (2, 'Science', 202, '[103, 104]') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Science_updated';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, teacher_id, students_enrolled) VALUES (3, 'History', 203, '[105, 106]') ON CONFLICT (course_id) DO UPDATE SET course_name = 'History_updated';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (1, 101, 1, 90) ON CONFLICT (id) DO UPDATE SET grade = 95;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (2, 102, 1, 85) ON CONFLICT (id) DO UPDATE SET grade = 88;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (3, 103, 2, 92) ON CONFLICT (id) DO UPDATE SET grade = 94;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (4, 104, 2, 88) ON CONFLICT (id) DO UPDATE SET grade = 87;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (5, 105, 3, 85) ON CONFLICT (id) DO UPDATE SET grade = 82;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (6, 106, 3, 80) ON CONFLICT (id) DO UPDATE SET grade = 79;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO students (id, username, password, student_id) VALUES (2, 'student2', 'password2', 102) ON CONFLICT (id) DO UPDATE SET username = 'student2_updated';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO teachers (id, username, password, teacher_id) VALUES (2, 'teacher2', 'password2', 202) ON CONFLICT (id) DO UPDATE SET username = 'teacher2_updated';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO administrators (id, username, password, admin_id) VALUES (2, 'admin2', 'password2', 302) ON CONFLICT (id) DO UPDATE SET username = 'admin2_updated';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, teacher_id, students_enrolled) VALUES (4, 'English', 204, '[107, 108]') ON CONFLICT (course_id) DO UPDATE SET course_name = 'English_updated';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, teacher_id, students_enrolled) VALUES (5, 'Computer Science', 205, '[109, 110]') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Computer Science_updated';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, teacher_id, students_enrolled) VALUES (6, 'Geography', 206, '[111, 112]') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Geography_updated';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (7, 107, 4, 88) ON CONFLICT (id) DO UPDATE SET grade = 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (8, 108, 4, 85) ON CONFLICT (id) DO UPDATE SET grade = 86;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (9, 109, 5, 92) ON CONFLICT (id) DO UPDATE SET grade = 93;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (10, 110, 5, 88) ON CONFLICT (id) DO UPDATE SET grade = 87;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (11, 111, 6, 85) ON CONFLICT (id) DO UPDATE SET grade = 83;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    student_id INT\n);\n\nCREATE TABLE teachers (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    teacher_id INT\n);\n\nCREATE TABLE administrators (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    admin_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    teacher_id INT,\n    students_enrolled JSONB\n);\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade INT\n);\n\n### STATEMENT\n\nINSERT INTO grades (id, student_id, course_id, grade) VALUES (12, 112, 6, 80) ON CONFLICT (id) DO UPDATE SET grade = 78;"
]