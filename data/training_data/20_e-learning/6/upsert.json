[
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (1, 101, '2022-01-01', 'Present')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (2, 102, '2022-01-02', 'Absent')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (3, 103, '2022-01-03', 'Late')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (4, 104, '2022-01-04', 'Present')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (5, 105, '2022-01-05', 'Absent')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (6, 106, '2022-01-06', 'Present')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (7, 107, '2022-01-07', 'Absent')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (8, 108, '2022-01-08', 'Late')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (9, 109, '2022-01-09', 'Present')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (10, 110, '2022-01-10', 'Absent')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (11, 111, '2022-01-11', 'Late')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (12, 112, '2022-01-12', 'Present')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (13, 113, '2022-01-13', 'Absent')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (14, 114, '2022-01-14', 'Late')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (15, 115, '2022-01-15', 'Present')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (16, 116, '2022-01-16', 'Absent')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (17, 117, '2022-01-17', 'Late')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (18, 118, '2022-01-18', 'Present')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (19, 119, '2022-01-19', 'Absent')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (20, 120, '2022-01-20', 'Late')",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (1, 101, '2022-01-01', 'Present') ON CONFLICT (student_id) DO UPDATE SET course_id = 101, date = '2022-01-01', status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (2, 102, '2022-01-02', 'Absent') ON CONFLICT (student_id) DO UPDATE SET course_id = 102, date = '2022-01-02', status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (3, 103, '2022-01-03', 'Late') ON CONFLICT (student_id) DO UPDATE SET course_id = 103, date = '2022-01-03', status = 'Late';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (4, 104, '2022-01-04', 'Present') ON CONFLICT (student_id) DO UPDATE SET course_id = 104, date = '2022-01-04', status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (5, 105, '2022-01-05', 'Absent') ON CONFLICT (student_id) DO UPDATE SET course_id = 105, date = '2022-01-05', status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (6, 106, '2022-01-06', 'Late') ON CONFLICT (student_id) DO UPDATE SET course_id = 106, date = '2022-01-06', status = 'Late';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (7, 107, '2022-01-07', 'Present') ON CONFLICT (student_id) DO UPDATE SET course_id = 107, date = '2022-01-07', status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (8, 108, '2022-01-08', 'Absent') ON CONFLICT (student_id) DO UPDATE SET course_id = 108, date = '2022-01-08', status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (9, 109, '2022-01-09', 'Late') ON CONFLICT (student_id) DO UPDATE SET course_id = 109, date = '2022-01-09', status = 'Late';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (10, 110, '2022-01-10', 'Present') ON CONFLICT (student_id) DO UPDATE SET course_id = 110, date = '2022-01-10', status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (11, 111, '2022-01-11', 'Absent') ON CONFLICT (student_id) DO UPDATE SET course_id = 111, date = '2022-01-11', status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (12, 112, '2022-01-12', 'Late') ON CONFLICT (student_id) DO UPDATE SET course_id = 112, date = '2022-01-12', status = 'Late';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (13, 113, '2022-01-13', 'Present') ON CONFLICT (student_id) DO UPDATE SET course_id = 113, date = '2022-01-13', status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (14, 114, '2022-01-14', 'Absent') ON CONFLICT (student_id) DO UPDATE SET course_id = 114, date = '2022-01-14', status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (15, 115, '2022-01-15', 'Late') ON CONFLICT (student_id) DO UPDATE SET course_id = 115, date = '2022-01-15', status = 'Late';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (16, 116, '2022-01-16', 'Present') ON CONFLICT (student_id) DO UPDATE SET course_id = 116, date = '2022-01-16', status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (17, 117, '2022-01-17', 'Absent') ON CONFLICT (student_id) DO UPDATE SET course_id = 117, date = '2022-01-17', status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (18, 118, '2022-01-18', 'Late') ON CONFLICT (student_id) DO UPDATE SET course_id = 118, date = '2022-01-18', status = 'Late';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (19, 119, '2022-01-19', 'Present') ON CONFLICT (student_id) DO UPDATE SET course_id = 119, date = '2022-01-19', status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE AttendanceData (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPSERT INTO AttendanceData (student_id, course_id, date, status) VALUES (20, 120, '2022-01-20', 'Absent') ON CONFLICT (student_id) DO UPDATE SET course_id = 120, date = '2022-01-20', status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date_attended DATE\n);\n\n\nCREATE TABLE course_requirements (\n    course_id INT PRIMARY KEY,\n    required_attendance INT,\n    passing_grade DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (student_id, course_id, date_attended) VALUES (1, 101, '2022-01-01') ON DUPLICATE KEY UPDATE course_id = 101, date_attended = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date_attended DATE\n);\n\n\nCREATE TABLE course_requirements (\n    course_id INT PRIMARY KEY,\n    required_attendance INT,\n    passing_grade DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (student_id, course_id, date_attended) VALUES (2, 102, '2022-01-02') ON DUPLICATE KEY UPDATE course_id = 102, date_attended = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date_attended DATE\n);\n\n\nCREATE TABLE course_requirements (\n    course_id INT PRIMARY KEY,\n    required_attendance INT,\n    passing_grade DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (student_id, course_id, date_attended) VALUES (3, 103, '2022-01-03') ON DUPLICATE KEY UPDATE course_id = 103, date_attended = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date_attended DATE\n);\n\n\nCREATE TABLE course_requirements (\n    course_id INT PRIMARY KEY,\n    required_attendance INT,\n    passing_grade DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (student_id, course_id, date_attended) VALUES (4, 104, '2022-01-04') ON DUPLICATE KEY UPDATE course_id = 104, date_attended = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date_attended DATE\n);\n\n\nCREATE TABLE course_requirements (\n    course_id INT PRIMARY KEY,\n    required_attendance INT,\n    passing_grade DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (student_id, course_id, date_attended) VALUES (5, 105, '2022-01-05') ON DUPLICATE KEY UPDATE course_id = 105, date_attended = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date_attended DATE\n);\n\n\nCREATE TABLE course_requirements (\n    course_id INT PRIMARY KEY,\n    required_attendance INT,\n    passing_grade DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (student_id,...",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date_attended DATE\n);\n\n\nCREATE TABLE course_requirements (\n    course_id INT PRIMARY KEY,\n    required_attendance INT,\n    passing_grade DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (student_id, course_id, date_attended) VALUES (1, 101, '2022-01-01') ON CONFLICT (student_id) DO UPDATE SET course_id = excluded.course_id, date_attended = excluded.date_attended;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date_attended DATE\n);\n\n\nCREATE TABLE course_requirements (\n    course_id INT PRIMARY KEY,\n    required_attendance INT,\n    passing_grade DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (student_id, course_id, date_attended) VALUES (2, 102, '2022-01-02') ON CONFLICT (student_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date_attended DATE\n);\n\n\nCREATE TABLE course_requirements (\n    course_id INT PRIMARY KEY,\n    required_attendance INT,\n    passing_grade DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (student_id, course_id, date_attended) VALUES (3, 103, '2022-01-03') ON CONFLICT (student_id) DO UPDATE SET course_id = excluded.course_id, date_attended = excluded.date_attended;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date_attended DATE\n);\n\n\nCREATE TABLE course_requirements (\n    course_id INT PRIMARY KEY,\n    required_attendance INT,\n    passing_grade DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (student_id, course_id, date_attended) VALUES (4, 104, '2022-01-04') ON CONFLICT (student_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT PRIMARY KEY,\n    course_id INT,\n    date_attended DATE\n);\n\n\nCREATE TABLE course_requirements (\n    course_id INT PRIMARY KEY,\n    required_attendance INT,\n    passing_grade DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (student_id, course_...",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (1, 'Alice', 'alice@example.com') ON DUPLICATE KEY UPDATE student_name='Alice';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (2, 'Bob', 'bob@example.com') ON DUPLICATE KEY UPDATE student_name='Bob';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (3, 'Charlie', 'charlie@example.com') ON DUPLICATE KEY UPDATE student_name='Charlie';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (4, 'David', 'david@example.com') ON DUPLICATE KEY UPDATE student_name='David';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (5, 'Eve', 'eve@example.com') ON DUPLICATE KEY UPDATE student_name='Eve';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (6, 'Frank', 'frank@example.com') ON DUPLICATE KEY UPDATE student_name='Frank';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (7, 'Grace', 'grace@example.com') ON DUPLICATE KEY UPDATE student_name='Grace';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (8, 'Harry', 'harry@example.com') ON DUPLICATE KEY UPDATE student_name='Harry';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (9, 'Iris', 'iris@example.com') ON DUPLICATE KEY UPDATE student_name='Iris';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (10, 'Jack', 'jack@example.com') ON DUPLICATE KEY UPDATE student_name='Jack';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (11, 'Katie', 'katie@example.com') ON DUPLICATE KEY UPDATE student_name='Katie';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (12, 'Liam', 'liam@example.com') ON DUPLICATE KEY UPDATE student_name='Liam';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (13, 'Molly', 'molly@example.com') ON DUPLICATE KEY UPDATE student_name='Molly';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (14, 'Nora', 'nora@example.com') ON DUPLICATE KEY UPDATE student_name='Nora';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (15, 'Oscar', 'oscar@example.com') ON DUPLICATE KEY UPDATE student_name='Oscar';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (16, 'Penny', 'penny@example.com') ON DUPLICATE KEY UPDATE student_name='Penny';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (17, 'Quinn', 'quinn@example.com') ON DUPLICATE KEY UPDATE student_name='Quinn';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (18, 'Ryan', 'ryan@example.com') ON DUPLICATE KEY UPDATE student_name='Ryan';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (19, 'Sara', 'sara@example.com') ON DUPLICATE KEY UPDATE student_name='Sara';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_email) VALUES (20, 'Tom', 'tom@example.com') ON DUPLICATE KEY UPDATE student_name='Tom';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (1, 'Alice', 'alice@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (2, 'Bob', 'bob@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (3, 'Charlie', 'charlie@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (4, 'David', 'david@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (5, 'Eve', 'eve@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (6, 'Frank', 'frank@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (7, 'Grace', 'grace@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (8, 'Henry', 'henry@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (9, 'Ivy', 'ivy@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (10, 'Jack', 'jack@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (11, 'Kate', 'kate@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (12, 'Liam', 'liam@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (13, 'Mia', 'mia@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (14, 'Noah', 'noah@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (15, 'Olivia', 'olivia@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (16, 'Peter', 'peter@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (17, 'Quinn', 'quinn@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (18, 'Ryan', 'ryan@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (19, 'Sophia', 'sophia@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(10) UNIQUE\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id),\n    attendance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email) VALUES (20, 'Tom', 'tom@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_email = excluded.student_email;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_year) VALUES (1, 'John Doe', 2020) ON CONFLICT (student_id) DO UPDATE SET student_name = 'John Doe', enrollment_year = 2021;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_code) VALUES (1, 'Mathematics', 'MATH101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics', course_code = 'MATH102';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, course_id, attendance_date, present) VALUES (1, 1, 1, '2022-01-01', true) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 1, course_id = 1, attendance_date = '2022-01-01', present = true;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO CourseRequirements (course_id, required_attendance_percentage) VALUES (1, 80) ON CONFLICT (course_id) DO UPDATE SET required_attendance_percentage = 85;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_year) VALUES (2, 'Jane Smith', 2019) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Jane Smith', enrollment_year = 2020;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_code) VALUES (2, 'Science', 'SCI101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Science', course_code = 'SCI102';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, course_id, attendance_date, present) VALUES (2, 2, 2, '2022-01-02', true) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 2, course_id = 2, attendance_date = '2022-01-02', present = true;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO CourseRequirements (course_id, required_attendance_percentage) VALUES (2, 75) ON CONFLICT (course_id) DO UPDATE SET required_attendance_percentage = 80;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_year) VALUES (3, 'Alice Johnson', 2021) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice Johnson', enrollment_year = 2022;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_code) VALUES (3, 'History', 'HIST101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'History', course_code = 'HIST102';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, course_id, attendance_date, present) VALUES (3, 3, 3, '2022-01-03', true) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 3, course_id = 3, attendance_date = '2022-01-03', present = true;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO CourseRequirements (course_id, required_attendance_percentage) VALUES (3, 70) ON CONFLICT (course_id) DO UPDATE SET required_attendance_percentage = 75;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_year) VALUES (4, 'Bob Brown', 2018) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob Brown', enrollment_year = 2019;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_code) VALUES (4, 'English', 'ENG101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'English', course_code = 'ENG102';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, course_id, attendance_date, present) VALUES (4, 4, 4, '2022-01-04', true) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 4, course_id = 4, attendance_date = '2022-01-04', present = true;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO CourseRequirements (course_id, required_attendance_percentage) VALUES (4, 90) ON CONFLICT (course_id) DO UPDATE SET required_attendance_percentage = 95;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_year) VALUES (5, 'Eva Wilson', 2017) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Eva Wilson', enrollment_year = 2018;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_code) VALUES (5, 'Art', 'ART101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Art', course_code = 'ART102';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, course_id, attendance_date, present) VALUES (5, 5, 5, '2022-01-05', true) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 5, course_id = 5, attendance_date = '2022-01-05', present = true;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO CourseRequirements (course_id, required_attendance_percentage) VALUES (5, 85) ON CONFLICT (course_id) DO UPDATE SET required_attendance_percentage = 90;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_year) VALUES (1, 'John Smith', 2020) ON CONFLICT (student_id) DO UPDATE SET student_name = 'John Smith', enrollment_year = 2021;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_code) VALUES (101, 'Mathematics', 'MATH101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics', course_code = 'MATH102';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, course_id, attendance_date, present) VALUES (1, 1, 101, '2021-05-10', TRUE) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 1, course_id = 101, attendance_date = '2021-05-11', present = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO CourseRequirements (course_id, required_attendance_percentage) VALUES (101, 80) ON CONFLICT (course_id) DO UPDATE SET required_attendance_percentage = 85;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_year) VALUES (2, 'Alice Johnson', 2019) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice Johnson', enrollment_year = 2020;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_code) VALUES (102, 'History', 'HIST101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'History', course_code = 'HIST102';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, course_id, attendance_date, present) VALUES (2, 2, 102, '2021-05-12', TRUE) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 2, course_id = 102, attendance_date = '2021-05-13', present = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO CourseRequirements (course_id, required_attendance_percentage) VALUES (102, 75) ON CONFLICT (course_id) DO UPDATE SET required_attendance_percentage = 80;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_year) VALUES (3, 'Michael Brown', 2020) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Michael Brown', enrollment_year = 2021;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_code) VALUES (103, 'Science', 'SCI101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Science', course_code = 'SCI102';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, course_id, attendance_date, present) VALUES (3, 3, 103, '2021-05-14', TRUE) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 3, course_id = 103, attendance_date = '2021-05-15', present = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO CourseRequirements (course_id, required_attendance_percentage) VALUES (103, 90) ON CONFLICT (course_id) DO UPDATE SET required_attendance_percentage = 95;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_year) VALUES (4, 'Emily Davis', 2019) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Emily Davis', enrollment_year = 2020;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_code) VALUES (104, 'English', 'ENG101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'English', course_code = 'ENG102';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, course_id, attendance_date, present) VALUES (4, 4, 104, '2021-05-16', TRUE) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 4, course_id = 104, attendance_date = '2021-05-17', present = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO CourseRequirements (course_id, required_attendance_percentage) VALUES (104, 70) ON CONFLICT (course_id) DO UPDATE SET required_attendance_percentage = 75;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_year) VALUES (5, 'Robert Wilson', 2020) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Robert Wilson', enrollment_year = 2021;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_code) VALUES (105, 'Physics', 'PHY101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Physics', course_code = 'PHY102';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, course_id, attendance_date, present) VALUES (5, 5, 105, '2021-05-18', TRUE) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 5, course_id = 105, attendance_date = '2021-05-19', present = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    enrollment_year INT\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100) NOT NULL,\n    course_code VARCHAR(10)\n);\n\n\nCREATE TABLE Attendance (\n    attendance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    attendance_date DATE,\n    present BOOLEAN\n);\n\n\nCREATE TABLE CourseRequirements (\n    course_id INT,\n    required_attendance_percentage INT\n);\n\n### STATEMENT\n\nINSERT INTO CourseRequirements (course_id, required_attendance_percentage) VALUES (105, 85) ON CONFLICT (course_id) DO UPDATE SET required_attendance_percentage = 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, email) VALUES ('123e4567-e89b-12d3-a456-426614174001', 'Alice', 'alice@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_code) VALUES ('223e4567-e89b-12d3-a456-426614174001', 'Mathematics', 'MATH101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES ('323e4567-e89b-12d3-a456-426614174001', '123e4567-e89b-12d3-a456-426614174001', '223e4567-e89b-12d3-a456-426614174001', '2022-01-01') ON CONFLICT (enrollment_id) DO UPDATE SET enrollment_date = '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO attendance (attendance_id, enrollment_id, attendance_date, is_present) VALUES ('423e4567-e89b-12d3-a456-426614174001', '323e4567-e89b-12d3-a456-426614174001', '2022-01-01', TRUE) ON CONFLICT (attendance_id) DO UPDATE SET is_present = TRUE",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, course_id, assignment_name, due_date) VALUES ('523e4567-e89b-12d3-a456-426614174001', '223e4567-e89b-12d3-a456-426614174001', 'Homework 1', '2022-01-10') ON CONFLICT (assignment_id) DO UPDATE SET assignment_name = 'Homework 1'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, email) VALUES ('687b7c4c-4f13-4e43-aa6d-98e72d15e9f3', 'John Doe', 'john.doe@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = 'John Doe', email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_code) VALUES ('786bb777-303c-4d0d-9869-0fd59f9d27a0', 'Computer Science', 'CS101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Computer Science', course_code = 'CS101';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES ('e38906ae-f3f4-4f43-8c4e-d212c962cff6', '687b7c4c-4f13-4e43-aa6d-98e72d15e9f3', '786bb777-303c-4d0d-9869-0fd59f9d27a0', '2022-01-15') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = '687b7c4c-4f13-4e43-aa6d-98e72d15e9f3', course_id = '786bb777-303c-4d0d-9869-0fd59f9d27a0', enrollment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO attendance (attendance_id, enrollment_id, attendance_date, is_present) VALUES ('95d98590-a917-46ee-8bf5-07fb73e87768', 'e38906ae-f3f4-4f43-8c4e-d212c962cff6', '2022-01-15', TRUE) ON CONFLICT (attendance_id) DO UPDATE SET enrollment_id = 'e38906ae-f3f4-4f43-8c4e-d212c962cff6', attendance_date = '2022-01-15', is_present = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, course_id, assignment_name, due_date) VALUES ('aa667e35-400d-4b8b-be41-295bab4fbf6f', '786bb777-303c-4d0d-9869-0fd59f9d27a0', 'Assignment 1', '2022-02-01') ON CONFLICT (assignment_id) DO UPDATE SET course_id = '786bb777-303c-4d0d-9869-0fd59f9d27a0', assignment_name = 'Assignment 1', due_date = '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, email) VALUES ('a95ba760-77f6-482b-8455-dd7a61b98b65', 'Alice Smith', 'alice.smith@example.com') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice Smith', email = 'alice.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_code) VALUES ('f42716a3-8a66-4708-80b2-4bddbe9e8c23', 'Mathematics', 'MATH101') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics', course_code = 'MATH101';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES ('561824fb-4fd6-487d-8ede-bc1521ff0770', 'a95ba760-77f6-482b-8455-dd7a61b98b65', 'f42716a3-8a66-4708-80b2-4bddbe9e8c23', '2022-01-20') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 'a95ba760-77f6-482b-8455-dd7a61b98b65', course_id = 'f42716a3-8a66-4708-80b2-4bddbe9e8c23', enrollment_date = '2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO attendance (attendance_id, enrollment_id, attendance_date, is_present) VALUES ('7bac7957-a100-4a5b-9c9a-92e25342f06b', '561824fb-4fd6-487d-8ede-bc1521ff0770', '2022-01-20', TRUE) ON CONFLICT (attendance_id) DO UPDATE SET enrollment_id = '561824fb-4fd6-487d-8ede-bc1521ff0770', attendance_date = '2022-01-20', is_present = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    course_code VARCHAR(20) UNIQUE NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES students(student_id),\n    course_id UUID REFERENCES courses(course_id),\n    enrollment_date DATE NOT NULL\n);\n\nCREATE TABLE attendance (\n    attendance_id UUID PRIMARY KEY,\n    enrollment_id UUID REFERENCES enrollments(enrollment_id),\n    attendance_date DATE NOT NULL,\n    is_present BOOLEAN NOT NULL\n);\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    course_id UUID REFERENCES courses(course_id),\n    assignment_name VARCHAR(50) NOT NULL,\n    due_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, course_id, assignment_name, due_date) VALUES ('f39b664b-1b9e-462f-88d7-2d035d8c2d43', 'f42716a3-8a66-4708-80b2-4bddbe9e8c23', 'Assignment 1', '2022-02-05') ON CONFLICT (assignment_id) DO UPDATE SET course_id = 'f42716a3-8a66-4708-80b2-4bddbe9e8c23', assignment_name = 'Assignment 1', due_date = '2022-02-05';"
]