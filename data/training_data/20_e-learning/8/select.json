[
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT survey_id, student_id, feedback_text, rating, survey_date FROM feedback_survey;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey WHERE survey_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT student_id, rating FROM feedback_survey WHERE survey_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey WHERE survey_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(rating) AS avg_rating FROM feedback_survey;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS feedback_count FROM feedback_survey GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey ORDER BY survey_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT student_id, MAX(rating) AS highest_rating FROM feedback_survey GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT student_id FROM feedback_survey;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(rating) AS avg_rating, MIN(rating) AS min_rating, MAX(rating) AS max_rating FROM feedback_survey;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey WHERE rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey WHERE feedback_text LIKE '%good%';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT survey_id, rating FROM feedback_survey WHERE rating BETWEEN 3 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_surveys FROM feedback_survey;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT survey_id, feedback_text FROM feedback_survey WHERE feedback_text IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey WHERE student_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT survey_id, survey_date FROM feedback_survey WHERE survey_date = CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey WHERE survey_date > CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT DATE_FORMAT(survey_date, '%Y-%m') AS month_year FROM feedback_survey;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT student_id) AS unique_students FROM feedback_survey;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey WHERE survey_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT student_id, feedback_text, rating FROM feedback_survey WHERE rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey WHERE survey_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(rating) AS avg_rating FROM feedback_survey GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(rating) AS max_rating FROM feedback_survey;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey WHERE survey_date >= CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT student_id, AVG(rating) AS avg_rating FROM feedback_survey GROUP BY student_id HAVING avg_rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(survey_id) AS num_surveys FROM feedback_survey WHERE rating < 3;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey ORDER BY survey_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT student_id FROM feedback_survey;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT student_id, COUNT(survey_id) AS num_surveys FROM feedback_survey GROUP BY student_id ORDER BY num_surveys DESC;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT survey_id, feedback_text FROM feedback_survey WHERE LENGTH(feedback_text) > 50;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey WHERE rating IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT survey_id, DATEDIFF(CURDATE(), survey_date) AS days_since_survey FROM feedback_survey;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey WHERE feedback_text LIKE '%improve%';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT student_id, MIN(rating) AS min_rating, MAX(rating) AS max_rating FROM feedback_survey GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT student_id) AS num_students FROM feedback_survey;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT survey_id, feedback_text FROM feedback_survey WHERE feedback_text REGEXP '^[A-Za-z]';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT student_id, SUM(rating) AS total_rating FROM feedback_survey GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  student_id INT,\n  feedback_text TEXT,\n  rating INT,\n  survey_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_survey WHERE EXTRACT(YEAR FROM survey_date) = 2023;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM survey_responses;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT id, survey_question FROM survey_responses WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM evaluations WHERE evaluation_score > 90;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT id, student_id, evaluation_score FROM evaluations WHERE evaluation_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM survey_responses;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT MAX(evaluation_score) FROM evaluations;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT student_id, AVG(evaluation_score) FROM evaluations GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM survey_responses WHERE response LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT id, student_id FROM evaluations WHERE evaluation_score BETWEEN 80 AND 90;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) FROM survey_responses GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT AVG(evaluation_score) FROM evaluations WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM survey_responses WHERE survey_question IN ('Q1', 'Q2');",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT id, evaluation_date FROM evaluations ORDER BY evaluation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT student_id, MAX(evaluation_score) FROM evaluations GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM survey_responses WHERE response IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT student_id) FROM evaluations;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT id, student_id, evaluation_date FROM evaluations WHERE evaluation_score < 70;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM survey_responses ORDER BY survey_question;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS response_count FROM survey_responses GROUP BY student_id HAVING response_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT MIN(evaluation_score) FROM evaluations WHERE student_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM survey_responses WHERE response = 'Agree';",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT student_id, survey_question FROM survey_responses WHERE survey_question LIKE '%satisfaction%';",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT evaluation_date, evaluation_score FROM evaluations WHERE student_id = 12345;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT student_id, survey_question, response FROM survey_responses WHERE response IN ('Strongly Agree', 'Agree') ORDER BY student_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT student_id, evaluation_date, evaluation_score FROM evaluations WHERE evaluation_score > 80 ORDER BY evaluation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT student_id, evaluation_score FROM evaluations WHERE evaluation_score BETWEEN 70 AND 90;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_responses FROM survey_responses;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT MAX(evaluation_score) AS highest_score FROM evaluations;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT AVG(evaluation_score) AS average_score FROM evaluations;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS total_responses FROM survey_responses GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT student_id, SUM(evaluation_score) AS total_score FROM evaluations GROUP BY student_id HAVING total_score > 200;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT student_id, evaluation_date, SUM(evaluation_score) AS total_score FROM evaluations GROUP BY student_id, evaluation_date HAVING total_score > 100;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM survey_responses sr INNER JOIN evaluations ev ON sr.student_id = ev.student_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT sr.student_id, sr.survey_question, ev.evaluation_score FROM survey_responses sr INNER JOIN evaluations ev ON sr.student_id = ev.student_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT sr.student_id, COUNT(*) AS total_responses, AVG(ev.evaluation_score) AS average_score FROM survey_responses sr INNER JOIN evaluations ev ON sr.student_id = ev.student_id GROUP BY sr.student_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT sr.student_id, sr.survey_question, SUM(ev.evaluation_score) AS total_score FROM survey_responses sr INNER JOIN evaluations ev ON sr.student_id = ev.student_id GROUP BY sr.student_id, sr.survey_question HAVING total_score > 150;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT sr.student_id, sr.survey_question, ev.evaluation_date, ev.evaluation_score FROM survey_responses sr LEFT JOIN evaluations ev ON sr.student_id = ev.student_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT sr.student_id, sr.survey_question, ev.evaluation_date, ev.evaluation_score FROM survey_responses sr LEFT JOIN evaluations ev ON sr.student_id = ev.student_id WHERE ev.evaluation_score IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT sr.student_id, sr.survey_question, ev.evaluation_date, ev.evaluation_score FROM survey_responses sr RIGHT JOIN evaluations ev ON sr.student_id = ev.student_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT sr.student_id, sr.survey_question, ev.evaluation_date, ev.evaluation_score FROM survey_responses sr RIGHT JOIN evaluations ev ON sr.student_id = ev.student_id WHERE sr.response IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT sr.student_id, sr.survey_question, ev.evaluation_date, ev.evaluation_score FROM survey_responses sr FULL JOIN evaluations ev ON sr.student_id = ev.student_id;",
  "### TABLEDATA\n\nCREATE TABLE survey_responses (\n  id INT PRIMARY KEY,\n  student_id INT,\n  survey_question TEXT,\n  response TEXT\n);\n\nCREATE TABLE evaluations (\n  id INT PRIMARY KEY,\n  student_id INT,\n  evaluation_date DATE,\n  evaluation_score INT\n);\n\n### STATEMENT\n\nSELECT sr.student_id, sr.survey_question, ev.evaluation_date, ev.evaluation_score FROM survey_responses sr FULL JOIN evaluations ev ON sr.student_id = ev.student_id WHERE sr.response IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT response_id, student_id, response_text FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT response_id, response_date FROM SurveyResponses WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_major FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Surveys;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT survey_name, survey_date FROM Surveys;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT response_text FROM SurveyResponses WHERE survey_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name FROM Students WHERE student_major = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT survey_name, survey_description FROM Surveys WHERE survey_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT response_id, response_text FROM SurveyResponses WHERE response_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM Students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT survey_name FROM Surveys WHERE survey_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT response_id, response_text FROM SurveyResponses WHERE student_id = 2 AND survey_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_major LIKE '%Engineering%';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT survey_name FROM Surveys WHERE survey_description LIKE '%feedback%';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT response_text FROM SurveyResponses WHERE student_id = 1 ORDER BY response_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_major FROM Students WHERE student_email LIKE '%example.com';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT survey_name FROM Surveys WHERE survey_date < NOW();",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT response_text FROM SurveyResponses WHERE response_date > '2022-01-01' ORDER BY response_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, student_major FROM Students WHERE student_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT survey_name, survey_date FROM Surveys;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT response_text, response_date FROM SurveyResponses WHERE survey_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT survey_id, COUNT(*) AS number_of_responses FROM SurveyResponses GROUP BY survey_id;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, survey_name FROM Students JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, survey_name, response_text FROM Students JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id JOIN Surveys ON SurveyResponses.survey_id = Surveys.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, survey_name, response_text FROM Students LEFT JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id LEFT JOIN Surveys ON SurveyResponses.survey_id = Surveys.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses WHERE response_date >= '2022-01-01' AND response_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, survey_name FROM Students JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id WHERE SurveyResponses.survey_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, survey_name FROM Students JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id WHERE SurveyResponses.survey_id IN (5, 6);",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(*) AS number_of_responses FROM Students JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, survey_name, COUNT(*) AS number_of_responses FROM Students JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id JOIN Surveys ON SurveyResponses.survey_id = Surveys.survey_id GROUP BY student_name, survey_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, survey_name, response_text FROM Students JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id JOIN Surveys ON SurveyResponses.survey_id = Surveys.survey_id WHERE response_text LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, survey_name, response_text FROM Students JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id JOIN Surveys ON SurveyResponses.survey_id = Surveys.survey_id WHERE student_major = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, survey_name, response_text FROM Students JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id JOIN Surveys ON SurveyResponses.survey_id = Surveys.survey_id WHERE survey_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, survey_name, response_text FROM Students JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id JOIN Surveys ON SurveyResponses.survey_id = Surveys.survey_id ORDER BY response_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, AVG(response_text) AS avg_response_score FROM Students JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, survey_name, MAX(response_text) AS highest_response FROM Students JOIN SurveyResponses ON Students.student_id = SurveyResponses.student_id JOIN Surveys ON SurveyResponses.survey_id = Surveys.survey_id GROUP BY student_name, survey_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    student_id INT,\n    survey_id INT,\n    response_text TEXT,\n    response_date TIMESTAMP\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    student_major VARCHAR(50)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT,\n    survey_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT survey_name, COUNT(DISTINCT student_id) AS unique_students FROM SurveyResponses GROUP BY survey_name;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, name FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT name, email FROM students WHERE major = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT * FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT topic, start_date, end_date FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT * FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT response_id, survey_id, student_id FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT rating, feedback FROM responses WHERE rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT * FROM evaluations;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT evaluation_id, survey_id, student_id FROM evaluations;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT question, answer FROM evaluations WHERE survey_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT * FROM surveys WHERE topic LIKE '%data%';",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT * FROM responses WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT * FROM evaluations WHERE student_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT AVG(rating) AS avg_rating FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_responses FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT MAX(rating) AS max_rating FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT topic, COUNT(*) AS total_surveys FROM surveys GROUP BY topic;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS total_evaluations FROM evaluations GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, name, major FROM students WHERE major='Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS total_responses FROM responses GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT topic, COUNT(*) AS total_surveys FROM surveys GROUP BY topic HAVING total_surveys > 5;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT DISTINCT student_id FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT name, email FROM students WHERE student_id IN (SELECT student_id FROM responses);",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, AVG(rating) AS average_rating FROM responses GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT survey_id, topic, COUNT(*) AS total_responses FROM responses INNER JOIN surveys ON responses.survey_id = surveys.survey_id GROUP BY survey_id;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, name, count(*) AS total_evaluations FROM evaluations GROUP BY student_id HAVING total_evaluations >= 3;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, name, MAX(rating) AS highest_rating FROM responses WHERE student_id IN (SELECT student_id FROM evaluations) GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, name, question, answer FROM evaluations INNER JOIN students ON students.student_id = evaluations.student_id WHERE evaluations.answer LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT topic, start_date, end_date FROM surveys WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT name, email FROM students WHERE name LIKE 'A%' AND email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, topic, question, answer FROM evaluations INNER JOIN surveys ON evaluations.survey_id = surveys.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT topic, COUNT(*) AS total_evaluations FROM evaluations INNER JOIN surveys ON evaluations.survey_id = surveys.survey_id GROUP BY survey_id HAVING total_evaluations >= 2;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, name, SUM(rating) AS total_rating FROM responses GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, name, question, COUNT(*) AS total_answers FROM evaluations GROUP BY question;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, MAX(end_date) AS latest_survey_date FROM surveys INNER JOIN responses ON responses.survey_id = surveys.survey_id GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT student_id, name, AVG(rating) AS average_rating FROM responses WHERE student_id IN (SELECT student_id FROM evaluations) GROUP BY student_id HAVING average_rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE students (student_id INT, name VARCHAR(255), email VARCHAR(255), major VARCHAR(255));\n\nCREATE TABLE surveys (survey_id INT, topic VARCHAR(255), start_date DATE, end_date DATE);\n\nCREATE TABLE responses (response_id INT, survey_id INT, student_id INT, rating INT, feedback TEXT);\n\nCREATE TABLE evaluations (evaluation_id INT, survey_id INT, student_id INT, question VARCHAR(255), answer TEXT);\n\n### STATEMENT\n\nSELECT topic, AVG(rating) AS average_rating FROM responses INNER JOIN surveys ON responses.survey_id = surveys.survey_id WHERE end_date < '2022-12-31' GROUP BY topic HAVING average_rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT name, email FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM students WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM classes;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT class_name FROM classes;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT class_id, class_name FROM classes WHERE class_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_name FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, survey_name FROM surveys WHERE survey_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT response_id, survey_id, student_id, response FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, COUNT(*) AS total_responses FROM responses GROUP BY survey_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM evaluations;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, feedback FROM evaluations;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT evaluation_id, student_id, feedback FROM evaluations WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT students.name, classes.class_name FROM students INNER JOIN classes ON students.class_id = classes.class_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT students.name, surveys.survey_name, responses.response FROM students INNER JOIN responses ON students.id = responses.student_id INNER JOIN surveys ON responses.survey_id = surveys.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT students.name, evaluations.feedback FROM students LEFT JOIN evaluations ON students.id = evaluations.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM classes ORDER BY class_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM surveys ORDER BY survey_id ASC LIMIT 5 OFFSET 0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM responses WHERE response LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM students WHERE class_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT s.name, s.email, c.class_name FROM students s JOIN classes c ON s.class_id = c.class_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT s.name, s.email, r.response FROM students s JOIN responses r ON s.id = r.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT s.name, s.email, e.feedback FROM students s JOIN evaluations e ON s.id = e.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT s.name, s.email, sv.survey_name, sv.survey_description FROM students s JOIN responses r ON s.id = r.student_id JOIN surveys sv ON r.survey_id = sv.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT c.class_name, COUNT(s.id) AS total_students FROM classes c JOIN students s ON c.class_id = s.class_id GROUP BY c.class_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT c.class_name, AVG(e.feedback) AS avg_feedback FROM classes c JOIN students s ON c.class_id=s.class_id JOIN evaluations e ON s.id = e.student_id GROUP BY c.class_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT s.name, COUNT(r.response_id) AS total_responses FROM students s JOIN responses r ON s.id = r.student_id GROUP BY s.name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT sv.survey_name, COUNT(r.response_id) AS total_responses FROM surveys sv JOIN responses r ON sv.survey_id = r.survey_id GROUP BY sv.survey_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT c.class_name, sv.survey_name, COUNT(r.response_id) AS total_responses FROM classes c JOIN students s ON c.class_id = s.class_id JOIN responses r ON s.id = r.student_id JOIN surveys sv ON r.survey_id = sv.survey_id GROUP BY c.class_name, sv.survey_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT s.name, AVG(CAST(r.response AS INT)) AS avg_response FROM students s JOIN responses r ON s.id = r.student_id GROUP BY s.name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT sv.survey_name, MAX(CAST(r.response AS INT)) AS max_response FROM surveys sv JOIN responses r ON sv.survey_id = r.survey_id GROUP BY sv.survey_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT c.class_name, MIN(CAST(e.feedback AS INT)) AS min_feedback FROM classes c JOIN students s ON c.class_id = s.class_id JOIN evaluations e ON s.id = e.student_id GROUP BY c.class_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT c.class_name, s.name, MAX(CAST(e.feedback AS INT)) AS max_feedback FROM classes c JOIN students s ON c.class_id = s.class_id JOIN evaluations e ON s.id = e.student_id GROUP BY c.class_name, s.name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT c.class_name, s.name, SUM(CAST(e.feedback AS INT)) AS total_feedback FROM classes c JOIN students s ON c.class_id = s.class_id JOIN evaluations e ON s.id = e.student_id GROUP BY c.class_name, s.name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT s.name, COUNT(distinct r.survey_id) AS total_surveys_answered FROM students s JOIN responses r ON s.id = r.student_id GROUP BY s.name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT c.class_name, AVG(CAST(e.feedback AS INT)) AS avg_feedback, COUNT(distinct s.name) AS total_students_evaluated FROM classes c JOIN students s ON c.class_id = s.class_id JOIN evaluations e ON s.id = e.student_id GROUP BY c.class_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT sv.survey_name, AVG(CAST(r.response AS INT)) AS avg_response, COUNT(distinct s.name) AS total_students_answered FROM surveys sv JOIN responses r ON sv.survey_id = r.survey_id JOIN students s ON r.student_id = s.id GROUP BY sv.survey_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    class_id INT\n);\n\nCREATE TABLE classes (\n    class_id INT PRIMARY KEY,\n    class_name VARCHAR(50)\n);\n\nCREATE TABLE surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(50),\n    survey_description TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    survey_id INT,\n    student_id INT,\n    response TEXT\n);\n\nCREATE TABLE evaluations (\n    evaluation_id INT PRIMARY KEY,\n    student_id INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT c.class_name, s.name, MAX(CAST(e.feedback AS INT)) AS max_feedback, COUNT(distinct sv.survey_name) AS total_surveys_evaluated FROM classes c JOIN students s ON c.class_id = s.class_id JOIN evaluations e ON s.id = e.student_id JOIN responses r ON s.id = r.student_id JOIN surveys sv ON r.survey_id = sv.survey_id GROUP BY c.class_name, s.name;"
]