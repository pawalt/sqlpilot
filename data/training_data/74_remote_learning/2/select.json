[
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, title FROM course_materials WHERE type = 'video';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT title, file_url FROM course_materials WHERE type = 'pdf';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, type FROM course_materials WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM course_materials WHERE type = 'video';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(created_at) FROM course_materials;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT type FROM course_materials;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE title LIKE '%lesson%';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE created_at >= '2022-01-01' AND created_at <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(created_at) FROM course_materials;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(created_at) FROM course_materials;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE type IN ('video', 'pdf');",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, title FROM course_materials WHERE type = 'video' AND created_at >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT type) FROM course_materials;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE title ILIKE '%lesson%';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE created_at < NOW();",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE type = 'assignment';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, title, created_at FROM course_materials WHERE created_at >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT title, type FROM course_materials WHERE type = 'lecture' ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE title LIKE '%database%';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM course_materials;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT type FROM course_materials;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE type IN ('exam', 'quiz') ORDER BY created_at ASC;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, type FROM course_materials WHERE type = 'assignment' AND title LIKE '%database%';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT title, type FROM course_materials WHERE EXTRACT(YEAR FROM created_at) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE type = 'lecture' LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(EXTRACT(EPOCH FROM created_at)) AS avg_time FROM course_materials;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(created_at) AS latest_material FROM course_materials;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE type = 'assignment' AND created_at BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT title, COUNT(*) AS count FROM course_materials GROUP BY title HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT type, COUNT(*) AS count FROM course_materials GROUP BY type ORDER BY count DESC;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, title, created_at FROM course_materials WHERE title ILIKE 'introduction%' AND type = 'lecture';",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE id = (SELECT MAX(id) FROM course_materials);",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE type = 'assignment' UNION SELECT * FROM course_materials WHERE type = 'quiz' ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT type, AVG(EXTRACT(EPOCH FROM created_at)) AS avg_time FROM course_materials GROUP BY type HAVING AVG(EXTRACT(EPOCH FROM created_at)) > 0;",
  "### TABLEDATA\n\nCREATE TABLE course_materials (\n  id UUID PRIMARY KEY,\n  title VARCHAR(100) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  file_url TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM course_materials WHERE title = 'Introduction to Databases' AND type = 'lecture';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM lecture_slides;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT slide_id, topic FROM lecture_slides;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT topic FROM lecture_slides WHERE slide_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM course_assignments;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT assignment_name, deadline FROM course_assignments;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT deadline FROM course_assignments WHERE assignment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM lecture_slides WHERE topic = 'Introduction';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT slide_id, topic FROM lecture_slides WHERE slide_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM course_assignments WHERE deadline > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT assignment_name, description FROM course_assignments WHERE assignment_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM lecture_slides WHERE slide_id BETWEEN 1 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT topic FROM lecture_slides WHERE slide_id IN (3, 5, 7);",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM course_assignments WHERE description LIKE '%project%';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT slide_id, slide_content FROM lecture_slides WHERE topic LIKE '%SQL%';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM course_assignments WHERE deadline < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT assignment_name FROM course_assignments ORDER BY deadline ASC;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT assignment_name, deadline FROM course_assignments ORDER BY deadline DESC;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM lecture_slides LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM course_assignments LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM lecture_slides;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM lecture_slides WHERE slide_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT topic FROM lecture_slides WHERE slide_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT topic, slide_content FROM lecture_slides WHERE topic LIKE 'Introduction%';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT slide_id, topic, slide_content FROM lecture_slides WHERE topic = 'Advanced Topics';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM lecture_slides WHERE topic = 'Database Management Systems' AND slide_content LIKE '%Normalization%';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT assignment_name, deadline FROM course_assignments WHERE deadline > '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM course_assignments WHERE description LIKE '%research%';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT assignment_id, deadline FROM course_assignments WHERE assignment_name = 'Term Project';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM lecture_slides ls JOIN course_assignments ca ON ls.slide_id = ca.assignment_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT ls.slide_id, ca.assignment_name FROM lecture_slides ls JOIN course_assignments ca ON ls.slide_id = ca.assignment_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT ls.topic, ca.assignment_name, ca.deadline FROM lecture_slides ls JOIN course_assignments ca ON ls.slide_id = ca.assignment_id WHERE ls.topic LIKE '%Data Structures%';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT ls.slide_id, ca.assignment_name FROM lecture_slides ls JOIN course_assignments ca ON ls.slide_id = ca.assignment_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT ls.slide_id, ls.topic, ca.assignment_name FROM lecture_slides ls LEFT JOIN course_assignments ca ON ls.slide_id = ca.assignment_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_assignments FROM course_assignments;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(deadline) AS average_deadline FROM course_assignments;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(deadline) AS latest_deadline FROM course_assignments;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT assignment_name, SUBSTRING(description, 1, 50) AS short_description FROM course_assignments;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT assignment_id, DATE_FORMAT(deadline, '%Y-%m-%d') AS formatted_deadline FROM course_assignments;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT SUM(slide_id) AS total_slide_ids FROM lecture_slides;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    topic VARCHAR(255),\n    slide_content TEXT\n);\n\nCREATE TABLE course_assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_name VARCHAR(255),\n    deadline DATE,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT slide_id, slide_content, LENGTH(slide_content) AS content_length FROM lecture_slides WHERE slide_id < 10;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM lecture_slides;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT slide_title, lecture_date FROM lecture_slides WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM assignments;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT assignment_title, due_date FROM assignments WHERE course_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM readings;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT reading_title, author FROM readings WHERE course_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM lecture_slides WHERE lecture_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM assignments WHERE due_date < '2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM readings WHERE author = 'Jane Doe';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT slide_title FROM lecture_slides WHERE course_id = 1 AND lecture_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT assignment_title FROM assignments WHERE course_id = 2 AND due_date < '2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT reading_title FROM readings WHERE course_id = 3 AND author = 'Alice Smith';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT slide_title FROM lecture_slides WHERE course_id = 1 AND lecture_date >= '2022-01-01' ORDER BY lecture_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT assignment_title FROM assignments WHERE course_id = 2 AND due_date < '2022-07-01' ORDER BY due_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT reading_title FROM readings WHERE course_id = 3 AND author = 'Alice Smith' ORDER BY reading_title ASC;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(course_id) FROM lecture_slides;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM assignments;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(course_id) FROM readings;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(lecture_date) FROM lecture_slides;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT course_id FROM assignments;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, slide_title FROM lecture_slides WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM assignments WHERE due_date > '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT reading_title, author FROM readings WHERE course_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT slide_title, lecture_date FROM lecture_slides WHERE slide_title LIKE '%Introduction%';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM readings WHERE author = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT slide_title, lecture_date FROM lecture_slides WHERE lecture_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT assignment_title, due_date FROM assignments WHERE course_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, reading_title FROM readings WHERE course_id = 1 AND author = 'Jane Doe';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT slide_title FROM lecture_slides WHERE course_id = 2 ORDER BY lecture_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM assignments WHERE course_id = 1 AND due_date < '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT slide_title, lecture_date FROM lecture_slides WHERE course_id = 3 AND lecture_date > '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT assignment_title, due_date FROM assignments WHERE course_id = 2 ORDER BY due_date;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM readings WHERE course_id = 3 AND author LIKE '%Brown%';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, slide_title, lecture_date FROM lecture_slides WHERE lecture_date < '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT assignment_title FROM assignments WHERE course_id = 1 AND due_date < '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT reading_title, author FROM readings WHERE course_id = 2 AND author = 'David Johnson';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT slide_title, lecture_date FROM lecture_slides WHERE course_id = 1 AND slide_title LIKE '%Chapter%';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM assignments WHERE course_id = 3 AND due_date > '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT reading_title, author FROM readings WHERE course_id = 1 AND author LIKE '%Williams%';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    id SERIAL PRIMARY KEY,\n    slide_title VARCHAR(100) NOT NULL,\n    lecture_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE assignments (\n    id SERIAL PRIMARY KEY,\n    assignment_title VARCHAR(100) NOT NULL,\n    due_date DATE NOT NULL,\n    course_id INT NOT NULL\n);\n\nCREATE TABLE readings (\n    id SERIAL PRIMARY KEY,\n    reading_title VARCHAR(100) NOT NULL,\n    author VARCHAR(100) NOT NULL,\n    course_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT slide_title, lecture_date FROM lecture_slides WHERE course_id = 2 AND lecture_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM LectureSlides;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT slide_title, slide_file_path FROM LectureSlides;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT slide_title, lecture_id FROM LectureSlides WHERE slide_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Assignments;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT assignment_title, deadline FROM Assignments;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT assignment_description FROM Assignments WHERE course_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Readings;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT reading_title, author_name FROM Readings;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT reading_file_path FROM Readings WHERE course_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT course_name, instructor_name FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT course_description FROM Courses WHERE course_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT slide_title, lecture_id FROM LectureSlides WHERE slide_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT assignment_title, deadline FROM Assignments WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT reading_title, author_name FROM Readings WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT course_name, instructor_name FROM Courses WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM LectureSlides WHERE lecture_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Assignments WHERE course_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Readings WHERE course_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Courses WHERE instructor_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM LectureSlides WHERE lecture_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT slide_title, slide_file_path FROM LectureSlides WHERE slide_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT assignment_title, deadline FROM Assignments WHERE course_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT reading_title, reading_file_path, author_name FROM Readings WHERE course_id = 301;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT course_name, course_description FROM Courses WHERE instructor_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT slide_title, lecture_id FROM LectureSlides WHERE slide_title LIKE '%Introduction%';",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT assignment_id, assignment_title, deadline FROM Assignments WHERE deadline > NOW();",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT reading_title, reading_file_path, course_id FROM Readings WHERE author_name = 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT course_name, instructor_name, start_date FROM Courses WHERE course_id = 401;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT slide_title, slide_file_path, lecture_id FROM LectureSlides WHERE lecture_id IN (101, 102);",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT assignment_id, assignment_title, deadline FROM Assignments WHERE course_id = 202 OR course_id = 203;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT reading_title, author_name, course_id FROM Readings WHERE author_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT course_name, instructor_name, start_date FROM Courses WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT slide_id, slide_title, lecture_id FROM LectureSlides WHERE slide_id BETWEEN 10 AND 20;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT assignment_title, deadline, course_id FROM Assignments ORDER BY deadline DESC;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT reading_title, reading_file_path, author_name FROM Readings WHERE course_id = 302 ORDER BY reading_title ASC;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT course_name, course_description, instructor_name FROM Courses WHERE instructor_name LIKE '%Doe%';",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT slide_id, slide_title, lecture_id FROM LectureSlides WHERE slide_title LIKE '%Chapter%' AND lecture_id = 103;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT assignment_id, assignment_title, deadline FROM Assignments WHERE course_id = 204 AND deadline > '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT reading_title, author_name, course_id FROM Readings WHERE author_name = 'John Smith' AND course_id = 303;",
  "### TABLEDATA\n\nCREATE TABLE LectureSlides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    slide_file_path VARCHAR(255),\n    lecture_id INT\n);\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    assignment_description TEXT,\n    deadline TIMESTAMP,\n    course_id INT\n);\n\nCREATE TABLE Readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    reading_file_path VARCHAR(255),\n    author_name VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    instructor_name VARCHAR(255),\n    start_date DATE\n);\n\n### STATEMENT\n\nSELECT course_name, start_date FROM Courses WHERE start_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM lecture_slides;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT slide_title, lecture_id FROM lecture_slides WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT reading_title, course_id FROM readings;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT course_title, instructor FROM courses WHERE instructor = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT assignment_title, due_date FROM assignments WHERE course_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT student_name FROM students WHERE course_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM lecture_slides WHERE slide_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT slide_title, lecture_id FROM lecture_slides WHERE lecture_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT course_title, instructor FROM courses WHERE course_title LIKE '%SQL%';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT reading_title FROM readings WHERE course_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT MAX(slide_id) AS max_slide_id FROM lecture_slides;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT AVG(assignment_id) AS avg_assignment_id FROM assignments;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT MIN(student_id) AS min_student_id FROM students;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(course_id) AS count_courses FROM students;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT instructor FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM assignments WHERE due_date > '2022-10-30';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT course_title, student_name FROM courses JOIN students ON courses.course_id = students.course_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT lecture_id, COUNT(slide_id) AS slide_count FROM lecture_slides GROUP BY lecture_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT course_title, AVG(assignment_id) AS avg_assignment FROM courses JOIN assignments ON courses.course_id = assignments.course_id GROUP BY course_title;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, course_title FROM students JOIN courses ON students.course_id = courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM lecture_slides ls JOIN courses c ON ls.course_id = c.course_id WHERE c.instructor = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT ls.slide_title, c.course_title FROM lecture_slides ls JOIN courses c ON ls.course_id = c.course_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT r.reading_title, c.course_title FROM readings r JOIN courses c ON r.course_id = c.course_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT ls.slide_title, a.assignment_title FROM lecture_slides ls JOIN assignments a ON ls.course_id = a.course_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT s.student_name, c.course_title FROM students s JOIN courses c ON s.course_id = c.course_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT ls.slide_title, a.assignment_title, r.reading_title FROM lecture_slides ls JOIN assignments a ON ls.course_id = a.course_id JOIN readings r ON a.course_id = r.course_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT ls.slide_title, c.course_title, s.student_name FROM lecture_slides ls JOIN courses c ON ls.course_id = c.course_id JOIN students s ON c.course_id = s.course_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM assignments WHERE due_date >= '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT ls.slide_title, a.assignment_title FROM lecture_slides ls JOIN assignments a ON ls.course_id = a.course_id WHERE a.due_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT ls.slide_title, r.reading_title, a.assignment_title FROM lecture_slides ls JOIN readings r ON ls.course_id = r.course_id JOIN assignments a ON ls.course_id = a.course_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT ls.slide_title, c.course_title, a.assignment_title FROM lecture_slides ls JOIN courses c ON ls.course_id = c.course_id JOIN assignments a ON c.course_id = a.course_id;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT c.course_title, COUNT(s.student_id) AS total_students FROM courses c JOIN students s ON c.course_id = s.course_id GROUP BY c.course_title;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT c.course_title, AVG(a.due_date) AS avg_due_date FROM courses c JOIN assignments a ON c.course_id = a.course_id GROUP BY c.course_title;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT ls.slide_title, COUNT(a.assignment_id) AS total_assignments FROM lecture_slides ls JOIN assignments a ON ls.course_id = a.course_id GROUP BY ls.slide_title;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT s.student_name, c.course_title, COUNT(ls.slide_id) AS total_slides FROM students s JOIN courses c ON s.course_id = c.course_id JOIN lecture_slides ls ON s.course_id = ls.course_id GROUP BY s.student_name, c.course_title;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT c.course_title, MAX(a.due_date) AS latest_due_date FROM courses c JOIN assignments a ON c.course_id = a.course_id GROUP BY c.course_title;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT r.reading_title, COUNT(c.course_id) AS total_courses FROM readings r JOIN courses c ON r.course_id = c.course_id GROUP BY r.reading_title;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT c.course_title, MIN(a.due_date) AS earliest_due_date FROM courses c JOIN assignments a ON c.course_id = a.course_id GROUP BY c.course_title;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT ls.slide_title, MAX(a.due_date) AS latest_due_date FROM lecture_slides ls JOIN assignments a ON ls.course_id = a.course_id GROUP BY ls.slide_title;",
  "### TABLEDATA\n\nCREATE TABLE lecture_slides (\n    slide_id INT PRIMARY KEY,\n    slide_title VARCHAR(255),\n    course_id INT,\n    lecture_id INT\n);\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    assignment_title VARCHAR(255),\n    course_id INT,\n    due_date DATE\n);\n\nCREATE TABLE readings (\n    reading_id INT PRIMARY KEY,\n    reading_title VARCHAR(255),\n    course_id INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(255),\n    instructor VARCHAR(255)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    course_id INT\n);\n\n### STATEMENT\n\nSELECT a.assignment_title, MIN(a.due_date) AS earliest_due_date FROM assignments a GROUP BY a.assignment_title;"
]