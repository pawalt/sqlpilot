[
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (1, 'Alice', ['Math', 'Science'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (2, 'Bob', ['History', 'English'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (3, 'Charlie', ['Art', 'Music'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (4, 'David', ['Physics', 'Chemistry'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (5, 'Eve', ['Biology', 'Geography'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (6, 'Frank', ['Computer Science', 'Statistics'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (7, 'Grace', ['Economics', 'Political Science'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (8, 'Henry', ['Psychology', 'Sociology'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (9, 'Ivy', ['Philosophy', 'Anthropology'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (10, 'Jack', ['Engineering', 'Architecture'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (11, 'Katie', ['Literature', 'Languages'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (12, 'Leo', ['Business', 'Management'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (13, 'Mia', ['Fashion Design', 'Marketing'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (14, 'Nathan', ['Film Production', 'Performing Arts'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (15, 'Olivia', ['Dance', 'Fitness'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (16, 'Peter', ['Nutrition', 'Health Sciences'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (17, 'Quinn', ['Astronomy', 'Astrophysics'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (18, 'Ruth', ['Environmental Studies', 'Geology'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (19, 'Sam', ['Physical Therapy', 'Occupational Therapy'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, course_enrollments) VALUES (20, 'Tyler', ['Forensic Science', 'Criminal Justice'])",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (1, 'Alice', ['Math', 'English']) ON CONFLICT (student_id) DO UPDATE SET name = 'Alice', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Science')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (2, 'Bob', ['Physics', 'Chemistry']) ON CONFLICT (student_id) DO UPDATE SET name = 'Bob', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Biology')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (3, 'Charlie', ['History', 'Geography']) ON CONFLICT (student_id) DO UPDATE SET name = 'Charlie', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Literature')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (4, 'David', ['Computer Science', 'Programming']) ON CONFLICT (student_id) DO UPDATE SET name = 'David', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Data Science')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (5, 'Eve', ['Art', 'Music']) ON CONFLICT (student_id) DO UPDATE SET name = 'Eve', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Dance')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (6, 'Frank', ['Biology', 'Chemistry']) ON CONFLICT (student_id) DO UPDATE SET name = 'Frank', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Physics')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (7, 'Grace', ['Literature', 'History']) ON CONFLICT (student_id) DO UPDATE SET name = 'Grace', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Geography')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (8, 'Henry', ['Data Science', 'Machine Learning']) ON CONFLICT (student_id) DO UPDATE SET name = 'Henry', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Artificial Intelligence')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (9, 'Ivy', ['Dance', 'Sculpture']) ON CONFLICT (student_id) DO UPDATE SET name = 'Ivy', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Painting')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (10, 'Jack', ['Physics', 'Mathematics']) ON CONFLICT (student_id) DO UPDATE SET name = 'Jack', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Computer Science')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (11, 'Kelly', ['Art', 'Drawing']) ON CONFLICT (student_id) DO UPDATE SET name = 'Kelly', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Singing')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (12, 'Leo', ['Sculpture', 'Painting']) ON CONFLICT (student_id) DO UPDATE SET name = 'Leo', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Dance')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (13, 'Mia', ['Chemistry', 'Biology']) ON CONFLICT (student_id) DO UPDATE SET name = 'Mia', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Physics')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (14, 'Nathan', ['Machine Learning', 'Artificial Intelligence']) ON CONFLICT (student_id) DO UPDATE SET name = 'Nathan', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Data Science')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (15, 'Olivia', ['Mathematics', 'Computer Science']) ON CONFLICT (student_id) DO UPDATE SET name = 'Olivia', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Programming')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (16, 'Peter', ['History', 'Geography']) ON CONFLICT (student_id) DO UPDATE SET name = 'Peter', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Literature')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (17, 'Quinn', ['Art', 'Music']) ON CONFLICT (student_id) DO UPDATE SET name = 'Quinn', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Dance')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (18, 'Rachel', ['Biology', 'Chemistry']) ON CONFLICT (student_id) DO UPDATE SET name = 'Rachel', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Physics')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (19, 'Sam', ['Literature', 'History']) ON CONFLICT (student_id) DO UPDATE SET name = 'Sam', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Geography')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, course_enrollments) VALUES (20, 'Tom', ['Data Science', 'Machine Learning']) ON CONFLICT (student_id) DO UPDATE SET name = 'Tom', course_enrollments = ARRAY_APPEND(students.course_enrollments, 'Artificial Intelligence')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, course_enrollments) VALUES ('123e4567-e89b-12d3-a456-426655440000', 'John Doe', ['Math', 'Science']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, course_enrollments) VALUES ('223e4567-e89b-12d3-a456-426655440001', 'Alice Smith', ['History', 'English']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, course_enrollments) VALUES ('323e4567-e89b-12d3-a456-426655440002', 'Bob Johnson', ['Art', 'Music']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, course_enrollments) VALUES ('423e4567-e89b-12d3-a456-426655440003', 'Eva Brown', ['Physics', 'Chemistry']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, course_enrollments) VALUES ('523e4567-e89b-12d3-a456-426655440004', 'Sam Wilson', ['Computer Science', 'Biology']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, course_enrollments) VALUES ('623e4567-e89b-12d3-a456-426655440005', 'Linda White', ['Psychology', 'Sociology']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, course_enrollments) VALUES ('723e4567-e89b-12d3-a456-426655440006', 'Mike Brown', ['Geography', 'Economics']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, course_enrollments) VALUES ('823e4567-e89b-12d3-a456-426655440007', 'Sarah Davis', ['Public Speaking', 'Literature']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, course_enrollmen...",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('ee485e5c-64d2-4c05-b8a7-e2141b3798c5', 'Alice', ARRAY['Math', 'Physics'] ) ON CONFLICT (id) DO UPDATE SET name = 'Alice', course_enrollments = ARRAY['Math', 'Physics'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('b37f7e38-e8d5-416b-9989-e6bb3c85d4ba', 'Bob', ARRAY['History', 'English'] ) ON CONFLICT (id) DO UPDATE SET name = 'Bob', course_enrollments = ARRAY['History', 'English'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('8f021cda-7c39-45ed-8ed2-3e1901ce22d9', 'Charlie', ARRAY['Biology', 'Chemistry'] ) ON CONFLICT (id) DO UPDATE SET name = 'Charlie', course_enrollments = ARRAY['Biology', 'Chemistry'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('e61796a9-074d-4c3f-828c-9c9fbc94b534', 'David', ARRAY['Geography', 'Computer Science'] ) ON CONFLICT (id) DO UPDATE SET name = 'David', course_enrollments = ARRAY['Geography', 'Computer Science'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('3d0360d4-ff0d-4bc1-bd83-0c4c40050227', 'Eve', ARRAY['Art', 'Music'] ) ON CONFLICT (id) DO UPDATE SET name = 'Eve', course_enrollments = ARRAY['Art', 'Music'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('7587c00a-4bab-4190-af2c-9842f9f6cded', 'Frank', ARRAY['Literature', 'Drama'] ) ON CONFLICT (id) DO UPDATE SET name = 'Frank', course_enrollments = ARRAY['Literature', 'Drama'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('db9113d2-b6f2-4d1b-8c04-08a515046998', 'Grace', ARRAY['Physical Education', 'Health'] ) ON CONFLICT (id) DO UPDATE SET name = 'Grace', course_enrollments = ARRAY['Physical Education', 'Health'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('25b8c429-cef1-4d11-8f42-f43e8a68c9d7', 'Henry', ARRAY['Economics', 'Finance'] ) ON CONFLICT (id) DO UPDATE SET name = 'Henry', course_enrollments = ARRAY['Economics', 'Finance'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('8a5a4e1b-a8aa-4b48-921c-fae015313b2f', 'Isabel', ARRAY['Sociology', 'Psychology'] ) ON CONFLICT (id) DO UPDATE SET name = 'Isabel', course_enrollments = ARRAY['Sociology', 'Psychology'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('aff4a3c7-233f-41d8-8350-ddf58faa8e1f', 'Jack', ARRAY['Engineering', 'Architecture'] ) ON CONFLICT (id) DO UPDATE SET name = 'Jack', course_enrollments = ARRAY['Engineering', 'Architecture'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('fa3b6c60-c244-4adc-82cc-0bee898a62b6', 'Katie', ARRAY['Statistics', 'Data Science'] ) ON CONFLICT (id) DO UPDATE SET name = 'Katie', course_enrollments = ARRAY['Statistics', 'Data Science'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('2afe4aec-74cb-4f1b-9009-398efe9210e8', 'Liam', ARRAY['Communications', 'Marketing'] ) ON CONFLICT (id) DO UPDATE SET name = 'Liam', course_enrollments = ARRAY['Communications', 'Marketing'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('1f80b03c-025f-4529-8f0b-0e2522b6c0c6', 'Mia', ARRAY['Nutrition', 'Dietetics'] ) ON CONFLICT (id) DO UPDATE SET name = 'Mia', course_enrollments = ARRAY['Nutrition', 'Dietetics'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('83d4ff29-2b19-4333-a77d-0fd005e763c9', 'Nathan', ARRAY['Environmental Science', 'Geology'] ) ON CONFLICT (id) DO UPDATE SET name = 'Nathan', course_enrollments = ARRAY['Environmental Science', 'Geology'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('14d5727c-eb6f-4cfc-8ace-452425964463', 'Olivia', ARRAY['Political Science', 'Public Administration'] ) ON CONFLICT (id) DO UPDATE SET name = 'Olivia', course_enrollments = ARRAY['Political Science', 'Public Administration'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('377ab89f-e426-4736-8bca-ef15998f7e80', 'Patrick', ARRAY['Law', 'Criminal Justice'] ) ON CONFLICT (id) DO UPDATE SET name = 'Patrick', course_enrollments = ARRAY['Law', 'Criminal Justice'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('e07285d4-cf35-4bdc-85a8-c370158cc83e', 'Quinn', ARRAY['Philosophy', 'Religious Studies'] ) ON CONFLICT (id) DO UPDATE SET name = 'Quinn', course_enrollments = ARRAY['Philosophy', 'Religious Studies'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('a6b6e0ba-feaf-4d1b-a4b0-95c88a8f79cd', 'Rachel', ARRAY['Anthropology', 'Archaeology'] ) ON CONFLICT (id) DO UPDATE SET name = 'Rachel', course_enrollments = ARRAY['Anthropology', 'Archaeology'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('98e7b6ef-954e-4de4-933e-98d03dd9e0bc', 'Sam', ARRAY['Languages', 'Linguistics'] ) ON CONFLICT (id) DO UPDATE SET name = 'Sam', course_enrollments = ARRAY['Languages', 'Linguistics'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id UUID PRIMARY KEY,\n    name STRING,\n    course_enrollments ARRAY<STRING>\n);\n\nCREATE TABLE courses (\n    course_id UUID PRIMARY KEY,\n    course_name STRING\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, course_enrollments) VALUES ('d378f925-b896-477a-842d-d44a0a37b1f4', 'Tyler', ARRAY['Astrophysics', 'Astronomy'] ) ON CONFLICT (id) DO UPDATE SET name = 'Tyler', course_enrollments = ARRAY['Astrophysics', 'Astronomy'];",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Alice', '[1,2]') ON CONFLICT (student_id) DO UPDATE SET name = 'Alice', student_course_enrollments = '[1,2]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Bob', '[2,3]') ON CONFLICT (student_id) DO UPDATE SET name = 'Bob', student_course_enrollments = '[2,3]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Charlie', '[3,4]') ON CONFLICT (student_id) DO UPDATE SET name = 'Charlie', student_course_enrollments = '[3,4]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('David', '[4,5]') ON CONFLICT (student_id) DO UPDATE SET name = 'David', student_course_enrollments = '[4,5]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Emma', '[1,3]') ON CONFLICT (student_id) DO UPDATE SET name = 'Emma', student_course_enrollments = '[1,3]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Fiona', '[2,4]') ON CONFLICT (student_id) DO UPDATE SET name = 'Fiona', student_course_enrollments = '[2,4]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('George', '[3,5]') ON CONFLICT (student_id) DO UPDATE SET name = 'George', student_course_enrollments = '[3,5]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Hannah', '[1,4]') ON CONFLICT (student_id) DO UPDATE SET name = 'Hannah', student_course_enrollments = '[1,4]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Ian', '[2,5]') ON CONFLICT (student_id) DO UPDATE SET name = 'Ian', student_course_enrollments = '[2,5]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Jane', '[1,5]') ON CONFLICT (student_id) DO UPDATE SET name = 'Jane', student_course_enrollments = '[1,5]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Kelly', '[1,2,3]') ON CONFLICT (student_id) DO UPDATE SET name = 'Kelly', student_course_enrollments = '[1,2,3]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Leo', '[2,3,4]') ON CONFLICT (student_id) DO UPDATE SET name = 'Leo', student_course_enrollments = '[2,3,4]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Mia', '[3,4,5]') ON CONFLICT (student_id) DO UPDATE SET name = 'Mia', student_course_enrollments = '[3,4,5]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Noah', '[1,4,5]') ON CONFLICT (student_id) DO UPDATE SET name = 'Noah', student_course_enrollments = '[1,4,5]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Olivia', '[1,2,5]') ON CONFLICT (student_id) DO UPDATE SET name = 'Olivia', student_course_enrollments = '[1,2,5]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Peter', '[2,3,5]') ON CONFLICT (student_id) DO UPDATE SET name = 'Peter', student_course_enrollments = '[2,3,5]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Quinn', '[1,3,4]') ON CONFLICT (student_id) DO UPDATE SET name = 'Quinn', student_course_enrollments = '[1,3,4]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Rachel', '[1,2,4]') ON CONFLICT (student_id) DO UPDATE SET name = 'Rachel', student_course_enrollments = '[1,2,4]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Sam', '[2,4,5]') ON CONFLICT (student_id) DO UPDATE SET name = 'Sam', student_course_enrollments = '[2,4,5]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (name, student_course_enrollments) VALUES ('Tom', '[1,3,5]') ON CONFLICT (student_id) DO UPDATE SET name = 'Tom', student_course_enrollments = '[1,3,5]';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (1, 'Alice', {'math': true, 'history': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Alice', student_course_enrollments = {'math': true, 'history': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (2, 'Bob', {'math': true, 'computing': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Bob', student_course_enrollments = {'math': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (3, 'Charlie', {'history': true, 'computing': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Charlie', student_course_enrollments = {'history': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (4, 'David', {'math': false, 'history': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'David', student_course_enrollments = {'math': true, 'history': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (5, 'Eve', {'history': true, 'computing': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Eve', student_course_enrollments = {'history': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (6, 'Fiona', {'math': true, 'computing': true}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Fiona', student_course_enrollments = {'math': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (7, 'George', {'math': true, 'history': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'George', student_course_enrollments = {'math': true, 'history': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (8, 'Hannah', {'math': true, 'computing': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Hannah', student_course_enrollments = {'math': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (9, 'Ian', {'history': true, 'computing': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Ian', student_course_enrollments = {'history': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (10, 'Julia', {'math': false, 'history': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Julia', student_course_enrollments = {'math': true, 'history': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (11, 'Kevin', {'history': true, 'computing': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Kevin', student_course_enrollments = {'history': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (12, 'Lisa', {'math': true, 'computing': true}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Lisa', student_course_enrollments = {'math': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (13, 'Michael', {'math': true, 'history': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Michael', student_course_enrollments = {'math': true, 'history': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (14, 'Naomi', {'math': true, 'computing': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Naomi', student_course_enrollments = {'math': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (15, 'Oscar', {'history': true, 'computing': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Oscar', student_course_enrollments = {'history': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (16, 'Pamela', {'math': false, 'history': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Pamela', student_course_enrollments = {'math': true, 'history': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (17, 'Quentin', {'history': true, 'computing': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Quentin', student_course_enrollments = {'history': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (18, 'Rachel', {'math': true, 'computing': true}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Rachel', student_course_enrollments = {'math': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (19, 'Samuel', {'math': true, 'history': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Samuel', student_course_enrollments = {'math': true, 'history': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    student_course_enrollments JSONB\n);\n\n\nCREATE TABLE courses (\n    course_id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE enrollments (\n    enrollment_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    course_id INT REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, student_course_enrollments) VALUES (20, 'Tina', {'history': true, 'computing': false}::JSONB) ON CONFLICT (student_id) DO UPDATE SET name = 'Tina', student_course_enrollments = {'history': true, 'computing': true}::JSONB;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (1, 'Alice', 'Computer Science') ON DUPLICATE KEY UPDATE student_name = 'Alice', student_major = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (2, 'Bob', 'Mathematics') ON DUPLICATE KEY UPDATE student_name = 'Bob', student_major = 'Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (3, 'Charlie', 'Physics') ON DUPLICATE KEY UPDATE student_name = 'Charlie', student_major = 'Physics';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (4, 'David', 'Biology') ON DUPLICATE KEY UPDATE student_name = 'David', student_major = 'Biology';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (5, 'Eve', 'Chemistry') ON DUPLICATE KEY UPDATE student_name = 'Eve', student_major = 'Chemistry';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (6, 'Frank', 'History') ON DUPLICATE KEY UPDATE student_name = 'Frank', student_major = 'History';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (7, 'Gina', 'English') ON DUPLICATE KEY UPDATE student_name = 'Gina', student_major = 'English';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (8, 'Henry', 'Art') ON DUPLICATE KEY UPDATE student_name = 'Henry', student_major = 'Art';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (9, 'Ivy', 'Psychology') ON DUPLICATE KEY UPDATE student_name = 'Ivy', student_major = 'Psychology';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (10, 'Jack', 'Music') ON DUPLICATE KEY UPDATE student_name = 'Jack', student_major = 'Music';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (1, 'Math 101') ON DUPLICATE KEY UPDATE course_name = 'Math 101';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (2, 'Physics 201') ON DUPLICATE KEY UPDATE course_name = 'Physics 201';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (3, 'Chemistry 301') ON DUPLICATE KEY UPDATE course_name = 'Chemistry 301';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (4, 'Biology 101') ON DUPLICATE KEY UPDATE course_name = 'Biology 101';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (5, 'Art History 201') ON DUPLICATE KEY UPDATE course_name = 'Art History 201';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (6, 'English Literature 101') ON DUPLICATE KEY UPDATE course_name = 'English Literature 101';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (7, 'Music Theory 301') ON DUPLICATE KEY UPDATE course_name = 'Music Theory 301';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (8, 'Computer Science 101') ON DUPLICATE KEY UPDATE course_name = 'Computer Science 101';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (9, 'Psychology 201') ON DUPLICATE KEY UPDATE course_name = 'Psychology 201';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (10, 'History 301') ON DUPLICATE KEY UPDATE course_name = 'History 301';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (1, 'Alice', 'Computer Science') ON DUPLICATE KEY UPDATE student_major='Information Technology';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (101, 'Mathematics') ON DUPLICATE KEY UPDATE course_name='Math';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (201, 1, 101, '2022-01-15') ON DUPLICATE KEY UPDATE enrollment_date='2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_id, enrollment_id, grade_score) VALUES (301, 201, 85.5) ON DUPLICATE KEY UPDATE grade_score=90.0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (2, 'Bob', 'Physics') ON DUPLICATE KEY UPDATE student_major='Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (102, 'Physics') ON DUPLICATE KEY UPDATE course_name='Astrophysics';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (202, 2, 102, '2022-02-10') ON DUPLICATE KEY UPDATE enrollment_date='2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_id, enrollment_id, grade_score) VALUES (302, 202, 88.2) ON DUPLICATE KEY UPDATE grade_score=91.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (3, 'Charlie', 'Engineering') ON DUPLICATE KEY UPDATE student_major='Electrical Engineering';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (103, 'Engineering Design') ON DUPLICATE KEY UPDATE course_name='Design Principles';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (203, 3, 103, '2022-03-20') ON DUPLICATE KEY UPDATE enrollment_date='2022-03-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_id, enrollment_id, grade_score) VALUES (303, 203, 78.9) ON DUPLICATE KEY UPDATE grade_score=82.0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (4, 'David', 'Biology') ON DUPLICATE KEY UPDATE student_major='Genetics';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (104, 'Biology Lab') ON DUPLICATE KEY UPDATE course_name='Genetics Lab';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (204, 4, 104, '2022-04-05') ON DUPLICATE KEY UPDATE enrollment_date='2022-04-10';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_id, enrollment_id, grade_score) VALUES (304, 204, 92.7) ON DUPLICATE KEY UPDATE grade_score=95.0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_major) VALUES (5, 'Eve', 'History') ON DUPLICATE KEY UPDATE student_major='Archaeology';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (105, 'World History') ON DUPLICATE KEY UPDATE course_name='Ancient Civilizations';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (205, 5, 105, '2022-05-15') ON DUPLICATE KEY UPDATE enrollment_date='2022-05-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_major VARCHAR(255)\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY(student_id) REFERENCES students(student_id),\n    FOREIGN KEY(course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    grade_score DECIMAL(5, 2),\n    FOREIGN KEY(enrollment_id) REFERENCES enrollments(enrollment_id)\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_id, enrollment_id, grade_score) VALUES (305, 205, 86.4) ON DUPLICATE KEY UPDATE grade_score=89.0;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (1, 'Alice', '2021-01-15') ON CONFLICT (student_id) DO UPDATE SET name = 'Alice', enrollment_date = '2021-01-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (2, 'Bob', '2021-02-20') ON CONFLICT (student_id) DO UPDATE SET name = 'Bob', enrollment_date = '2021-02-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (3, 'Charlie', '2021-03-25') ON CONFLICT (student_id) DO UPDATE SET name = 'Charlie', enrollment_date = '2021-03-25';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (4, 'David', '2021-04-30') ON CONFLICT (student_id) DO UPDATE SET name = 'David', enrollment_date = '2021-04-30';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (5, 'Eve', '2021-05-05') ON CONFLICT (student_id) DO UPDATE SET name = 'Eve', enrollment_date = '2021-05-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (6, 'Frank', '2021-06-10') ON CONFLICT (student_id) DO UPDATE SET name = 'Frank', enrollment_date = '2021-06-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (7, 'Grace', '2021-07-15') ON CONFLICT (student_id) DO UPDATE SET name = 'Grace', enrollment_date = '2021-07-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (8, 'Hank', '2021-08-20') ON CONFLICT (student_id) DO UPDATE SET name = 'Hank', enrollment_date = '2021-08-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (9, 'Ivy', '2021-09-25') ON CONFLICT (student_id) DO UPDATE SET name = 'Ivy', enrollment_date = '2021-09-25';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (10, 'Jack', '2021-10-30') ON CONFLICT (student_id) DO UPDATE SET name = 'Jack', enrollment_date = '2021-10-30';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name) VALUES (1, 'Mathematics') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name) VALUES (2, 'Physics') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Physics';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name) VALUES (3, 'Chemistry') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Chemistry';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name) VALUES (4, 'Biology') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Biology';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name) VALUES (5, 'History') ON CONFLICT (course_id) DO UPDATE SET course_name = 'History';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (1, 1, 1, '2021-01-15') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 1, course_id = 1, enrollment_date = '2021-01-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (2, 2, 2, '2021-02-20') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 2, course_id = 2, enrollment_date = '2021-02-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (3, 3, 3, '2021-03-25') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 3, course_id = 3, enrollment_date = '2021-03-25';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (4, 4, 4, '2021-04-30') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 4, course_id = 4, enrollment_date = '2021-04-30';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (5, 5, 5, '2021-05-05') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 5, course_id = 5, enrollment_date = '2021-05-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (1, 'Alice', '2022-01-15') ON CONFLICT (student_id) DO UPDATE SET name = 'Alice', enrollment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name) VALUES (1, 'Mathematics') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (1, 1, 1, '2022-01-15') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 1, course_id = 1, enrollment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, enrollment_id, grade_value) VALUES (1, 1, 'A') ON CONFLICT (grade_id) DO UPDATE SET enrollment_id = 1, grade_value = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Teachers (teacher_id, teacher_name) VALUES (1, 'John Doe') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (2, 'Bob', '2022-03-10') ON CONFLICT (student_id) DO UPDATE SET name = 'Bob', enrollment_date = '2022-03-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name) VALUES (2, 'Science') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Science';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (2, 2, 2, '2022-03-10') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 2, course_id = 2, enrollment_date = '2022-03-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, enrollment_id, grade_value) VALUES (2, 2, 'B') ON CONFLICT (grade_id) DO UPDATE SET enrollment_id = 2, grade_value = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Teachers (teacher_id, teacher_name) VALUES (2, 'Jane Smith') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (3, 'Charlie', '2022-02-20') ON CONFLICT (student_id) DO UPDATE SET name = 'Charlie', enrollment_date = '2022-02-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name) VALUES (3, 'History') ON CONFLICT (course_id) DO UPDATE SET course_name = 'History';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (3, 3, 3, '2022-02-20') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 3, course_id = 3, enrollment_date = '2022-02-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, enrollment_id, grade_value) VALUES (3, 3, 'C') ON CONFLICT (grade_id) DO UPDATE SET enrollment_id = 3, grade_value = 'C';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Teachers (teacher_id, teacher_name) VALUES (3, 'Samuel Johnson') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = 'Samuel Johnson';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, enrollment_date) VALUES (4, 'Daisy', '2022-04-05') ON CONFLICT (student_id) DO UPDATE SET name = 'Daisy', enrollment_date = '2022-04-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name) VALUES (4, 'English') ON CONFLICT (course_id) DO UPDATE SET course_name = 'English';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (4, 4, 4, '2022-04-05') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 4, course_id = 4, enrollment_date = '2022-04-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, enrollment_id, grade_value) VALUES (4, 4, 'D') ON CONFLICT (grade_id) DO UPDATE SET enrollment_id = 4, grade_value = 'D';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR,\n  enrollment_date DATE\n)\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR\n)\n\nCREATE TABLE Enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT REFERENCES Students(student_id),\n  course_id INT REFERENCES Courses(course_id),\n  enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT REFERENCES Enrollments(enrollment_id),\n  grade_value VARCHAR\n)\n\nCREATE TABLE Teachers (\n  teacher_id INT PRIMARY KEY,\n  teacher_name VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Teachers (teacher_id, teacher_name) VALUES (4, 'Michael Jordan') ON CONFLICT (teacher_id) DO UPDATE SET teacher_name = 'Michael Jordan';"
]