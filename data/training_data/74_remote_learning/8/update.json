[
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255),\n  event_date DATE,\n  event_description TEXT,\n  event_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPDATE virtual_events SET event_name = 'Summer Virtual Event' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255),\n  event_date DATE,\n  event_description TEXT,\n  event_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPDATE virtual_events SET event_date = '2022-08-15' WHERE event_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255),\n  event_date DATE,\n  event_description TEXT,\n  event_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPDATE virtual_events SET event_description = 'Join us for a virtual experience' WHERE event_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255),\n  event_date DATE,\n  event_description TEXT,\n  event_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPDATE virtual_events SET event_name='Virtual Conference', event_date='2023-05-20', event_description='Attend our annual virtual conference for industry professionals.', event_type='Conference' WHERE event_id=1",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255),\n  event_date DATE,\n  event_description TEXT,\n  event_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPDATE virtual_events SET event_name='Webinar Series', event_date='2023-06-15', event_description='Join our weekly webinar series on emerging technology trends.', event_type='Webinar' WHERE event_id=3",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255),\n  event_date DATE,\n  event_description TEXT,\n  event_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPDATE virtual_events SET event_name='Product Launch', event_date='2023-04-10', event_description='Announcing the launch of our new product line.', event_type='Product Launch' WHERE event_id=2",
  "### TABLEDATA\n\nCREATE TABLE Event (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE Workshop (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    speaker_name VARCHAR(255),\n    workshop_date DATE\n);\n\n### STATEMENT\n\nUPDATE Event SET event_name = 'Updated Event Name' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Event (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE Workshop (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    speaker_name VARCHAR(255),\n    workshop_date DATE\n);\n\n### STATEMENT\n\nUPDATE Workshop SET speaker_name = 'Updated Speaker Name' WHERE workshop_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Event (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE Workshop (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    speaker_name VARCHAR(255),\n    workshop_date DATE\n);\n\n### STATEMENT\n\nUPDATE Event SET event_location = 'Updated Event Location' WHERE event_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Event (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE Workshop (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    speaker_name VARCHAR(255),\n    workshop_date DATE\n);\n\n### STATEMENT\n\nUPDATE Event SET event_name = 'Annual Conference' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Event (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE Workshop (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    speaker_name VARCHAR(255),\n    workshop_date DATE\n);\n\n### STATEMENT\n\nUPDATE Workshop SET speaker_name = 'Jane Doe' WHERE workshop_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Event (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE Workshop (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    speaker_name VARCHAR(255),\n    workshop_date DATE\n);\n\n### STATEMENT\n\nUPDATE Workshop SET workshop_name = 'Advanced Workshop' WHERE speaker_name = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE workshops (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    workshop_date DATE,\n    workshop_instructor VARCHAR(255)\n);\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    participant_email VARCHAR(255),\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id)\n);\n\n### STATEMENT\n\nUPDATE virtual_events SET event_location = 'Online' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE workshops (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    workshop_date DATE,\n    workshop_instructor VARCHAR(255)\n);\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    participant_email VARCHAR(255),\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id)\n);\n\n### STATEMENT\n\nUPDATE workshops SET workshop_date = '2022-08-25' WHERE workshop_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE workshops (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    workshop_date DATE,\n    workshop_instructor VARCHAR(255)\n);\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    participant_email VARCHAR(255),\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id)\n);\n\n### STATEMENT\n\nUPDATE participants SET participant_email = 'newemail@example.com' WHERE participant_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE workshops (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    workshop_date DATE,\n    workshop_instructor VARCHAR(255)\n);\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    participant_email VARCHAR(255),\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id)\n);\n\n### STATEMENT\n\nUPDATE virtual_events SET event_name = 'Annual Conference 2023' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE workshops (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    workshop_date DATE,\n    workshop_instructor VARCHAR(255)\n);\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    participant_email VARCHAR(255),\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id)\n);\n\n### STATEMENT\n\nUPDATE workshops SET workshop_instructor = 'John Doe' WHERE workshop_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE workshops (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    workshop_date DATE,\n    workshop_instructor VARCHAR(255)\n);\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    participant_email VARCHAR(255),\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id)\n);\n\n### STATEMENT\n\nUPDATE participants SET participant_email = 'newemail@example.com' WHERE participant_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE workshops (\n  workshop_id INT PRIMARY KEY,\n  workshop_name VARCHAR(255) NOT NULL,\n  workshop_date DATE NOT NULL,\n  workshop_description TEXT\n);\n\nCREATE TABLE participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255) NOT NULL,\n  participant_email VARCHAR(255) UNIQUE NOT NULL,\n  participant_phone VARCHAR(15)\n);\n\nCREATE TABLE registrations (\n  registration_id INT PRIMARY KEY,\n  event_id INT,\n  participant_id INT,\n  registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events(event_id),\n  CONSTRAINT fk_participant FOREIGN KEY (participant_id) REFERENCES participants(participant_id)\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Summer Party' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE workshops (\n  workshop_id INT PRIMARY KEY,\n  workshop_name VARCHAR(255) NOT NULL,\n  workshop_date DATE NOT NULL,\n  workshop_description TEXT\n);\n\nCREATE TABLE participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255) NOT NULL,\n  participant_email VARCHAR(255) UNIQUE NOT NULL,\n  participant_phone VARCHAR(15)\n);\n\nCREATE TABLE registrations (\n  registration_id INT PRIMARY KEY,\n  event_id INT,\n  participant_id INT,\n  registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events(event_id),\n  CONSTRAINT fk_participant FOREIGN KEY (participant_id) REFERENCES participants(participant_id)\n);\n\n### STATEMENT\n\nUPDATE workshops SET workshop_date = '2022-09-15' WHERE workshop_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE workshops (\n  workshop_id INT PRIMARY KEY,\n  workshop_name VARCHAR(255) NOT NULL,\n  workshop_date DATE NOT NULL,\n  workshop_description TEXT\n);\n\nCREATE TABLE participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255) NOT NULL,\n  participant_email VARCHAR(255) UNIQUE NOT NULL,\n  participant_phone VARCHAR(15)\n);\n\nCREATE TABLE registrations (\n  registration_id INT PRIMARY KEY,\n  event_id INT,\n  participant_id INT,\n  registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events(event_id),\n  CONSTRAINT fk_participant FOREIGN KEY (participant_id) REFERENCES participants(participant_id)\n);\n\n### STATEMENT\n\nUPDATE participants SET participant_phone = '123-456-7890' WHERE participant_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE workshops (\n  workshop_id INT PRIMARY KEY,\n  workshop_name VARCHAR(255) NOT NULL,\n  workshop_date DATE NOT NULL,\n  workshop_description TEXT\n);\n\nCREATE TABLE participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255) NOT NULL,\n  participant_email VARCHAR(255) UNIQUE NOT NULL,\n  participant_phone VARCHAR(15)\n);\n\nCREATE TABLE registrations (\n  registration_id INT PRIMARY KEY,\n  event_id INT,\n  participant_id INT,\n  registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events(event_id),\n  CONSTRAINT fk_participant FOREIGN KEY (participant_id) REFERENCES participants(participant_id)\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Updated Event Name' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE workshops (\n  workshop_id INT PRIMARY KEY,\n  workshop_name VARCHAR(255) NOT NULL,\n  workshop_date DATE NOT NULL,\n  workshop_description TEXT\n);\n\nCREATE TABLE participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255) NOT NULL,\n  participant_email VARCHAR(255) UNIQUE NOT NULL,\n  participant_phone VARCHAR(15)\n);\n\nCREATE TABLE registrations (\n  registration_id INT PRIMARY KEY,\n  event_id INT,\n  participant_id INT,\n  registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events(event_id),\n  CONSTRAINT fk_participant FOREIGN KEY (participant_id) REFERENCES participants(participant_id)\n);\n\n### STATEMENT\n\nUPDATE workshops SET workshop_date = '2022-12-31' WHERE workshop_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE workshops (\n  workshop_id INT PRIMARY KEY,\n  workshop_name VARCHAR(255) NOT NULL,\n  workshop_date DATE NOT NULL,\n  workshop_description TEXT\n);\n\nCREATE TABLE participants (\n  participant_id INT PRIMARY KEY,\n  participant_name VARCHAR(255) NOT NULL,\n  participant_email VARCHAR(255) UNIQUE NOT NULL,\n  participant_phone VARCHAR(15)\n);\n\nCREATE TABLE registrations (\n  registration_id INT PRIMARY KEY,\n  event_id INT,\n  participant_id INT,\n  registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events(event_id),\n  CONSTRAINT fk_participant FOREIGN KEY (participant_id) REFERENCES participants(participant_id)\n);\n\n### STATEMENT\n\nUPDATE participants SET participant_phone = '+1234567890' WHERE participant_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    event_id INT,\n    registration_date DATE,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id)\n);\n\nCREATE TABLE workshops (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    workshop_description TEXT,\n    workshop_instructor VARCHAR(255)\n);\n\nCREATE TABLE workshop_attendees (\n    attendee_id INT,\n    workshop_id INT,\n    attendance_date DATE,\n    FOREIGN KEY (attendee_id) REFERENCES event_attendees(attendee_id),\n    FOREIGN KEY (workshop_id) REFERENCES workshops(workshop_id)\n);\n\nCREATE TABLE event_feedback (\n    feedback_id INT PRIMARY KEY,\n    event_id INT,\n    attendee_id INT,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES event_attendees(attendee_id)\n);\n\n### STATEMENT\n\nUPDATE virtual_events SET event_name = 'New Event Name' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    event_id INT,\n    registration_date DATE,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id)\n);\n\nCREATE TABLE workshops (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    workshop_description TEXT,\n    workshop_instructor VARCHAR(255)\n);\n\nCREATE TABLE workshop_attendees (\n    attendee_id INT,\n    workshop_id INT,\n    attendance_date DATE,\n    FOREIGN KEY (attendee_id) REFERENCES event_attendees(attendee_id),\n    FOREIGN KEY (workshop_id) REFERENCES workshops(workshop_id)\n);\n\nCREATE TABLE event_feedback (\n    feedback_id INT PRIMARY KEY,\n    event_id INT,\n    attendee_id INT,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES event_attendees(attendee_id)\n);\n\n### STATEMENT\n\nUPDATE event_attendees SET registration_date = '2022-12-31' WHERE attendee_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    event_id INT,\n    registration_date DATE,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id)\n);\n\nCREATE TABLE workshops (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    workshop_description TEXT,\n    workshop_instructor VARCHAR(255)\n);\n\nCREATE TABLE workshop_attendees (\n    attendee_id INT,\n    workshop_id INT,\n    attendance_date DATE,\n    FOREIGN KEY (attendee_id) REFERENCES event_attendees(attendee_id),\n    FOREIGN KEY (workshop_id) REFERENCES workshops(workshop_id)\n);\n\nCREATE TABLE event_feedback (\n    feedback_id INT PRIMARY KEY,\n    event_id INT,\n    attendee_id INT,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES event_attendees(attendee_id)\n);\n\n### STATEMENT\n\nUPDATE workshops SET workshop_instructor = 'New Instructor' WHERE workshop_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    event_id INT,\n    registration_date DATE,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id)\n);\n\nCREATE TABLE workshops (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    workshop_description TEXT,\n    workshop_instructor VARCHAR(255)\n);\n\nCREATE TABLE workshop_attendees (\n    attendee_id INT,\n    workshop_id INT,\n    attendance_date DATE,\n    FOREIGN KEY (attendee_id) REFERENCES event_attendees(attendee_id),\n    FOREIGN KEY (workshop_id) REFERENCES workshops(workshop_id)\n);\n\nCREATE TABLE event_feedback (\n    feedback_id INT PRIMARY KEY,\n    event_id INT,\n    attendee_id INT,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES event_attendees(attendee_id)\n);\n\n### STATEMENT\n\nUPDATE virtual_events SET event_location = 'New Location' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    event_id INT,\n    registration_date DATE,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id)\n);\n\nCREATE TABLE workshops (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    workshop_description TEXT,\n    workshop_instructor VARCHAR(255)\n);\n\nCREATE TABLE workshop_attendees (\n    attendee_id INT,\n    workshop_id INT,\n    attendance_date DATE,\n    FOREIGN KEY (attendee_id) REFERENCES event_attendees(attendee_id),\n    FOREIGN KEY (workshop_id) REFERENCES workshops(workshop_id)\n);\n\nCREATE TABLE event_feedback (\n    feedback_id INT PRIMARY KEY,\n    event_id INT,\n    attendee_id INT,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES event_attendees(attendee_id)\n);\n\n### STATEMENT\n\nUPDATE event_attendees SET registration_date = '2023-01-01' WHERE attendee_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE virtual_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    event_id INT,\n    registration_date DATE,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id)\n);\n\nCREATE TABLE workshops (\n    workshop_id INT PRIMARY KEY,\n    workshop_name VARCHAR(255),\n    workshop_description TEXT,\n    workshop_instructor VARCHAR(255)\n);\n\nCREATE TABLE workshop_attendees (\n    attendee_id INT,\n    workshop_id INT,\n    attendance_date DATE,\n    FOREIGN KEY (attendee_id) REFERENCES event_attendees(attendee_id),\n    FOREIGN KEY (workshop_id) REFERENCES workshops(workshop_id)\n);\n\nCREATE TABLE event_feedback (\n    feedback_id INT PRIMARY KEY,\n    event_id INT,\n    attendee_id INT,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (event_id) REFERENCES virtual_events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES event_attendees(attendee_id)\n);\n\n### STATEMENT\n\nUPDATE workshops SET workshop_instructor = 'New Instructor' WHERE workshop_id = 1;"
]