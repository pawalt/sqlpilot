[
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (1, 'Enrolled', 'High', 90.5) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='High', performance_score=90.5;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (2, 'Enrolled', 'Medium', 85.3) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='Medium', performance_score=85.3;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (3, 'Dropped', 'Low', 70.2) ON DUPLICATE KEY UPDATE enrollment_status='Dropped', engagement_level='Low', performance_score=70.2;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (4, 'Enrolled', 'High', 95.8) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='High', performance_score=95.8;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (5, 'Enrolled', 'Low', 77.6) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='Low', performance_score=77.6;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (6, 'Dropped', 'Low', 65.2) ON DUPLICATE KEY UPDATE enrollment_status='Dropped', engagement_level='Low', performance_score=65.2;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (7, 'Enrolled', 'Medium', 82.1) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='Medium', performance_score=82.1;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (8, 'Dropped', 'Low', 68.5) ON DUPLICATE KEY UPDATE enrollment_status='Dropped', engagement_level='Low', performance_score=68.5;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (9, 'Enrolled', 'High', 91.3) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='High', performance_score=91.3;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (10, 'Enrolled', 'Low', 79.4) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='Low', performance_score=79.4;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (11, 'Enrolled', 'Medium', 84.7) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='Medium', performance_score=84.7;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (12, 'Dropped', 'Low', 72.6) ON DUPLICATE KEY UPDATE enrollment_status='Dropped', engagement_level='Low', performance_score=72.6;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (13, 'Enrolled', 'High', 93.9) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='High', performance_score=93.9;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (14, 'Dropped', 'Low', 67.8) ON DUPLICATE KEY UPDATE enrollment_status='Dropped', engagement_level='Low', performance_score=67.8;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (15, 'Enrolled', 'Medium', 81.2) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='Medium', performance_score=81.2;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (16, 'Enrolled', 'Low', 75.4) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='Low', performance_score=75.4;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (17, 'Dropped', 'Low', 69.8) ON DUPLICATE KEY UPDATE enrollment_status='Dropped', engagement_level='Low', performance_score=69.8;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (18, 'Enrolled', 'High', 89.2) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='High', performance_score=89.2;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (19, 'Enrolled', 'Medium', 86.5) ON DUPLICATE KEY UPDATE enrollment_status='Enrolled', engagement_level='Medium', performance_score=86.5;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (20, 'Dropped', 'Low', 71.3) ON DUPLICATE KEY UPDATE enrollment_status='Dropped', engagement_level='Low', performance_score=71.3;",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (1, 'Enrolled', 'High', 85.5)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (2, 'Graduated', 'Low', 70.2)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (3, 'Dropped Out', 'Medium', 60.9)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (4, 'Enrolled', 'High', 88.7)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (5, 'Enrolled', 'Low', 75.3)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (6, 'Graduated', 'High', 92.1)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (7, 'Dropped Out', 'Low', 68.5)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (8, 'Enrolled', 'Medium', 78.9)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (9, 'Graduated', 'High', 90.5)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (10, 'Enrolled', 'Low', 73.2)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (11, 'Graduated', 'Medium', 85.6)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (12, 'Enrolled', 'High', 89.2)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (13, 'Dropped Out', 'Low', 65.8)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (14, 'Enrolled', 'Medium', 77.4)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (15, 'Graduated', 'High', 92.5)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (16, 'Enrolled', 'Low', 70.3)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (17, 'Enrolled', 'High', 87.1)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (18, 'Graduated', 'Low', 75.5)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (19, 'Enrolled', 'High', 88.9)",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n    student_id INT PRIMARY KEY,\n    enrollment_status VARCHAR(255),\n    engagement_level VARCHAR(255),\n    performance_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports (student_id, enrollment_status, engagement_level, performance_score) VALUES (20, 'Enrolled', 'Low', 72.8)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (1, 'Alice', '2021-09-01') ON DUPLICATE KEY UPDATE student_name = 'Alice', enrollment_date = '2021-09-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (2, 'Bob', '2021-09-15') ON DUPLICATE KEY UPDATE student_name = 'Bob', enrollment_date = '2021-09-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (3, 'Charlie', '2021-08-20') ON DUPLICATE KEY UPDATE student_name = 'Charlie', enrollment_date = '2021-08-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (4, 'David', '2021-10-01') ON DUPLICATE KEY UPDATE student_name = 'David', enrollment_date = '2021-10-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (5, 'Eve', '2021-07-05') ON DUPLICATE KEY UPDATE student_name = 'Eve', enrollment_date = '2021-07-05';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (6, 'Frank', '2021-11-12') ON DUPLICATE KEY UPDATE student_name = 'Frank', enrollment_date = '2021-11-12';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (7, 'Grace', '2021-06-30') ON DUPLICATE KEY UPDATE student_name = 'Grace', enrollment_date = '2021-06-30';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (8, 'Helen', '2021-12-03') ON DUPLICATE KEY UPDATE student_name = 'Helen', enrollment_date = '2021-12-03';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (9, 'Ian', '2021-05-18') ON DUPLICATE KEY UPDATE student_name = 'Ian', enrollment_date = '2021-05-18';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (10, 'Julia', '2021-03-25') ON DUPLICATE KEY UPDATE student_name = 'Julia', enrollment_date = '2021-03-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (11, 'Kevin', '2021-02-10') ON DUPLICATE KEY UPDATE student_name = 'Kevin', enrollment_date = '2021-02-10';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (12, 'Lucy', '2021-01-07') ON DUPLICATE KEY UPDATE student_name = 'Lucy', enrollment_date = '2021-01-07';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (13, 'Michael', '2021-11-30') ON DUPLICATE KEY UPDATE student_name = 'Michael', enrollment_date = '2021-11-30';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (14, 'Nancy', '2021-10-22') ON DUPLICATE KEY UPDATE student_name = 'Nancy', enrollment_date = '2021-10-22';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (15, 'Olivia', '2021-08-05') ON DUPLICATE KEY UPDATE student_name = 'Olivia', enrollment_date = '2021-08-05';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (16, 'Peter', '2021-09-15') ON DUPLICATE KEY UPDATE student_name = 'Peter', enrollment_date = '2021-09-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (17, 'Quinn', '2021-07-20') ON DUPLICATE KEY UPDATE student_name = 'Quinn', enrollment_date = '2021-07-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (18, 'Rachel', '2021-05-12') ON DUPLICATE KEY UPDATE student_name = 'Rachel', enrollment_date = '2021-05-12';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (19, 'Sam', '2021-03-01') ON DUPLICATE KEY UPDATE student_name = 'Sam', enrollment_date = '2021-03-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (20, 'Tom', '2021-01-25') ON DUPLICATE KEY UPDATE student_name = 'Tom', enrollment_date = '2021-01-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (1, 'Alice', '2022-01-10') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice', enrollment_date = '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (2, 'Bob', '2021-12-15') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob', enrollment_date = '2021-12-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (3, 'Charlie', '2021-11-20') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Charlie', enrollment_date = '2021-11-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (4, 'David', '2022-02-05') ON CONFLICT (student_id) DO UPDATE SET student_name = 'David', enrollment_date = '2022-02-05';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (5, 'Eve', '2022-03-01') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Eve', enrollment_date = '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (6, 'Frank', '2022-04-10') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Frank', enrollment_date = '2022-04-10';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (7, 'Grace', '2022-05-15') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Grace', enrollment_date = '2022-05-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (8, 'Henry', '2022-06-20') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Henry', enrollment_date = '2022-06-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (9, 'Isabelle', '2022-07-25') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Isabelle', enrollment_date = '2022-07-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (10, 'Jack', '2022-08-30') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Jack', enrollment_date = '2022-08-30';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, course_code, grade, semester) VALUES (1, 'CS101', 'A', 'Fall') ON CONFLICT (student_id, course_code) DO UPDATE SET grade = 'A', semester = 'Fall';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, course_code, grade, semester) VALUES (2, 'CS101', 'B', 'Spring') ON CONFLICT (student_id, course_code) DO UPDATE SET grade = 'B', semester = 'Spring';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, course_code, grade, semester) VALUES (3, 'CS102', 'A', 'Fall') ON CONFLICT (student_id, course_code) DO UPDATE SET grade = 'A', semester = 'Fall';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, course_code, grade, semester) VALUES (4, 'CS102', 'C', 'Spring') ON CONFLICT (student_id, course_code) DO UPDATE SET grade = 'C', semester = 'Spring';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, course_code, grade, semester) VALUES (5, 'CS103', 'B', 'Fall') ON CONFLICT (student_id, course_code) DO UPDATE SET grade = 'B', semester = 'Fall';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, course_code, grade, semester) VALUES (6, 'CS103', 'A', 'Spring') ON CONFLICT (student_id, course_code) DO UPDATE SET grade = 'A', semester = 'Spring';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, course_code, grade, semester) VALUES (7, 'CS104', 'B', 'Fall') ON CONFLICT (student_id, course_code) DO UPDATE SET grade = 'B', semester = 'Fall';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, course_code, grade, semester) VALUES (8, 'CS104', 'C', 'Spring') ON CONFLICT (student_id, course_code) DO UPDATE SET grade = 'C', semester = 'Spring';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, course_code, grade, semester) VALUES (9, 'CS105', 'A', 'Fall') ON CONFLICT (student_id, course_code) DO UPDATE SET grade = 'A', semester = 'Fall';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    PRIMARY KEY (student_id)\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_code VARCHAR(10),\n    grade CHAR(2),\n    semester VARCHAR(10),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    PRIMARY KEY (student_id, course_code)\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, course_code, grade, semester) VALUES (10, 'CS105', 'B', 'Spring') ON CONFLICT (student_id, course_code) DO UPDATE SET grade = 'B', semester = 'Spring';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (1, 101, '2022-01-01')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (2, 102, '2022-01-15')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (3, 103, '2022-02-01')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (4, 104, '2022-02-15')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (5, 105, '2022-03-01')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (6, 106, '2022-03-15')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (7, 107, '2022-04-01')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (8, 108, '2022-04-15')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (9, 109, '2022-05-01')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (10, 110, '2022-05-15')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (11, 111, '2022-06-01')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (12, 112, '2022-06-15')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (13, 113, '2022-07-01')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (14, 114, '2022-07-15')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (15, 115, '2022-08-01')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (16, 116, '2022-08-15')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (17, 117, '2022-09-01')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (18, 118, '2022-09-15')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (19, 119, '2022-10-01')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment (student_id, course_id, enrollment_date) VALUES (20, 120, '2022-10-15')",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment(student_id, course_id, enrollment_date) VALUES (1, 101, '2022-01-01') ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Engagement(student_id, course_id, engagement_score, engagement_date) VALUES (1, 101, 85.5, '2022-01-01') ON CONFLICT (student_id, course_id) DO UPDATE SET engagement_score = 85.5, engagement_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Performance(student_id, course_id, performance_score, performance_date) VALUES (1, 101, 90.3, '2022-01-01') ON CONFLICT (student_id, course_id) DO UPDATE SET performance_score = 90.3, performance_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment(student_id, course_id, enrollment_date) VALUES (2, 102, '2022-01-02') ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Engagement(student_id, course_id, engagement_score, engagement_date) VALUES (2, 102, 78.9, '2022-01-02') ON CONFLICT (student_id, course_id) DO UPDATE SET engagement_score = 78.9, engagement_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Performance(student_id, course_id, performance_score, performance_date) VALUES (2, 102, 87.6, '2022-01-02') ON CONFLICT (student_id, course_id) DO UPDATE SET performance_score = 87.6, performance_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment(student_id, course_id, enrollment_date) VALUES (3, 103, '2022-01-03') ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Engagement(student_id, course_id, engagement_score, engagement_date) VALUES (3, 103, 92.1, '2022-01-03') ON CONFLICT (student_id, course_id) DO UPDATE SET engagement_score = 92.1, engagement_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Performance(student_id, course_id, performance_score, performance_date) VALUES (3, 103, 95.4, '2022-01-03') ON CONFLICT (student_id, course_id) DO UPDATE SET performance_score = 95.4, performance_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment(student_id, course_id, enrollment_date) VALUES (4, 104, '2022-01-04') ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Engagement(student_id, course_id, engagement_score, engagement_date) VALUES (4, 104, 80.2, '2022-01-04') ON CONFLICT (student_id, course_id) DO UPDATE SET engagement_score = 80.2, engagement_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Performance(student_id, course_id, performance_score, performance_date) VALUES (4, 104, 91.7, '2022-01-04') ON CONFLICT (student_id, course_id) DO UPDATE SET performance_score = 91.7, performance_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment(student_id, course_id, enrollment_date) VALUES (5, 105, '2022-01-05') ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Engagement(student_id, course_id, engagement_score, engagement_date) VALUES (5, 105, 86.3, '2022-01-05') ON CONFLICT (student_id, course_id) DO UPDATE SET engagement_score = 86.3, engagement_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Performance(student_id, course_id, performance_score, performance_date) VALUES (5, 105, 89.5, '2022-01-05') ON CONFLICT (student_id, course_id) DO UPDATE SET performance_score = 89.5, performance_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment(student_id, course_id, enrollment_date) VALUES (6, 106, '2022-01-06') ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = '2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Engagement(student_id, course_id, engagement_score, engagement_date) VALUES (6, 106, 79.8, '2022-01-06') ON CONFLICT (student_id, course_id) DO UPDATE SET engagement_score = 79.8, engagement_date = '2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Performance(student_id, course_id, performance_score, performance_date) VALUES (6, 106, 93.2, '2022-01-06') ON CONFLICT (student_id, course_id) DO UPDATE SET performance_score = 93.2, performance_date = '2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Enrollment(student_id, course_id, enrollment_date) VALUES (7, 107, '2022-01-07') ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = '2022-01-07';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Engagement(student_id, course_id, engagement_score, engagement_date) VALUES (7, 107, 88.1, '2022-01-07') ON CONFLICT (student_id, course_id) DO UPDATE SET engagement_score = 88.1, engagement_date = '2022-01-07';",
  "### TABLEDATA\n\nCREATE TABLE Enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Engagement (\n    student_id INT,\n    course_id INT,\n    engagement_score FLOAT,\n    engagement_date DATE\n);\n\nCREATE TABLE Performance (\n    student_id INT,\n    course_id INT,\n    performance_score FLOAT,\n    performance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO Performance(student_id, course_id, performance_score, performance_date) VALUES (7, 107, 94.6, '2022-01-07') ON CONFLICT (student_id, course_id) DO UPDATE SET performance_score = 94.6, performance_date = '2022-01-07';",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (1, '2022-01-15', 101, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (2, '2022-02-20', 102, 'Pending') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (3, '2022-03-25', 103, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (4, '2022-04-30', 104, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (5, '2022-05-10', 105, 'Pending') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (6, '2022-06-12', 106, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (7, '2022-07-18', 107, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (8, '2022-08-22', 108, 'Pending') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (9, '2022-09-28', 109, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (10, '2022-10-30', 110, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (11, '2022-11-05', 111, 'Pending') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (12, '2022-12-10', 112, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (13, '2023-01-15', 113, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (14, '2023-02-20', 114, 'Pending') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (15, '2023-03-25', 115, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (16, '2023-04-30', 116, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (17, '2023-05-10', 117, 'Pending') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (18, '2023-06-12', 118, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (19, '2023-07-18', 119, 'Enrolled') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (20, '2023-08-22', 120, 'Pending') ON DUPLICATE KEY UPDATE enrollment_date = VALUES(enrollment_date), program_id = VALUES(program_id), enrollment_status = VALUES(enrollment_status);",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (1, '2022-01-01', 101, 'Active') ON CONFLICT (student_id) DO UPDATE SET enrollment_date = '2022-01-01', program_id = 101, enrollment_status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_engagement (engagement_id, student_id, engagement_date, engagement_type, engagement_duration) VALUES (1, 1, '2022-01-01', 'Study Group', 120) ON CONFLICT (engagement_id) DO UPDATE SET student_id = 1, engagement_date = '2022-01-01', engagement_type = 'Study Group', engagement_duration = 120;",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (performance_id, student_id, exam_date, exam_score) VALUES (1, 1, '2022-01-01', 85) ON CONFLICT (performance_id) DO UPDATE SET student_id = 1, exam_date = '2022-01-01', exam_score = 85;",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_report (report_id, student_id, report_date, report_type, report_content) VALUES (1, 1, '2022-01-01', 'Progress Report', 'Student's progress is excellent.') ON CONFLICT (report_id) DO UPDATE SET student_id = 1, report_date = '2022-01-01', report_type = 'Progress Report', report_content = 'Student's progress is excellent.';",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (2, '2022-01-02', 102, 'Inactive') ON CONFLICT (student_id) DO UPDATE SET enrollment_date = '2022-01-02', program_id = 102, enrollment_status = 'Inactive';",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_engagement (engagement_id, student_id, engagement_date, engagement_type, engagement_duration) VALUES (2, 2, '2022-01-02', 'Meeting', 60) ON CONFLICT (engagement_id) DO UPDATE SET student_id = 2, engagement_date = '2022-01-02', engagement_type = 'Meeting', engagement_duration = 60;",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (performance_id, student_id, exam_date, exam_score) VALUES (2, 2, '2022-01-02', 75) ON CONFLICT (performance_id) DO UPDATE SET student_id = 2, exam_date = '2022-01-02', exam_score = 75;",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_report (report_id, student_id, report_date, report_type, report_content) VALUES (2, 2, '2022-01-02', 'Attendance Report', 'Student attended all classes.') ON CONFLICT (report_id) DO UPDATE SET student_id = 2, report_date = '2022-01-02', report_type = 'Attendance Report', report_content = 'Student attended all classes.';",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (3, '2022-01-03', 103, 'Active') ON CONFLICT (student_id) DO UPDATE SET enrollment_date = '2022-01-03', program_id = 103, enrollment_status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_engagement (engagement_id, student_id, engagement_date, engagement_type, engagement_duration) VALUES (3, 3, '2022-01-03', 'Discussion', 90) ON CONFLICT (engagement_id) DO UPDATE SET student_id = 3, engagement_date = '2022-01-03', engagement_type = 'Discussion', engagement_duration = 90;",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (performance_id, student_id, exam_date, exam_score) VALUES (3, 3, '2022-01-03', 90) ON CONFLICT (performance_id) DO UPDATE SET student_id = 3, exam_date = '2022-01-03', exam_score = 90;",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_report (report_id, student_id, report_date, report_type, report_content) VALUES (3, 3, '2022-01-03', 'Feedback Report', 'Positive feedback from teachers.') ON CONFLICT (report_id) DO UPDATE SET student_id = 3, report_date = '2022-01-03', report_type = 'Feedback Report', report_content = 'Positive feedback from teachers.';",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (4, '2022-01-04', 104, 'Active') ON CONFLICT (student_id) DO UPDATE SET enrollment_date = '2022-01-04', program_id = 104, enrollment_status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_engagement (engagement_id, student_id, engagement_date, engagement_type, engagement_duration) VALUES (4, 4, '2022-01-04', 'Study Session', 150) ON CONFLICT (engagement_id) DO UPDATE SET student_id = 4, engagement_date = '2022-01-04', engagement_type = 'Study Session', engagement_duration = 150;",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (performance_id, student_id, exam_date, exam_score) VALUES (4, 4, '2022-01-04', 80) ON CONFLICT (performance_id) DO UPDATE SET student_id = 4, exam_date = '2022-01-04', exam_score = 80;",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_report (report_id, student_id, report_date, report_type, report_content) VALUES (4, 4, '2022-01-04', 'Progress Report', 'Student is making steady progress.') ON CONFLICT (report_id) DO UPDATE SET student_id = 4, report_date = '2022-01-04', report_type = 'Progress Report', report_content = 'Student is making steady progress.';",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_enrollment (student_id, enrollment_date, program_id, enrollment_status) VALUES (5, '2022-01-05', 105, 'Inactive') ON CONFLICT (student_id) DO UPDATE SET enrollment_date = '2022-01-05', program_id = 105, enrollment_status = 'Inactive';",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_engagement (engagement_id, student_id, engagement_date, engagement_type, engagement_duration) VALUES (5, 5, '2022-01-05', 'Group Project', 180) ON CONFLICT (engagement_id) DO UPDATE SET student_id = 5, engagement_date = '2022-01-05', engagement_type = 'Group Project', engagement_duration = 180;",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (performance_id, student_id, exam_date, exam_score) VALUES (5, 5, '2022-01-05', 95) ON CONFLICT (performance_id) DO UPDATE SET student_id = 5, exam_date = '2022-01-05', exam_score = 95;",
  "### TABLEDATA\n\nCREATE TABLE student_enrollment (\n    student_id INT PRIMARY KEY,\n    enrollment_date DATE,\n    program_id INT,\n    enrollment_status VARCHAR(50)\n);\n\nCREATE TABLE student_engagement (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    engagement_duration INT\n);\n\nCREATE TABLE student_performance (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    exam_date DATE,\n    exam_score INT\n);\n\nCREATE TABLE student_report (\n    report_id INT PRIMARY KEY,\n    student_id INT,\n    report_date DATE,\n    report_type VARCHAR(50),\n    report_content TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_report (report_id, student_id, report_date, report_type, report_content) VALUES (5, 5, '2022-01-05', 'Final Report', 'Final report for the semester.') ON CONFLICT (report_id) DO UPDATE SET student_id = 5, report_date = '2022-01-05', report_type = 'Final Report', report_content = 'Final report for the semester.';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (1, 'Alice', 'Smith', '2022-01-15') ON DUPLICATE KEY UPDATE first_name = 'Alice', last_name = 'Smith', enrollment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (2, 'Bob', 'Johnson', '2022-02-20') ON DUPLICATE KEY UPDATE first_name = 'Bob', last_name = 'Johnson', enrollment_date = '2022-02-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (3, 'Charlie', 'Brown', '2022-03-25') ON DUPLICATE KEY UPDATE first_name = 'Charlie', last_name = 'Brown', enrollment_date = '2022-03-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (4, 'David', 'Davis', '2022-04-30') ON DUPLICATE KEY UPDATE first_name = 'David', last_name = 'Davis', enrollment_date = '2022-04-30';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (5, 'Eva', 'Martinez', '2022-05-05') ON DUPLICATE KEY UPDATE first_name = 'Eva', last_name = 'Martinez', enrollment_date = '2022-05-05';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (6, 'Frank', 'Taylor', '2022-06-10') ON DUPLICATE KEY UPDATE first_name = 'Frank', last_name = 'Taylor', enrollment_date = '2022-06-10';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (7, 'Grace', 'Adams', '2022-07-15') ON DUPLICATE KEY UPDATE first_name = 'Grace', last_name = 'Adams', enrollment_date = '2022-07-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (8, 'Henry', 'Cooper', '2022-08-20') ON DUPLICATE KEY UPDATE first_name = 'Henry', last_name = 'Cooper', enrollment_date = '2022-08-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (9, 'Ivy', 'Gomez', '2022-09-25') ON DUPLICATE KEY UPDATE first_name = 'Ivy', last_name = 'Gomez', enrollment_date = '2022-09-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (10, 'Jack', 'Baker', '2022-10-30') ON DUPLICATE KEY UPDATE first_name = 'Jack', last_name = 'Baker', enrollment_date = '2022-10-30';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (101, 'Mathematics', 'Prof. Brown', '2022-01-15', '2022-05-15') ON DUPLICATE KEY UPDATE course_name = 'Mathematics', instructor = 'Prof. Brown', start_date = '2022-01-15', end_date = '2022-05-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (102, 'Science', 'Prof. Green', '2022-02-20', '2022-06-20') ON DUPLICATE KEY UPDATE course_name = 'Science', instructor = 'Prof. Green', start_date = '2022-02-20', end_date = '2022-06-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (103, 'History', 'Prof. White', '2022-03-25', '2022-07-25') ON DUPLICATE KEY UPDATE course_name = 'History', instructor = 'Prof. White', start_date = '2022-03-25', end_date = '2022-07-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (104, 'English', 'Prof. Black', '2022-04-30', '2022-08-30') ON DUPLICATE KEY UPDATE course_name = 'English', instructor = 'Prof. Black', start_date = '2022-04-30', end_date = '2022-08-30';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (105, 'Art', 'Prof. Gray', '2022-05-05', '2022-09-05') ON DUPLICATE KEY UPDATE course_name = 'Art', instructor = 'Prof. Gray', start_date = '2022-05-05', end_date = '2022-09-05';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (106, 'Computer Science', 'Prof. Silver', '2022-06-10', '2022-10-10') ON DUPLICATE KEY UPDATE course_name = 'Computer Science', instructor = 'Prof. Silver', start_date = '2022-06-10', end_date = '2022-10-10';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (107, 'Music', 'Prof. Gold', '2022-07-15', '2022-11-15') ON DUPLICATE KEY UPDATE course_name = 'Music', instructor = 'Prof. Gold', start_date = '2022-07-15', end_date = '2022-11-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (108, 'Physical Education', 'Prof. Bronze', '2022-08-20', '2022-12-20') ON DUPLICATE KEY UPDATE course_name = 'Physical Education', instructor = 'Prof. Bronze', start_date = '2022-08-20', end_date = '2022-12-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (109, 'Chemistry', 'Prof. Copper', '2022-09-25', '2023-01-25') ON DUPLICATE KEY UPDATE course_name = 'Chemistry', instructor = 'Prof. Copper', start_date = '2022-09-25', end_date = '2023-01-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (110, 'Geography', 'Prof. Iron', '2022-10-30', '2023-02-28') ON DUPLICATE KEY UPDATE course_name = 'Geography', instructor = 'Prof. Iron', start_date = '2022-10-30', end_date = '2023-02-28';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (1, 'Alice', 'Smith', '2022-01-15') ON CONFLICT (student_id) DO UPDATE SET first_name = 'Alice', last_name = 'Smith', enrollment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (1, 'Mathematics', 'Professor Brown', '2022-02-01', '2022-05-15') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics', instructor = 'Professor Brown', start_date = '2022-02-01', end_date = '2022-05-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (1, 1, 1, '2022-01-15') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 1, course_id = 1, enrollment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO engagements (engagement_id, student_id, course_id, engagement_date, engagement_type) VALUES (1, 1, 1, '2022-03-10', 'Discussion') ON CONFLICT (engagement_id) DO UPDATE SET student_id = 1, course_id = 1, engagement_date = '2022-03-10', engagement_type = 'Discussion';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO performances (performance_id, student_id, course_id, performance_date, performance_type, grade) VALUES (1, 1, 1, '2022-04-26', 'Exam', 85.50) ON CONFLICT (performance_id) DO UPDATE SET student_id = 1, course_id = 1, performance_date = '2022-04-26', performance_type = 'Exam', grade = 85.50;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (2, 'Bob', 'Johnson', '2022-02-10') ON CONFLICT (student_id) DO UPDATE SET first_name = 'Bob', last_name = 'Johnson', enrollment_date = '2022-02-10';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (2, 'Computer Science', 'Professor White', '2022-03-01', '2022-06-15') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Computer Science', instructor = 'Professor White', start_date = '2022-03-01', end_date = '2022-06-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (2, 2, 2, '2022-02-10') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 2, course_id = 2, enrollment_date = '2022-02-10';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO engagements (engagement_id, student_id, course_id, engagement_date, engagement_type) VALUES (2, 2, 2, '2022-04-15', 'Project') ON CONFLICT (engagement_id) DO UPDATE SET student_id = 2, course_id = 2, engagement_date = '2022-04-15', engagement_type = 'Project';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO performances (performance_id, student_id, course_id, performance_date, performance_type, grade) VALUES (2, 2, 2, '2022-05-20', 'Final Exam', 92.75) ON CONFLICT (performance_id) DO UPDATE SET student_id = 2, course_id = 2, performance_date = '2022-05-20', performance_type = 'Final Exam', grade = 92.75;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (3, 'Charlie', 'Williams', '2022-03-20') ON CONFLICT (student_id) DO UPDATE SET first_name = 'Charlie', last_name = 'Williams', enrollment_date = '2022-03-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (3, 'Art History', 'Professor Green', '2022-04-01', '2022-07-15') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Art History', instructor = 'Professor Green', start_date = '2022-04-01', end_date = '2022-07-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (3, 3, 3, '2022-03-20') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 3, course_id = 3, enrollment_date = '2022-03-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO engagements (engagement_id, student_id, course_id, engagement_date, engagement_type) VALUES (3, 3, 3, '2022-05-25', 'Seminar') ON CONFLICT (engagement_id) DO UPDATE SET student_id = 3, course_id = 3, engagement_date = '2022-05-25', engagement_type = 'Seminar';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO performances (performance_id, student_id, course_id, performance_date, performance_type, grade) VALUES (3, 3, 3, '2022-06-30', 'Presentation', 88.20) ON CONFLICT (performance_id) DO UPDATE SET student_id = 3, course_id = 3, performance_date = '2022-06-30', performance_type = 'Presentation', grade = 88.20;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, first_name, last_name, enrollment_date) VALUES (4, 'David', 'Brown', '2022-04-25') ON CONFLICT (student_id) DO UPDATE SET first_name = 'David', last_name = 'Brown', enrollment_date = '2022-04-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, start_date, end_date) VALUES (4, 'Physics', 'Professor Black', '2022-05-01', '2022-08-15') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Physics', instructor = 'Professor Black', start_date = '2022-05-01', end_date = '2022-08-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (4, 4, 4, '2022-04-25') ON CONFLICT (enrollment_id) DO UPDATE SET student_id = 4, course_id = 4, enrollment_date = '2022-04-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO engagements (engagement_id, student_id, course_id, engagement_date, engagement_type) VALUES (4, 4, 4, '2022-06-20', 'Lab Session') ON CONFLICT (engagement_id) DO UPDATE SET student_id = 4, course_id = 4, engagement_date = '2022-06-20', engagement_type = 'Lab Session';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE engagements (\n    engagement_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    engagement_date DATE,\n    engagement_type VARCHAR(50),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nCREATE TABLE performances (\n    performance_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    performance_date DATE,\n    performance_type VARCHAR(50),\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\n### STATEMENT\n\nUPSERT INTO performances (performance_id, student_id, course_id, performance_date, performance_type, grade) VALUES (4, 4, 4, '2022-07-15', 'Quiz', 75.80) ON CONFLICT (performance_id) DO UPDATE SET student_id = 4, course_id = 4, performance_date = '2022-07-15', performance_type = 'Quiz', grade = 75.80;"
]