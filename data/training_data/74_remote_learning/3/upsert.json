[
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('1', '123', 'Assignment 1', 90, 'Good work')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('2', '456', 'Assignment 2', 85, 'Needs improvement')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('3', '789', 'Assignment 3', 95, 'Excellent job')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('4', '321', 'Assignment 4', 88, 'Well done')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('5', '654', 'Assignment 5', 92, 'Impressive work')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('6', '987', 'Assignment 6', 84, 'Fair effort')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('7', '234', 'Assignment 7', 91, 'Great progress')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('8', '567', 'Assignment 8', 89, 'Almost there')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('9', '890', 'Assignment 9', 93, 'Outstanding performance')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('10', '111', 'Assignment 10', 86, 'Needs more practice')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('11', '222', 'Assignment 11', 94, 'Top-notch work')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('12', '333', 'Assignment 12', 87, 'Good effort')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('13', '444', 'Assignment 13', 96, 'Exceptional job')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('14', '555', 'Assignment 14', 83, 'Needs improvement')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('15', '666', 'Assignment 15', 97, 'Brilliant work')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('16', '777', 'Assignment 16', 82, 'Needs more focus')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('17', '888', 'Assignment 17', 98, 'Spectacular performance')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('18', '999', 'Assignment 18', 81, 'Work in progress')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('19', '000', 'Assignment 19', 99, 'Outstanding achievement')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('20', '100', 'Assignment 20', 80, 'Good start')",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('52447ea4-73c7-4e77-967b-05f2824a85f7', '15e357a9-4fea-4bdc-9c80-78d897d083a7', 'Math HW 1', 85, 'Good job!') ON CONFLICT (id) DO UPDATE SET student_id = '15e357a9-4fea-4bdc-9c80-78d897d083a7', assignment_name = 'Math HW 1', grade = 85, feedback = 'Good job!';",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('0a684b8c-8b14-496e-93ba-2013e0ac9d4a', '15e357a9-4fea-4bdc-9c80-78d897d083a7', 'Math HW 2', 90, 'Excellent work!') ON CONFLICT (id) DO UPDATE SET student_id = '15e357a9-4fea-4bdc-9c80-78d897d083a7', assignment_name = 'Math HW 2', grade = 90, feedback = 'Excellent work!';",
  "### TABLEDATA\n\nCREATE TABLE assignments (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    assignment_name VARCHAR,\n    grade INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO assignments (id, student_id, assignment_name, grade, feedback) VALUES ('6e8a9116-7d1a-446f-b116-8a8bcc918619', '734ddc42-9dd8-4668-9662-5df48abda6b3', 'Engli...",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (1, 1, 95.5, 'Great job!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 95.5, feedback = 'Great job!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (2, 1, 85.5, 'Well done!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 85.5, feedback = 'Well done!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (3, 2, 75.0, 'Needs improvement.') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 75.0, feedback = 'Needs improvement.';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (4, 2, 88.0, 'Keep it up!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 88.0, feedback = 'Keep it up!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (5, 3, 92.5, 'Excellent work!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 92.5, feedback = 'Excellent work!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (6, 3, 78.0, 'Try harder.') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 78.0, feedback = 'Try harder.';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (7, 4, 87.0, 'Impressive effort!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 87.0, feedback = 'Impressive effort!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (8, 4, 95.0, 'Outstanding work!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 95.0, feedback = 'Outstanding work!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (9, 5, 80.5, 'Good progress.') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 80.5, feedback = 'Good progress.'';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (10, 5, 91.0, 'Almost there!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 91.0, feedback = 'Almost there!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (11, 6, 86.0, 'On the right track.') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 86.0, feedback = 'On the right track.';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (12, 6, 77.5, 'Needs more practice.') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 77.5, feedback = 'Needs more practice.';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (13, 7, 93.0, 'Great effort!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 93.0, feedback = 'Great effort!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (14, 7, 84.0, 'Keep going!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 84.0, feedback = 'Keep going!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (15, 8, 89.5, 'Fantastic work!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 89.5, feedback = 'Fantastic work!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (16, 8, 83.5, 'Nice job!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 83.5, feedback = 'Nice job!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (17, 9, 94.0, 'Well executed!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 94.0, feedback = 'Well executed!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (18, 9, 79.0, 'Work harder!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 79.0, feedback = 'Work harder!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (19, 10, 82.0, 'Improvement needed.') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 82.0, feedback = 'Improvement needed.';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (20, 10, 90.0, 'Excellent progress!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 90.0, feedback = 'Excellent progress!';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (1, 1, 95.5, 'Great work on the assignment!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 95.5, feedback = 'Updated feedback';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, assignment_name, due_date) VALUES (1, 'Intro to SQL', '2022-10-15') ON CONFLICT (assignment_id) DO UPDATE SET assignment_name = 'Intro to SQL', due_date = '2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (2, 1, 85.7, 'Well done!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 85.7, feedback = 'Updated feedback';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, assignment_name, due_date) VALUES (2, 'Database Design', '2022-11-20') ON CONFLICT (assignment_id) DO UPDATE SET assignment_name = 'Database Design', due_date = '2022-11-20';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (3, 1, 75.2, 'Needs improvement.') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 75.2, feedback = 'Updated feedback';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, assignment_name, due_date) VALUES (3, 'Data Analysis', '2022-12-05') ON CONFLICT (assignment_id) DO UPDATE SET assignment_name = 'Data Analysis', due_date = '2022-12-05';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (4, 1, 90.0, 'Good job!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 90.0, feedback = 'Updated feedback';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, assignment_name, due_date) VALUES (4, 'Data Visualization', '2022-12-31') ON CONFLICT (assignment_id) DO UPDATE SET assignment_name = 'Data Visualization', due_date = '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (5, 1, 88.3, 'Keep it up!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 88.3, feedback = 'Updated feedback';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, assignment_name, due_date) VALUES (5, 'Machine Learning', '2023-01-15') ON CONFLICT (assignment_id) DO UPDATE SET assignment_name = 'Machine Learning', due_date = '2023-01-15';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (6, 1, 79.6, 'Almost there!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 79.6, feedback = 'Updated feedback';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, assignment_name, due_date) VALUES (6, 'Deep Learning', '2023-02-28') ON CONFLICT (assignment_id) DO UPDATE SET assignment_name = 'Deep Learning', due_date = '2023-02-28';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (7, 1, 92.8, 'Excellent work!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 92.8, feedback = 'Updated feedback';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, assignment_name, due_date) VALUES (7, 'Big Data', '2023-03-20') ON CONFLICT (assignment_id) DO UPDATE SET assignment_name = 'Big Data', due_date = '2023-03-20';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (8, 1, 86.4, 'Good effort!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 86.4, feedback = 'Updated feedback';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, assignment_name, due_date) VALUES (8, 'Cloud Computing', '2023-04-15') ON CONFLICT (assignment_id) DO UPDATE SET assignment_name = 'Cloud Computing', due_date = '2023-04-15';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (9, 1, 78.9, 'Room for improvement.') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 78.9, feedback = 'Updated feedback';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, assignment_name, due_date) VALUES (9, 'Cybersecurity', '2023-05-10') ON CONFLICT (assignment_id) DO UPDATE SET assignment_name = 'Cybersecurity', due_date = '2023-05-10';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO grades (student_id, assignment_id, grade, feedback) VALUES (10, 1, 89.1, 'Nice work!') ON CONFLICT (student_id, assignment_id) DO UPDATE SET grade = 89.1, feedback = 'Updated feedback';",
  "### TABLEDATA\n\nCREATE TABLE grades (\n  student_id INT PRIMARY KEY,\n  assignment_id INT,\n  grade FLOAT,\n  feedback TEXT\n);\n\nCREATE TABLE assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(255),\n  due_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO assignments (assignment_id, assignment_name, due_date) VALUES (10, 'Computer Networks', '2023-06-05') ON CONFLICT (assignment_id) DO UPDATE SET assignment_name = 'Computer Networks', due_date = '2023-06-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE student_name='John Doe', student_email='john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (2, 'Jane Smith', 'jane.smith@example.com') ON DUPLICATE KEY UPDATE student_name='Jane Smith', student_email='jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (3, 'Alice Brown', 'alice.brown@example.com') ON DUPLICATE KEY UPDATE student_name='Alice Brown', student_email='alice.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (4, 'Bob Johnson', 'bob.johnson@example.com') ON DUPLICATE KEY UPDATE student_name='Bob Johnson', student_email='bob.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (5, 'Emma Wilson', 'emma.wilson@example.com') ON DUPLICATE KEY UPDATE student_name='Emma Wilson', student_email='emma.wilson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (6, 'Michael Lee', 'michael.lee@example.com') ON DUPLICATE KEY UPDATE student_name='Michael Lee', student_email='michael.lee@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (7, 'Sophia Adams', 'sophia.adams@example.com') ON DUPLICATE KEY UPDATE student_name='Sophia Adams', student_email='sophia.adams@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (8, 'Oliver Martinez', 'oliver.martinez@example.com') ON DUPLICATE KEY UPDATE student_name='Oliver Martinez', student_email='oliver.martinez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (9, 'Lily Clark', 'lily.clark@example.com') ON DUPLICATE KEY UPDATE student_name='Lily Clark', student_email='lily.clark@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (10, 'Noah Hill', 'noah.hill@example.com') ON DUPLICATE KEY UPDATE student_name='Noah Hill', student_email='noah.hill@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (1, 'Essay 1', '2022-10-15') ON DUPLICATE KEY UPDATE assignment_name='Essay 1', due_date='2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (2, 'Project 1', '2022-11-05') ON DUPLICATE KEY UPDATE assignment_name='Project 1', due_date='2022-11-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (3, 'Quiz 1', '2022-09-30') ON DUPLICATE KEY UPDATE assignment_name='Quiz 1', due_date='2022-09-30';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (4, 'Presentation 1', '2022-10-25') ON DUPLICATE KEY UPDATE assignment_name='Presentation 1', due_date='2022-10-25';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (5, 'Midterm Exam', '2022-11-15') ON DUPLICATE KEY UPDATE assignment_name='Midterm Exam', due_date='2022-11-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (6, 'Final Exam', '2022-12-10') ON DUPLICATE KEY UPDATE assignment_name='Final Exam', due_date='2022-12-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (7, 'Homework 1', '2022-09-20') ON DUPLICATE KEY UPDATE assignment_name='Homework 1', due_date='2022-09-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (8, 'Project 2', '2022-11-25') ON DUPLICATE KEY UPDATE assignment_name='Project 2', due_date='2022-11-25';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (9, 'Essay 2', '2022-10-30') ON DUPLICATE KEY UPDATE assignment_name='Essay 2', due_date='2022-10-30';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (10, 'Quiz 2', '2022-10-10') ON DUPLICATE KEY UPDATE assignment_name='Quiz 2', due_date='2022-10-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE student_name='John Doe updated', student_email='john.doe.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (1, 'Math Homework', '2022-10-15') ON DUPLICATE KEY UPDATE assignment_name='Math Homework updated', due_date='2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, score, feedback) VALUES (1, 1, 1, 90.5, 'Good job!') ON DUPLICATE KEY UPDATE score=90.5, feedback='Good job!'",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (2, 'Jane Smith', 'jane.smith@example.com') ON DUPLICATE KEY UPDATE student_name='Jane Smith updated', student_email='jane.smith.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (2, 'Science Project', '2022-11-30') ON DUPLICATE KEY UPDATE assignment_name='Science Project updated', due_date='2022-11-30';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, score, feedback) VALUES (2, 2, 2, 85.0, 'Needs improvement') ON DUPLICATE KEY UPDATE score=85.0, feedback='Needs improvement'",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com') ON DUPLICATE KEY UPDATE student_name='Alice Johnson updated', student_email='alice.johnson.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (3, 'History Essay', '2022-12-20') ON DUPLICATE KEY UPDATE assignment_name='History Essay updated', due_date='2022-12-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, score, feedback) VALUES (3, 3, 3, 95.7, 'Excellent work!') ON DUPLICATE KEY UPDATE score=95.7, feedback='Excellent work!'",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (4, 'Bob Brown', 'bob.brown@example.com') ON DUPLICATE KEY UPDATE student_name='Bob Brown updated', student_email='bob.brown.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (4, 'Art Project', '2022-11-10') ON DUPLICATE KEY UPDATE assignment_name='Art Project updated', due_date='2022-11-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, score, feedback) VALUES (4, 4, 4, 75.2, 'Room for improvement') ON DUPLICATE KEY UPDATE score=75.2, feedback='Room for improvement'",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (5, 'Eva Wilson', 'eva.wilson@example.com') ON DUPLICATE KEY UPDATE student_name='Eva Wilson updated', student_email='eva.wilson.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (5, 'Physics Quiz', '2022-10-25') ON DUPLICATE KEY UPDATE assignment_name='Physics Quiz updated', due_date='2022-10-25';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, score, feedback) VALUES (5, 5, 5, 88.3, 'Almost there!') ON DUPLICATE KEY UPDATE score=88.3, feedback='Almost there!'",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (6, 'Olivia Martinez', 'olivia.martinez@example.com') ON DUPLICATE KEY UPDATE student_name='Olivia Martinez updated', student_email='olivia.martinez.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (6, 'English Essay', '2022-12-05') ON DUPLICATE KEY UPDATE assignment_name='English Essay updated', due_date='2022-12-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, score, feedback) VALUES (6, 6, 6, 92.1, 'Well done!') ON DUPLICATE KEY UPDATE score=92.1, feedback='Well done!'",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email) VALUES (7, 'David Lee', 'david.lee@example.com') ON DUPLICATE KEY UPDATE student_name='David Lee updated', student_email='david.lee.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, assignment_name, due_date) VALUES (7, 'Chemistry Lab', '2022-11-20') ON DUPLICATE KEY UPDATE assignment_name='Chemistry Lab updated', due_date='2022-11-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  student_email VARCHAR\n);\n\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR,\n  due_date DATE\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  score FLOAT,\n  feedback VARCHAR,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, score, feedback) VALUES (7, 7, 7, 81.6, 'Good effort!') ON DUPLICATE KEY UPDATE score=81.6, feedback='Good effort!'",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (1, 101, 'Assignment 1', 90.5, 'Good job') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (2, 102, 'Assignment 2', 85.0, 'Needs improvement') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (3, 103, 'Assignment 3', 95.5, 'Excellent work') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (4, 104, 'Assignment 4', 88.0, 'Satisfactory performance') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (5, 105, 'Assignment 5', 92.5, 'Well done') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (6, 101, 'Assignment 6', 86.0, 'Improvement needed') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (7, 102, 'Assignment 7', 91.5, 'Great job') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (8, 103, 'Assignment 8', 89.5, 'Nice work') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (9, 104, 'Assignment 9', 94.0, 'Outstanding performance') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (10, 105, 'Assignment 10', 87.5, 'Impressive work') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (11, 101, 'Assignment 11', 90.0, 'Very good') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (12, 102, 'Assignment 12', 84.5, 'Keep improving') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (13, 103, 'Assignment 13', 96.5, 'Exceptional work') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (14, 104, 'Assignment 14', 87.0, 'Meeting expectations') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (15, 105, 'Assignment 15', 91.0, 'Well executed') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (16, 101, 'Assignment 16', 85.5, 'Work on improving') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (17, 102, 'Assignment 17', 89.0, 'Impressive effort') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (18, 103, 'Assignment 18', 93.0, 'Excellent performance') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (19, 104, 'Assignment 19', 88.5, 'Good progress') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (20, 105, 'Assignment 20', 92.0, 'Excellent work') ON CONFLICT (assignment_id) DO UPDATE SET student_id = excluded.student_id, assignment_name = excluded.assignment_name, grade = excluded.grade, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (1, 101, 'Assignment 1', 90, 'Great job!') ON CONFLICT (assignment_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_name = EXCLUDED.assignment_name, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, email, class_id) VALUES (101, 'Alice', 'alice@example.com', 1) ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, email = EXCLUDED.email, class_id = EXCLUDED.class_id;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Classes (class_id, class_name, teacher_name) VALUES (1, 'Math', 'Mr. Smith') ON CONFLICT (class_id) DO UPDATE SET class_name = EXCLUDED.class_name, teacher_name = EXCLUDED.teacher_name;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade) VALUES (1, 101, 1, 90) ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_id = EXCLUDED.assignment_id, grade = EXCLUDED.grade;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (2, 102, 'Assignment 2', 85, 'Good work!') ON CONFLICT (assignment_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_name = EXCLUDED.assignment_name, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, email, class_id) VALUES (102, 'Bob', 'bob@example.com', 2) ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, email = EXCLUDED.email, class_id = EXCLUDED.class_id;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Classes (class_id, class_name, teacher_name) VALUES (2, 'Science', 'Mrs. Johnson') ON CONFLICT (class_id) DO UPDATE SET class_name = EXCLUDED.class_name, teacher_name = EXCLUDED.teacher_name;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade) VALUES (2, 102, 2, 85) ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_id = EXCLUDED.assignment_id, grade = EXCLUDED.grade;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (3, 103, 'Assignment 3', 92, 'Excellent work!') ON CONFLICT (assignment_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_name = EXCLUDED.assignment_name, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, email, class_id) VALUES (103, 'Chris', 'chris@example.com', 1) ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, email = EXCLUDED.email, class_id = EXCLUDED.class_id;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade) VALUES (3, 103, 3, 92) ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_id = EXCLUDED.assignment_id, grade = EXCLUDED.grade;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (4, 101, 'Assignment 4', 88, 'Nice work!') ON CONFLICT (assignment_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_name = EXCLUDED.assignment_name, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade) VALUES (4, 101, 4, 88) ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_id = EXCLUDED.assignment_id, grade = EXCLUDED.grade;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (5, 102, 'Assignment 5', 75, 'Keep it up!') ON CONFLICT (assignment_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_name = EXCLUDED.assignment_name, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade) VALUES (5, 102, 5, 75) ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_id = EXCLUDED.assignment_id, grade = EXCLUDED.grade;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (6, 103, 'Assignment 6', 80, 'Needs improvement') ON CONFLICT (assignment_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_name = EXCLUDED.assignment_name, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade) VALUES (6, 103, 6, 80) ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_id = EXCLUDED.assignment_id, grade = EXCLUDED.grade;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (7, 101, 'Assignment 7', 85, 'Good effort!') ON CONFLICT (assignment_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_name = EXCLUDED.assignment_name, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade) VALUES (7, 101, 7, 85) ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_id = EXCLUDED.assignment_id, grade = EXCLUDED.grade;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, student_id, assignment_name, grade, feedback) VALUES (8, 102, 'Assignment 8', 95, 'Outstanding work!') ON CONFLICT (assignment_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_name = EXCLUDED.assignment_name, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_name TEXT,\n  grade DECIMAL,\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  email TEXT,\n  class_id INT\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  class_name TEXT,\n  teacher_name TEXT\n);\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade) VALUES (8, 102, 8, 95) ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, assignment_id = EXCLUDED.assignment_id, grade = EXCLUDED.grade;",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (1, 101, 201, 'A', 'Great work!') ON DUPLICATE KEY UPDATE grade='A', feedback='Great work!';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (2, 102, 202, 'B', 'Good effort.') ON DUPLICATE KEY UPDATE grade='B', feedback='Good effort.';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (3, 103, 203, 'C', 'Could improve.') ON DUPLICATE KEY UPDATE grade='C', feedback='Could improve.';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (4, 104, 204, 'A', 'Excellent work!') ON DUPLICATE KEY UPDATE grade='A', feedback='Excellent work!';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (5, 105, 205, 'B', 'Nice job.') ON DUPLICATE KEY UPDATE grade='B', feedback='Nice job.';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (6, 106, 206, 'C', 'Keep it up.') ON DUPLICATE KEY UPDATE grade='C', feedback='Keep it up.';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (7, 107, 207, 'A', 'Well done!') ON DUPLICATE KEY UPDATE grade='A', feedback='Well done!';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (8, 108, 208, 'B', 'Good progress.') ON DUPLICATE KEY UPDATE grade='B', feedback='Good progress.';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (9, 109, 209, 'C', 'Needs improvement.') ON DUPLICATE KEY UPDATE grade='C', feedback='Needs improvement.';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (10, 110, 210, 'A', 'Fantastic work!') ON DUPLICATE KEY UPDATE grade='A', feedback='Fantastic work!';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (11, 111, 211, 'B', 'Impressive effort.') ON DUPLICATE KEY UPDATE grade='B', feedback='Impressive effort.';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (12, 112, 212, 'C', 'Average performance.') ON DUPLICATE KEY UPDATE grade='C', feedback='Average performance.';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (13, 113, 213, 'A', 'Outstanding work!') ON DUPLICATE KEY UPDATE grade='A', feedback='Outstanding work!';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (14, 114, 214, 'B', 'Good job.') ON DUPLICATE KEY UPDATE grade='B', feedback='Good job.';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (15, 115, 215, 'C', 'Could do better.') ON DUPLICATE KEY UPDATE grade='C', feedback='Could do better.';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (16, 116, 216, 'A', 'Impressive work!') ON DUPLICATE KEY UPDATE grade='A', feedback='Impressive work!';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (17, 117, 217, 'B', 'Well done.') ON DUPLICATE KEY UPDATE grade='B', feedback='Well done.';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (18, 118, 218, 'C', 'Room for improvement.') ON DUPLICATE KEY UPDATE grade='C', feedback='Room for improvement.';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (19, 119, 219, 'A', 'Excellent performance!') ON DUPLICATE KEY UPDATE grade='A', feedback='Excellent performance!';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (20, 120, 220, 'B', 'Great effort!') ON DUPLICATE KEY UPDATE grade='B', feedback='Great effort!';",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (1, 101, 201, 'A', 'Great job on the assignment!') ON DUPLICATE KEY UPDATE grade='A+', feedback='Excellent work!'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (2, 102, 202, 'B', 'Good effort, could use some improvement.') ON DUPLICATE KEY UPDATE grade='B-', feedback='Work on the accuracy of the answers.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (3, 103, 203, 'C', 'Incomplete submission.') ON DUPLICATE KEY UPDATE grade='C-', feedback='Complete the remaining questions.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (4, 104, 204, 'A', 'Well done!') ON DUPLICATE KEY UPDATE grade='A+', feedback='Impressive work!'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (5, 105, 205, 'B', 'Needs more details.') ON DUPLICATE KEY UPDATE grade='B-', feedback='Elaborate on the explanations.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (6, 101, 206, 'D', 'Revisit the content.') ON DUPLICATE KEY UPDATE grade='C', feedback='Clarify the concepts.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (7, 102, 207, 'A', 'Excellent work!') ON DUPLICATE KEY UPDATE grade='A+', feedback='Outstanding performance!'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (8, 103, 208, 'C', 'Needs improvement in organization.') ON DUPLICATE KEY UPDATE grade='C-', feedback='Organize the content better.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (9, 104, 209, 'B', 'Good effort, can be improved.') ON DUPLICATE KEY UPDATE grade='B-', feedback='Improve the quality of answers.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (10, 105, 210, 'A', 'Nicely done!') ON DUPLICATE KEY UPDATE grade='A+', feedback='Very well explained.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (11, 101, 211, 'B', 'Decent work, but needs more analysis.') ON DUPLICATE KEY UPDATE grade='B-', feedback='Add more depth to the analysis.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (12, 102, 212, 'C', 'Fair effort, could be more focused.') ON DUPLICATE KEY UPDATE grade='C-', feedback='Focus on the main points.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (13, 103, 213, 'A', 'Impressive work!') ON DUPLICATE KEY UPDATE grade='A+', feedback='Exceptional performance!'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (14, 104, 214, 'D', 'Needs more practice.') ON DUPLICATE KEY UPDATE grade='C', feedback='Practice more for better results.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (15, 105, 215, 'B', 'Good attempt, can be enhanced.') ON DUPLICATE KEY UPDATE grade='B-', feedback='Enhance the clarity of explanations.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (16, 101, 216, 'A', 'Well explained!') ON DUPLICATE KEY UPDATE grade='A+', feedback='Thorough explanations.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (17, 102, 217, 'C', 'Needs more detail.') ON DUPLICATE KEY UPDATE grade='C-', feedback='Provide more detailed responses.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (18, 103, 218, 'B', 'Improvement needed in analysis.') ON DUPLICATE KEY UPDATE grade='B-', feedback='Work on analyzing the content thoroughly.'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (19, 104, 219, 'A', 'Great job on the assignment!') ON DUPLICATE KEY UPDATE grade='A+', feedback='Excellent work!'",
  "### TABLEDATA\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  assignment_id INT,\n  grade VARCHAR(10),\n  feedback TEXT\n);\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50)\n);\n\nCREATE TABLE Assignments (\n  assignment_id INT PRIMARY KEY,\n  assignment_name VARCHAR(100),\n  max_score INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(100),\n  course_code VARCHAR(10)\n);\n\nCREATE TABLE Classes (\n  class_id INT PRIMARY KEY,\n  course_id INT,\n  professor_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, assignment_id, grade, feedback) VALUES (20, 105, 220, 'D', 'Incomplete submission.') ON DUPLICATE KEY UPDATE grade='C', feedback='Complete all the questions.']"
]