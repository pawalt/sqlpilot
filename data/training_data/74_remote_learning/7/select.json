[
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE instructor_id = 1",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, start_time FROM office_hours WHERE instructor_id = 2",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE student_id = 3",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_id, start_time, end_time FROM office_hours WHERE student_id = 4",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT instructor_id FROM office_hours",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE start_time > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, end_time FROM office_hours WHERE start_time < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE start_time BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM office_hours",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(end_time, start_time)) AS duration FROM office_hours",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours ORDER BY start_time ASC",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(end_time) FROM office_hours",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(end_time, start_time)) FROM office_hours WHERE instructor_id = 1",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS num_sessions FROM office_hours GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT student_id) FROM office_hours",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM office_hours WHERE start_time < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE start_time < '2022-01-01' ORDER BY start_time DESC",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, MAX(end_time) FROM office_hours GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE student_id = 5 AND start_time > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE start_time > '2022-01-01' AND end_time < '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_id, student_id, start_time FROM office_hours WHERE instructor_id = 101",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM office_hours WHERE student_id = 201",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE instructor_id = 102 AND start_time >= '2022-02-01'",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_id, COUNT(*) AS meetings_count FROM office_hours GROUP BY instructor_id",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE student_id = 202 ORDER BY start_time DESC",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT instructor_id FROM office_hours",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(end_time, start_time)) AS avg_duration FROM office_hours",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE instructor_id IN (101, 102, 103)",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(DATEDIFF(end_time, start_time)) AS max_duration FROM office_hours",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_id, COUNT(*) AS meetings_count FROM office_hours WHERE instructor_id = 103",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE student_id = 203 AND start_time BETWEEN '2022-03-01' AND '2022-03-31'",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT instructor_id, COUNT(*) AS meetings_count FROM office_hours WHERE student_id = 201",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(DATEDIFF(end_time, start_time)) AS min_duration FROM office_hours",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE instructor_id = 102 AND end_time > '2022-04-01'",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, MAX(DATEDIFF(end_time, start_time)) AS max_duration FROM office_hours GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE instructor_id = 101 AND student_id = 201",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT SUM(DATEDIFF(end_time, start_time)) AS total_duration FROM office_hours",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT student_id) AS unique_students FROM office_hours",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n  instructor_id INT,\n  student_id INT,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, AVG(DATEDIFF(end_time, start_time)) AS avg_duration FROM office_hours GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM instructor_availability WHERE instructor_id = '1234';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM instructor_availability WHERE day_of_week = 'Monday';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM instructor_availability WHERE start_time BETWEEN '08:00:00' AND '12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM instructor_availability WHERE end_time < '17:00:00';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM student_appointments WHERE student_id = '5678';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM student_appointments WHERE instructor_id = '1234';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM student_appointments WHERE appointment_date = '2022-10-20';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM student_appointments WHERE appointment_time > '10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT instructor_id, day_of_week FROM instructor_availability;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT student_id, appointment_date FROM student_appointments;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM instructor_availability;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM student_appointments;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT MAX(start_time) FROM instructor_availability;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT MIN(end_time) FROM instructor_availability;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT DISTINCT day_of_week FROM instructor_availability;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT DISTINCT student_id FROM student_appointments;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM instructor_availability ORDER BY day_of_week ASC;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM instructor_availability ORDER BY start_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM student_appointments ORDER BY appointment_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM student_appointments ORDER BY appointment_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM instructor_availability WHERE instructor_id = '123456789' AND day_of_week = 'Monday';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM instructor_availability WHERE start_time BETWEEN '08:00:00' AND '12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM instructor_availability WHERE end_time < '15:00:00';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT instructor_id, COUNT(*) AS num_availability FROM instructor_availability GROUP BY instructor_id HAVING num_availability > 3;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT a.appointment_id, a.appointment_date, s.student_id, s.instructor_id FROM student_appointments a INNER JOIN student_appointments s ON a.student_id = s.student_id;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT a.appointment_id, a.appointment_date, s.student_id, s.instructor_id FROM student_appointments a LEFT JOIN student_appointments s ON a.student_id = s.student_id;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT a.appointment_id, a.appointment_date, s.student_id, s.instructor_id FROM student_appointments a RIGHT JOIN student_appointments s ON a.student_id = s.student_id;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM student_appointments ORDER BY appointment_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM student_appointments WHERE student_id = '987654321' AND appointment_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM student_appointments WHERE instructor_id IN ('123456789', '987654321');",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS num_appointments FROM student_appointments WHERE student_id = '123456789' GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT a.appointment_id, a.appointment_date, a.appointment_time, i.day_of_week FROM student_appointments a JOIN instructor_availability i ON a.instructor_id = i.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT a.appointment_id, a.appointment_date, s.student_id, s.instructor_id FROM student_appointments a JOIN student_appointments s ON a.student_id = s.student_id WHERE a.appointment_date = '2022-07-12';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT i.instructor_id, i.day_of_week, AVG(TIMESTAMPDIFF(MINUTE, i.start_time, i.end_time)) AS avg_availability_minutes FROM instructor_availability i GROUP BY i.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT a.appointment_id, a.student_id, a.instructor_id, i.day_of_week FROM student_appointments a JOIN instructor_availability i ON a.instructor_id = i.instructor_id WHERE i.day_of_week = 'Wednesday';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT a.appointment_id, a.appointment_date, a.appointment_time, i.day_of_week FROM student_appointments a JOIN instructor_availability i ON a.instructor_id = i.instructor_id WHERE i.day_of_week = 'Wednesday' AND i.start_time = '09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT a.appointment_id, s.student_id, s.instructor_id, TIMESTAMPDIFF(MINUTE, a.appointment_time, i.end_time) AS time_left FROM student_appointments a JOIN instructor_availability i ON a.instructor_id = i.instructor_id JOIN student_appointments s ON a.student_id = s.student_id;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT a.appointment_id, a.appointment_date, s.student_id, s.instructor_id FROM student_appointments a CROSS JOIN student_appointments s WHERE a.appointment_date = '2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS num_appointments FROM student_appointments GROUP BY student_id HAVING num_appointments > 5;",
  "### TABLEDATA\n\nCREATE TABLE instructor_availability (\n    instructor_id UUID,\n    day_of_week VARCHAR(10),\n    start_time TIME,\n    end_time TIME\n);\n\n\nCREATE TABLE student_appointments (\n    appointment_id UUID,\n    student_id UUID,\n    instructor_id UUID,\n    appointment_date DATE,\n    appointment_time TIME\n);\n\n### STATEMENT\n\nSELECT s.student_id, COUNT(*) AS num_appointments FROM student_appointments s JOIN instructor_availability i ON s.instructor_id = i.instructor_id WHERE i.day_of_week = 'Monday' GROUP BY s.student_id HAVING num_appointments > 2;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, instructor_id, student_id, date FROM office_hours;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM students;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE instructor_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE student_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM instructors WHERE email = 'john@example.com';",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE email = 'jane@example.com';",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, instructor_id, student_id, date FROM office_hours WHERE instructor_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, instructor_id, student_id, date FROM office_hours WHERE student_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, name FROM instructors WHERE email = 'john@example.com';",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, name FROM students WHERE email = 'jane@example.com';",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM instructors ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM students ORDER BY email DESC;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, instructor_id, student_id, date FROM office_hours ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM instructors ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM students ORDER BY email DESC;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE instructor_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE start_time >= '09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE end_time <= '17:00:00';",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT instructors.name, office_hours.date FROM instructors JOIN office_hours ON instructors.id = office_hours.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT students.name, office_hours.date FROM students JOIN office_hours ON students.id = office_hours.student_id;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE start_time < end_time;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE start_time > end_time;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE start_time = end_time;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE end_time - start_time = INTERVAL '1 hour';",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE DATE_ADD(date, INTERVAL 1 DAY);",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE DATE_SUB(date, INTERVAL 1 DAY);",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE DATE_FORMAT(date, '%Y-%m-%d');",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE DATE(date) = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE MONTH(date) = 1;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE YEAR(date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE TIME_TO_SEC(TIMEDIFF(end_time, start_time)) >= 3600;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE TIME_TO_SEC(TIMEDIFF(end_time, start_time)) < 3600;",
  "### TABLEDATA\n\nCREATE TABLE office_hours (\n    id SERIAL PRIMARY KEY,\n    instructor_id INT NOT NULL,\n    student_id INT NOT NULL,\n    date DATE NOT NULL,\n    start_time TIME NOT NULL,\n    end_time TIME NOT NULL\n);\n\nCREATE TABLE instructors (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE TIME_TO_SEC(TIMEDIFF(end_time, start_time)) = 3600;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT * FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, email FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, name FROM Instructors WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, year FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, email FROM Students WHERE year = 2022;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT * FROM OfficeHours;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT instructor_id, day, start_time, end_time FROM OfficeHours;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT * FROM Appointments;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT student_id, instructor_id, appointment_date FROM Appointments;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, student_id FROM Appointments WHERE instructor_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, name, email FROM Instructors WHERE name LIKE '%A%';",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, name, year FROM Students WHERE year > 2020;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT * FROM OfficeHours WHERE instructor_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, student_id, appointment_time FROM Appointments WHERE student_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, instructor_id, start_time, end_time FROM OfficeHours WHERE day = 'Monday';",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT * FROM Instructors JOIN OfficeHours ON Instructors.id = OfficeHours.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT * FROM Students JOIN Appointments ON Students.id = Appointments.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT * FROM Instructors JOIN Appointments ON Instructors.id = Appointments.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT * FROM Students JOIN OfficeHours ON Students.year = OfficeHours.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT * FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, name, email FROM Students WHERE year > 2;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, office_location FROM Instructors WHERE id IN (SELECT instructor_id FROM OfficeHours WHERE day = 'Monday');",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, email FROM Students WHERE id IN (SELECT student_id FROM Appointments WHERE appointment_date = '2023-10-15' AND appointment_time BETWEEN '09:00:00' AND '12:00:00');",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, name, email FROM Instructors WHERE id NOT IN (SELECT instructor_id FROM OfficeHours);",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, email, year FROM Students WHERE year = (SELECT MAX(year) FROM Students);",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, office_location FROM Instructors WHERE id = (SELECT instructor_id FROM OfficeHours WHERE day = 'Tuesday' AND start_time > '10:00:00');",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT * FROM OfficeHours WHERE start_time < (SELECT start_time FROM OfficeHours WHERE day = 'Friday');",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, email FROM Instructors WHERE id = (SELECT instructor_id FROM Appointments WHERE student_id = (SELECT id FROM Students WHERE name = 'Alice'));",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, email, year FROM Students WHERE id = (SELECT student_id FROM Appointments WHERE instructor_id = (SELECT id FROM Instructors WHERE name = 'John'));",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, email FROM Instructors WHERE id IN (SELECT instructor_id FROM OfficeHours WHERE start_time < '12:00:00');",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, name, email FROM Students WHERE year BETWEEN 1 AND 3;",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, name, email FROM Instructors WHERE id NOT IN (SELECT instructor_id FROM Appointments WHERE appointment_date = '2023-11-20');",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, name, email FROM Instructors WHERE id = (SELECT instructor_id FROM OfficeHours WHERE day = 'Wednesday' AND start_time > '09:00:00');",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, email, year FROM Students WHERE year < (SELECT year FROM Students WHERE name = 'Bob');",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, email FROM Instructors WHERE id = (SELECT instructor_id FROM Appointments WHERE appointment_time >= '14:00:00');",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, name, email FROM Students WHERE id = (SELECT student_id FROM Appointments WHERE appointment_date BETWEEN '2023-10-01' AND '2023-11-30');",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, email FROM Instructors WHERE id IN (SELECT instructor_id FROM OfficeHours WHERE day = 'Thursday' AND end_time < '17:00:00');",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT id, name, email FROM Instructors WHERE id = (SELECT instructor_id FROM Appointments WHERE student_id = (SELECT id FROM Students WHERE name = 'Charlie'));",
  "### TABLEDATA\n\nCREATE TABLE Instructors (id INT, name VARCHAR(50), email VARCHAR(50), office_location VARCHAR(50));\n\nCREATE TABLE Students (id INT, name VARCHAR(50), email VARCHAR(50), year INT);\n\nCREATE TABLE OfficeHours (id INT, instructor_id INT, day VARCHAR(20), start_time TIME, end_time TIME);\n\nCREATE TABLE Appointments (id INT, student_id INT, instructor_id INT, appointment_date DATE, appointment_time TIME);\n\n### STATEMENT\n\nSELECT name, email FROM Instructors WHERE id IN (SELECT instructor_id FROM OfficeHours WHERE end_time > '16:00:00' AND end_time < '18:00:00');",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT * FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT instructor_id, instructor_name FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT office_id, instructor_id, day_of_week, start_time, end_time FROM office_hours;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT * FROM student_appointments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT appointment_id, student_id, office_id, appointment_time FROM student_appointments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT * FROM instructor_availability;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT availability_id, instructor_id, day_of_week, available_time_start, available_time_end FROM instructor_availability;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT instructor_name FROM instructors WHERE instructor_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT * FROM student_appointments WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours WHERE day_of_week = 'Monday';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name, appointment_time FROM students JOIN student_appointments ON students.student_id = student_appointments.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT instructor_name, day_of_week FROM instructors JOIN office_hours ON instructors.instructor_id = office_hours.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name, appointment_time, instructor_name FROM students JOIN student_appointments ON students.student_id = student_appointments.student_id JOIN office_hours ON student_appointments.office_id = office_hours.office_id JOIN instructors ON office_hours.instructor_id = instructors.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name, appointment_time, instructor_name, availability_id FROM students JOIN student_appointments ON students.student_id = student_appointments.student_id JOIN office_hours ON student_appointments.office_id = office_hours.office_id JOIN instructors ON office_hours.instructor_id = instructors.instructor_id JOIN instructor_availability ON instructors.instructor_id = instructor_availability.instructor_id AND office_hours.day_of_week = instructor_availability.day_of_week;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT * FROM students JOIN student_appointments ON students.student_id = student_appointments.student_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name FROM students JOIN student_appointments ON students.student_id = student_appointments.student_id JOIN instructors ON student_appointments.office_id = instructors.instructor_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name, day_of_week, start_time, end_time FROM students JOIN student_appointments ON students.student_id = student_appointments.student_id JOIN office_hours ON student_appointments.office_id = office_hours.office_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name, appointment_time FROM students JOIN student_appointments ON students.student_id = student_appointments.student_id JOIN instructors ON student_appointments.office_id = instructors.instructor_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT * FROM office_hours JOIN instructor_availability ON office_hours.instructor_id = instructor_availability.instructor_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT instructor_name, day_of_week, appointment_time FROM instructors JOIN student_appointments ON instructors.instructor_id = student_appointments.office_id JOIN office_hours ON student_appointments.office_id = office_hours.office_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id = 1",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name FROM students WHERE student_id = 1",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name, day_of_week, start_time, end_time FROM students JOIN student_appointments ON students.student_id = student_appointments.student_id JOIN office_hours ON student_appointments.office_id = office_hours.office_id WHERE day_of_week = 'Monday'",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT instructor_name, day_of_week, available_time_start, available_time_end FROM instructors JOIN instructor_availability ON instructors.instructor_id = instructor_availability.instructor_id WHERE day_of_week = 'Tuesday'",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name, appointment_time FROM students JOIN student_appointments ON students.student_id = student_appointments.student_id JOIN instructors ON student_appointments.office_id = instructors.instructor_id WHERE student_id = 5",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name, appointment_time FROM students JOIN student_appointments ON students.student_id = student_appointments.student_id JOIN instructors ON student_appointments.office_id = instructors.instructor_id WHERE appointment_time BETWEEN '2022-01-01 08:00:00' AND '2022-01-01 12:00:00'",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name, appointment_time FROM students JOIN student_appointments ON students.student_id = student_appointments.student_id WHERE student_name LIKE '%John%'",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT instructor_name, day_of_week, appointment_time FROM instructors JOIN student_appointments ON instructors.instructor_id = student_appointments.office_id JOIN office_hours ON student_appointments.office_id = office_hours.office_id WHERE instructor_name = 'Jane Doe'",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE instructors (\n  instructor_id INT PRIMARY KEY,\n  instructor_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE office_hours (\n  office_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  start_time TIME,\n  end_time TIME\n);\n\nCREATE TABLE student_appointments (\n  appointment_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  office_id INT REFERENCES office_hours(office_id),\n  appointment_time TIMESTAMP\n);\n\nCREATE TABLE instructor_availability (\n  availability_id INT PRIMARY KEY,\n  instructor_id INT REFERENCES instructors(instructor_id),\n  day_of_week VARCHAR(10) NOT NULL,\n  available_time_start TIME,\n  available_time_end TIME\n);\n\n### STATEMENT\n\nSELECT student_name, instructor_name, appointment_time FROM students JOIN student_appointments ON students.student_id = student_appointments.student_id JOIN instructors ON student_appointments.office_id = instructors.instructor_id WHERE appointment_time < '2022-01-01 10:00:00'"
]