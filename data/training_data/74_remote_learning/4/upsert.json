[
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (1, 'John Doe', 101, 'Mathematics', 80.5)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (2, 'Alice Smith', 102, 'Science', 75.3)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (3, 'Bob Johnson', 103, 'History', 90.2)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (4, 'Emily Davis', 104, 'English', 85.0)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (5, 'Michael Brown', 105, 'Physics', 70.8)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (6, 'Sophia Wilson', 106, 'Chemistry', 88.5)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (7, 'Olivia Martinez', 107, 'Geography', 77.6)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (8, 'Logan Thomas', 108, 'Computer Science', 82.4)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (9, 'Ethan Jones', 109, 'Biology', 95.1)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (10, 'Ava Jackson', 110, 'Economics', 78.9)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (11, 'William Taylor', 111, 'Psychology', 86.3)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (12, 'Isabella White', 112, 'Sociology', 73.7)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (13, 'James Moore', 113, 'Anthropology', 90.6)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (14, 'Charlotte Walker', 114, 'Philosophy', 79.2)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (15, 'Benjamin Harris', 115, 'Literature', 84.8)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (16, 'Harper Nelson', 116, 'Art', 72.4)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (17, 'Mia King', 117, 'Music', 87.1)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (18, 'Elijah Brown', 118, 'Drama', 75.9)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (19, 'Elizabeth Young', 119, 'Dance', 91.4)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (20, 'Henry Walker', 120, 'Film', 76.5)",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (1, 'Alice', 101, 'Mathematics', 80.5) ON DUPLICATE KEY UPDATE progress_percentage = 80.5;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (2, 'Bob', 102, 'History', 75.2) ON DUPLICATE KEY UPDATE progress_percentage = 75.2;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (3, 'Charlie', 103, 'Science', 85.3) ON DUPLICATE KEY UPDATE progress_percentage = 85.3;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (4, 'David', 104, 'English', 70.7) ON DUPLICATE KEY UPDATE progress_percentage = 70.7;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (5, 'Eve', 105, 'Geography', 90.2) ON DUPLICATE KEY UPDATE progress_percentage = 90.2;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (6, 'Frank', 106, 'Computer Science', 78.9) ON DUPLICATE KEY UPDATE progress_percentage = 78.9;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (7, 'Grace', 107, 'Art', 82.4) ON DUPLICATE KEY UPDATE progress_percentage = 82.4;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (8, 'Henry', 108, 'Music', 65.8) ON DUPLICATE KEY UPDATE progress_percentage = 65.8;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (9, 'Ivy', 109, 'Physical Education', 87.1) ON DUPLICATE KEY UPDATE progress_percentage = 87.1;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (10, 'Jack', 110, 'Drama', 73.6) ON DUPLICATE KEY UPDATE progress_percentage = 73.6;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (11, 'Katherine', 111, 'Physics', 79.3) ON DUPLICATE KEY UPDATE progress_percentage = 79.3;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (12, 'Liam', 112, 'Chemistry', 68.4) ON DUPLICATE KEY UPDATE progress_percentage = 68.4;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (13, 'Mia', 113, 'Sociology', 83.7) ON DUPLICATE KEY UPDATE progress_percentage = 83.7;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (14, 'Noah', 114, 'Economics', 76.1) ON DUPLICATE KEY UPDATE progress_percentage = 76.1;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (15, 'Olivia', 115, 'Engineering', 88.5) ON DUPLICATE KEY UPDATE progress_percentage = 88.5;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (16, 'Peter', 116, 'Literature', 71.9) ON DUPLICATE KEY UPDATE progress_percentage = 71.9;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (17, 'Quinn', 117, 'Film Studies', 84.2) ON DUPLICATE KEY UPDATE progress_percentage = 84.2;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (18, 'Rose', 118, 'Psychology', 67.5) ON DUPLICATE KEY UPDATE progress_percentage = 67.5;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (19, 'Sam', 119, 'Business Administration', 77.8) ON DUPLICATE KEY UPDATE progress_percentage = 77.8;",
  "### TABLEDATA\n\nCREATE TABLE StudentProgress (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    course_name VARCHAR(50) NOT NULL,\n    progress_percentage FLOAT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO StudentProgress (student_id, student_name, course_id, course_name, progress_percentage) VALUES (20, 'Taylor', 120, 'Communication', 80.3) ON DUPLICATE KEY UPDATE progress_percentage = 80.3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (1, 'Alice', 18, 'A') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (2, 'Bob', 20, 'B') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (3, 'Charlie', 22, 'C') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (4, 'David', 19, 'A') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (5, 'Eve', 21, 'B') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (6, 'Frank', 23, 'C') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (7, 'Grace', 20, 'A') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (8, 'Hank', 19, 'B') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (9, 'Ivy', 22, 'C') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (10, 'Jack', 21, 'A') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (11, 'Kate', 18, 'B') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (12, 'Liam', 20, 'C') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (13, 'Mia', 22, 'A') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (14, 'Noah', 19, 'B') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (15, 'Olivia', 21, 'C') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (16, 'Peter', 23, 'A') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (17, 'Quinn', 20, 'B') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (18, 'Rose', 22, 'C') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (19, 'Sam', 21, 'A') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (20, 'Tom', 18, 'B') ON CONFLICT (student_id) DO UPDATE SET name = excluded.name, age = excluded.age, grade = excluded.grade;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (1, 'Alice', 18, 'A') ON DUPLICATE KEY UPDATE name = 'Alice', age = 18, grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (2, 'Bob', 20, 'B') ON DUPLICATE KEY UPDATE name = 'Bob', age = 20, grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (3, 'Charlie', 19, 'C') ON DUPLICATE KEY UPDATE name = 'Charlie', age = 19, grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (4, 'David', 21, 'B') ON DUPLICATE KEY UPDATE name = 'David', age = 21, grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (5, 'Eve', 22, 'A') ON DUPLICATE KEY UPDATE name = 'Eve', age = 22, grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (6, 'Frank', 20, 'C') ON DUPLICATE KEY UPDATE name = 'Frank', age = 20, grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (7, 'Grace', 19, 'B') ON DUPLICATE KEY UPDATE name = 'Grace', age = 19, grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (8, 'Henry', 18, 'A') ON DUPLICATE KEY UPDATE name = 'Henry', age = 18, grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (9, 'Ivy', 20, 'C') ON DUPLICATE KEY UPDATE name = 'Ivy', age = 20, grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (10, 'Jack', 21, 'B') ON DUPLICATE KEY UPDATE name = 'Jack', age = 21, grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (11, 'Kevin', 19, 'A') ON DUPLICATE KEY UPDATE name = 'Kevin', age = 19, grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (12, 'Linda', 22, 'B') ON DUPLICATE KEY UPDATE name = 'Linda', age = 22, grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (13, 'Mike', 18, 'C') ON DUPLICATE KEY UPDATE name = 'Mike', age = 18, grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (14, 'Nancy', 23, 'A') ON DUPLICATE KEY UPDATE name = 'Nancy', age = 23, grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (15, 'Olivia', 20, 'B') ON DUPLICATE KEY UPDATE name = 'Olivia', age = 20, grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (16, 'Peter', 21, 'C') ON DUPLICATE KEY UPDATE name = 'Peter', age = 21, grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (17, 'Quinn', 19, 'A') ON DUPLICATE KEY UPDATE name = 'Quinn', age = 19, grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (18, 'Rachel', 24, 'B') ON DUPLICATE KEY UPDATE name = 'Rachel', age = 24, grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (19, 'Sam', 18, 'C') ON DUPLICATE KEY UPDATE name = 'Sam', age = 18, grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n);\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  subject VARCHAR(50),\n  score INT,\n  student_id INT,\n  FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (20, 'Tom', 22, 'A') ON DUPLICATE KEY UPDATE name = 'Tom', age = 22, grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (1, 'Alice', 101, '2022-01-10') ON DUPLICATE KEY UPDATE student_name='Alice';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (101, 'Mathematics', 'Professor Smith', 3) ON DUPLICATE KEY UPDATE credits=3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (1, 1, 101, 'A') ON DUPLICATE KEY UPDATE grade='A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (2, 'Bob', 102, '2022-01-15') ON DUPLICATE KEY UPDATE student_name='Bob';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (102, 'Physics', 'Professor Brown', 4) ON DUPLICATE KEY UPDATE credits=4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (2, 2, 102, 'B+') ON DUPLICATE KEY UPDATE grade='B+';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (3, 'Charlie', 103, '2022-01-20') ON DUPLICATE KEY UPDATE student_name='Charlie';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (103, 'History', 'Professor Johnson', 3) ON DUPLICATE KEY UPDATE credits=3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (3, 3, 103, 'A-') ON DUPLICATE KEY UPDATE grade='A-';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (4, 'David', 104, '2022-01-25') ON DUPLICATE KEY UPDATE student_name='David';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (104, 'Chemistry', 'Professor Lee', 4) ON DUPLICATE KEY UPDATE credits=4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (4, 4, 104, 'C') ON DUPLICATE KEY UPDATE grade='C';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (5, 'Eve', 105, '2022-01-30') ON DUPLICATE KEY UPDATE student_name='Eve';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (105, 'English', 'Professor Williams', 3) ON DUPLICATE KEY UPDATE credits=3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (5, 5, 105, 'B') ON DUPLICATE KEY UPDATE grade='B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (6, 'Frank', 106, '2022-02-05') ON DUPLICATE KEY UPDATE student_name='Frank';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (106, 'Biology', 'Professor Garcia', 4) ON DUPLICATE KEY UPDATE credits=4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (6, 6, 106, 'A+') ON DUPLICATE KEY UPDATE grade='A+';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (7, 'Grace', 107, '2022-02-10') ON DUPLICATE KEY UPDATE student_name='Grace';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (107, 'Computer Science', 'Professor Martinez', 3) ON DUPLICATE KEY UPDATE credits=3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (7, 7, 107, 'C+') ON DUPLICATE KEY UPDATE grade='C+';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (1, 'Alice', 101, '2022-01-10') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice', class_id = 101, enrollment_date = '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (101, 'Mathematics', 'Prof. Smith', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics', instructor_name = 'Prof. Smith', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (1, 1, 101, 'A') ON CONFLICT (student_id, course_id) DO UPDATE SET grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (2, 'Bob', 102, '2022-03-15') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob', class_id = 102, enrollment_date = '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (102, 'History', 'Prof. Johnson', 3) ON CONFLICT (course_id) DO UPDATE SET course_name = 'History', instructor_name = 'Prof. Johnson', credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (2, 2, 102, 'B') ON CONFLICT (student_id, course_id) DO UPDATE SET grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (3, 'Charlie', 103, '2022-02-20') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Charlie', class_id = 103, enrollment_date = '2022-02-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (103, 'Science', 'Prof. Garcia', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Science', instructor_name = 'Prof. Garcia', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (3, 3, 103, 'A') ON CONFLICT (student_id, course_id) DO UPDATE SET grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (4, 'David', 104, '2022-01-05') ON CONFLICT (student_id) DO UPDATE SET student_name = 'David', class_id = 104, enrollment_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (104, 'English', 'Prof. Adams', 3) ON CONFLICT (course_id) DO UPDATE SET course_name = 'English', instructor_name = 'Prof. Adams', credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (4, 4, 104, 'B') ON CONFLICT (student_id, course_id) DO UPDATE SET grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (5, 'Ella', 105, '2022-04-25') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Ella', class_id = 105, enrollment_date = '2022-04-25';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (105, 'Physics', 'Prof. Martinez', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Physics', instructor_name = 'Prof. Martinez', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (5, 5, 105, 'A') ON CONFLICT (student_id, course_id) DO UPDATE SET grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (6, 'Fiona', 106, '2022-03-10') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Fiona', class_id = 106, enrollment_date = '2022-03-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (106, 'Chemistry', 'Prof. Lopez', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Chemistry', instructor_name = 'Prof. Lopez', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (6, 6, 106, 'A') ON CONFLICT (student_id, course_id) DO UPDATE SET grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, class_id, enrollment_date) VALUES (7, 'George', 107, '2022-02-15') ON CONFLICT (student_id) DO UPDATE SET student_name = 'George', class_id = 107, enrollment_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor_name, credits) VALUES (107, 'Biology', 'Prof. Wilson', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Biology', instructor_name = 'Prof. Wilson', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR,\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR,\n    instructor_name VARCHAR,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (7, 7, 107, 'B') ON CONFLICT (student_id, course_id) DO UPDATE SET grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_grade, birthdate) VALUES (1, 'Alice', 10, '2005-05-15') ON DUPLICATE KEY UPDATE student_name = 'Alice', student_grade = 10, birthdate = '2005-05-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_credit) VALUES (101, 'Mathematics', 3) ON DUPLICATE KEY UPDATE course_name = 'Mathematics', course_credit = 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_courses (student_id, course_id, enrollment_date, grade) VALUES (1, 101, '2020-09-01', 95) ON DUPLICATE KEY UPDATE enrollment_date = '2020-09-01', grade = 95;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, exam_score, exam_subject) VALUES (1, '2021-06-15', 85, 'Mathematics') ON DUPLICATE KEY UPDATE exam_date = '2021-06-15', exam_score = 85;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_grade, birthdate) VALUES (2, 'Bob', 9, '2006-02-20') ON DUPLICATE KEY UPDATE student_name = 'Bob', student_grade = 9, birthdate = '2006-02-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_credit) VALUES (102, 'Physics', 4) ON DUPLICATE KEY UPDATE course_name = 'Physics', course_credit = 4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_courses (student_id, course_id, enrollment_date, grade) VALUES (2, 102, '2020-09-05', 88) ON DUPLICATE KEY UPDATE enrollment_date = '2020-09-05', grade = 88;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, exam_score, exam_subject) VALUES (2, '2021-06-20', 90, 'Physics') ON DUPLICATE KEY UPDATE exam_date = '2021-06-20', exam_score = 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_grade, birthdate) VALUES (3, 'Charlie', 11, '2004-10-10') ON DUPLICATE KEY UPDATE student_name = 'Charlie', student_grade = 11, birthdate = '2004-10-10';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_credit) VALUES (103, 'Chemistry', 3) ON DUPLICATE KEY UPDATE course_name = 'Chemistry', course_credit = 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_courses (student_id, course_id, enrollment_date, grade) VALUES (3, 103, '2020-09-10', 92) ON DUPLICATE KEY UPDATE enrollment_date = '2020-09-10', grade = 92;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, exam_score, exam_subject) VALUES (3, '2021-06-25', 88, 'Chemistry') ON DUPLICATE KEY UPDATE exam_date = '2021-06-25', exam_score = 88;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_grade, birthdate) VALUES (4, 'David', 9, '2006-04-02') ON DUPLICATE KEY UPDATE student_name = 'David', student_grade = 9, birthdate = '2006-04-02';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_credit) VALUES (104, 'Biology', 3) ON DUPLICATE KEY UPDATE course_name = 'Biology', course_credit = 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_courses (student_id, course_id, enrollment_date, grade) VALUES (4, 104, '2020-09-15', 85) ON DUPLICATE KEY UPDATE enrollment_date = '2020-09-15', grade = 85;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, exam_score, exam_subject) VALUES (4, '2021-06-30', 93, 'Biology') ON DUPLICATE KEY UPDATE exam_date = '2021-06-30', exam_score = 93;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_grade, birthdate) VALUES (5, 'Ella', 10, '2005-08-12') ON DUPLICATE KEY UPDATE student_name = 'Ella', student_grade = 10, birthdate = '2005-08-12';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_credit) VALUES (105, 'History', 2) ON DUPLICATE KEY UPDATE course_name = 'History', course_credit = 2;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_courses (student_id, course_id, enrollment_date, grade) VALUES (5, 105, '2020-09-20', 80) ON DUPLICATE KEY UPDATE enrollment_date = '2020-09-20', grade = 80;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, exam_score, exam_subject) VALUES (5, '2021-07-05', 75, 'History') ON DUPLICATE KEY UPDATE exam_date = '2021-07-05', exam_score = 75;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_grade, birthdate) VALUES (1, 'Alice', 10, '2005-07-15') ON DUPLICATE KEY UPDATE student_name='Alice', student_grade=10, birthdate='2005-07-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_credit) VALUES (101, 'Mathematics', 4) ON DUPLICATE KEY UPDATE course_name='Mathematics', course_credit=4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_courses (student_id, course_id, enrollment_date, grade) VALUES (1, 101, '2022-01-15', 95) ON DUPLICATE KEY UPDATE enrollment_date='2022-01-15', grade=95;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, exam_score, exam_subject) VALUES (1, '2022-05-01', 90, 'Math') ON DUPLICATE KEY UPDATE exam_date='2022-05-01', exam_score=90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_grade, birthdate) VALUES (2, 'Bob', 9, '2006-03-20') ON DUPLICATE KEY UPDATE student_name='Bob', student_grade=9, birthdate='2006-03-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_credit) VALUES (102, 'Science', 3) ON DUPLICATE KEY UPDATE course_name='Science', course_credit=3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_courses (student_id, course_id, enrollment_date, grade) VALUES (2, 102, '2022-02-10', 88) ON DUPLICATE KEY UPDATE enrollment_date='2022-02-10', grade=88;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, exam_score, exam_subject) VALUES (2, '2022-06-01', 85, 'Science') ON DUPLICATE KEY UPDATE exam_date='2022-06-01', exam_score=85;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_grade, birthdate) VALUES (3, 'Charlie', 11, '2004-10-10') ON DUPLICATE KEY UPDATE student_name='Charlie', student_grade=11, birthdate='2004-10-10';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_credit) VALUES (103, 'History', 2) ON DUPLICATE KEY UPDATE course_name='History', course_credit=2;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_courses (student_id, course_id, enrollment_date, grade) VALUES (3, 103, '2022-03-05', 75) ON DUPLICATE KEY UPDATE enrollment_date='2022-03-05', grade=75;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, exam_score, exam_subject) VALUES (3, '2022-07-01', 95, 'History') ON DUPLICATE KEY UPDATE exam_date='2022-07-01', exam_score=95;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_grade, birthdate) VALUES (4, 'David', 9, '2006-01-25') ON DUPLICATE KEY UPDATE student_name='David', student_grade=9, birthdate='2006-01-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_credit) VALUES (104, 'English', 3) ON DUPLICATE KEY UPDATE course_name='English', course_credit=3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_courses (student_id, course_id, enrollment_date, grade) VALUES (4, 104, '2022-04-20', 85) ON DUPLICATE KEY UPDATE enrollment_date='2022-04-20', grade=85;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, exam_score, exam_subject) VALUES (4, '2022-08-01', 80, 'English') ON DUPLICATE KEY UPDATE exam_date='2022-08-01', exam_score=80;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_grade, birthdate) VALUES (5, 'Emily', 12, '2003-09-05') ON DUPLICATE KEY UPDATE student_name='Emily', student_grade=12, birthdate='2003-09-05';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_credit) VALUES (105, 'Physics', 4) ON DUPLICATE KEY UPDATE course_name='Physics', course_credit=4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_courses (student_id, course_id, enrollment_date, grade) VALUES (5, 105, '2022-01-23', 92) ON DUPLICATE KEY UPDATE enrollment_date='2022-01-23', grade=92;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    student_grade INT,\n    birthdate DATE\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_credit INT\n);\n\n\nCREATE TABLE student_courses (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade INT,\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    exam_score INT,\n    exam_subject VARCHAR(255),\n    PRIMARY KEY (student_id, subject)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, exam_score, exam_subject) VALUES (5, '2022-09-01', 88, 'Physics') ON DUPLICATE KEY UPDATE exam_date='2022-09-01', exam_score=88;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, grade) VALUES (1, 'John Doe', 20, 'A') ON DUPLICATE KEY UPDATE name='John Doe', age=20, grade='A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (id, course_name, instructor, credits) VALUES (1, 'Mathematics', 'Prof. Smith', 3) ON DUPLICATE KEY UPDATE course_name='Mathematics', instructor='Prof. Smith', credits=3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO enrollment (student_id, course_id, enrollment_date, grade) VALUES (1, 1, '2022-01-01', 'A') ON DUPLICATE KEY UPDATE enrollment_date='2022-01-01', grade='A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (assignment_id, course_id, assignment_name, due_date) VALUES (1, 1, 'Homework 1', '2022-02-01') ON DUPLICATE KEY UPDATE assignment_name='Homework 1', due_date='2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, course_id, assignment_id, score) VALUES (1, 1, 1, 95.5) ON DUPLICATE KEY UPDATE score=95.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, grade) VALUES (2, 'Jane Smith', 22, 'B') ON DUPLICATE KEY UPDATE name='Jane Smith', age=22, grade='B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (id, course_name, instructor, credits) VALUES (2, 'English Literature', 'Prof. Johnson', 4) ON DUPLICATE KEY UPDATE course_name='English Literature', instructor='Prof. Johnson', credits=4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO enrollment (student_id, course_id, enrollment_date, grade) VALUES (2, 2, '2022-01-15', 'B') ON DUPLICATE KEY UPDATE enrollment_date='2022-01-15', grade='B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (assignment_id, course_id, assignment_name, due_date) VALUES (2, 2, 'Essay 1', '2022-02-15') ON DUPLICATE KEY UPDATE assignment_name='Essay 1', due_date='2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, course_id, assignment_id, score) VALUES (2, 2, 2, 88.7) ON DUPLICATE KEY UPDATE score=88.7;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, grade) VALUES (3, 'Mike Johnson', 25, 'A') ON DUPLICATE KEY UPDATE name='Mike Johnson', age=25, grade='A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (id, course_name, instructor, credits) VALUES (3, 'History', 'Prof. Brown', 3) ON DUPLICATE KEY UPDATE course_name='History', instructor='Prof. Brown', credits=3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO enrollment (student_id, course_id, enrollment_date, grade) VALUES (3, 3, '2022-01-10', 'A') ON DUPLICATE KEY UPDATE enrollment_date='2022-01-10', grade='A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (assignment_id, course_id, assignment_name, due_date) VALUES (3, 3, 'Quiz 1', '2022-02-10') ON DUPLICATE KEY UPDATE assignment_name='Quiz 1', due_date='2022-02-10';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, course_id, assignment_id, score) VALUES (3, 3, 3, 75.0) ON DUPLICATE KEY UPDATE score=75.0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, grade) VALUES (4, 'Emily White', 21, 'C') ON DUPLICATE KEY UPDATE name='Emily White', age=21, grade='C';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (id, course_name, instructor, credits) VALUES (4, 'Computer Science', 'Prof. Lee', 4) ON DUPLICATE KEY UPDATE course_name='Computer Science', instructor='Prof. Lee', credits=4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO enrollment (student_id, course_id, enrollment_date, grade) VALUES (4, 4, '2022-01-20', 'C') ON DUPLICATE KEY UPDATE enrollment_date='2022-01-20', grade='C';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (assignment_id, course_id, assignment_name, due_date) VALUES (4, 4, 'Lab 1', '2022-02-20') ON DUPLICATE KEY UPDATE assignment_name='Lab 1', due_date='2022-02-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, course_id, assignment_id, score) VALUES (4, 4, 4, 82.3) ON DUPLICATE KEY UPDATE score=82.3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, grade) VALUES (5, 'Sarah Brown', 23, 'B') ON DUPLICATE KEY UPDATE name='Sarah Brown', age=23, grade='B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, grade) VALUES (1, 'John Doe', 20, 'A') ON CONFLICT (id) DO UPDATE SET name = 'John Doe', age = 21, grade = 'B'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO courses (id, course_name, instructor, credits) VALUES (101, 'Mathematics', 'Prof. Smith', 3) ON CONFLICT (id) DO UPDATE SET course_name = 'Mathematics', instructor = 'Prof. Brown', credits = 4",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO enrollment (student_id, course_id, enrollment_date, grade) VALUES (1, 101, '2022-01-15', 'A') ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = '2022-01-20', grade = 'B'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO assignments (assignment_id, course_id, assignment_name, due_date) VALUES (1, 101, 'Quiz 1', '2022-02-01') ON CONFLICT (assignment_id) DO UPDATE SET course_id = 102, assignment_name = 'Quiz 2', due_date = '2022-02-15'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    grade VARCHAR(10)\n);\n\n\nCREATE TABLE courses (\n    id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    instructor VARCHAR(255),\n    credits INT\n);\n\n\nCREATE TABLE enrollment (\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    grade VARCHAR(2),\n    PRIMARY KEY (student_id, course_id)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(255),\n    due_date DATE\n);\n\n\nCREATE TABLE grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    score FLOAT,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO grades (student_id, course_id, assignment_id, score) VALUES (1, 101, 1, 90.5) ON CONFLICT (student_id, course_id, assignment_id) DO UPDATE SET score = 95.0"
]