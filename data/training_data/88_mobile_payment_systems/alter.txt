<t>CREATE TABLE mobile_paymentsystem (payment_id SERIAL PRIMARY KEY, user_id INT NOT NULL, amount DECIMAL NOT NULL, payment_date DATE NOT NULL)</t><stat>ALTER TABLE mobile_paymentsystem ADD COLUMN payment_status VARCHAR(50);</stat><divider><t>CREATE TABLE mobile_paymentsystem (payment_id SERIAL PRIMARY KEY, user_id INT NOT NULL, amount DECIMAL NOT NULL, payment_date DATE NOT NULL)</t><stat>alter table mobile_paymentsystem add column payment_status varchar(50);</stat><divider><t>CREATE TABLE mobile_paymentsystem (payment_id SERIAL PRIMARY KEY, user_id INT NOT NULL, amount DECIMAL NOT NULL, payment_date DATE NOT NULL)</t><stat>ALTER TABLE mobile_paymentsystem ALTER COLUMN amount SET DEFAULT 0.0;</stat><divider><t>CREATE TABLE mobile_paymentsystem (payment_id SERIAL PRIMARY KEY, user_id INT NOT NULL, amount DECIMAL NOT NULL, payment_date DATE NOT NULL)</t><stat>alter table mobile_paymentsystem alter column amount set default 0.0;</stat><divider><t>CREATE TABLE mobile_paymentsystem (payment_id SERIAL PRIMARY KEY, user_id INT NOT NULL, amount DECIMAL NOT NULL, payment_date DATE NOT NULL)</t><stat>ALTER TABLE mobile_paymentsystem DROP COLUMN payment_date;</stat><divider><t>CREATE TABLE mobile_paymentsystem (payment_id SERIAL PRIMARY KEY, user_id INT NOT NULL, amount DECIMAL NOT NULL, payment_date DATE NOT NULL)</t><stat>alter table mobile_paymentsystem drop column payment_date;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL)</t><stat>ALTER TABLE users ADD COLUMN address VARCHAR(150);</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL)</t><stat>alter table users add column address varchar(150);</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL)</t><stat>ALTER TABLE users ADD COLUMN is_active BOOLEAN DEFAULT TRUE;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL)</t><stat>alter table users add column is_active boolean default true;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL)</t><stat>ALTER TABLE users DROP COLUMN phone_number;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL)</t><stat>alter table users drop column phone_number;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>ALTER TABLE users ADD COLUMN address STRING;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>alter table users add column address string;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>ALTER TABLE users ADD COLUMN address STRING;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>alter table users add column address string;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>ALTER TABLE users ADD COLUMN address STRING;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>alter table users add column address string;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>ALTER TABLE users ADD COLUMN address STRING;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>alter table users add column address string;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>ALTER TABLE users ADD COLUMN address STRING;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>alter table users add column address string;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>ALTER TABLE users ADD COLUMN address STRING;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>alter table users add column address string;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>ALTER TABLE transactions ADD COLUMN description STRING;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>alter table transactions add column description string;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>ALTER TABLE transactions ADD COLUMN description STRING;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>alter table transactions add column description string;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>ALTER TABLE transactions ADD COLUMN description STRING;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>alter table transactions add column description string;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>ALTER TABLE transactions ADD COLUMN description STRING;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>alter table transactions add column description string;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>ALTER TABLE transactions ADD COLUMN description STRING;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>alter table transactions add column description string;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>ALTER TABLE transactions ADD COLUMN description STRING;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>alter table transactions add column description string;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>ALTER TABLE payments ADD COLUMN payment_date TIMESTAMP;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>alter table payments add column payment_date timestamp;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>ALTER TABLE payments ADD COLUMN payment_date TIMESTAMP;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>alter table payments add column payment_date timestamp;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>ALTER TABLE payments ADD COLUMN payment_date TIMESTAMP;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>alter table payments add column payment_date timestamp;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>ALTER TABLE payments ADD COLUMN payment_date TIMESTAMP;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>alter table payments add column payment_date timestamp;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>ALTER TABLE payments ADD COLUMN payment_date TIMESTAMP;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>alter table payments add column payment_date timestamp;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>ALTER TABLE payments ADD COLUMN payment_date TIMESTAMP;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>alter table payments add column payment_date timestamp;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE users ADD COLUMN email VARCHAR(50) NOT NULL</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table users add column email varchar(50) not null</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE wallets ADD COLUMN currency VARCHAR(3) DEFAULT 'USD'</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table wallets add column currency varchar(3) default 'usd'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>ALTER TABLE payment_methods ADD COLUMN active BOOLEAN DEFAULT true</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>alter table payment_methods add column active boolean default true</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Users ADD COLUMN last_login TIMESTAMP DEFAULT NOW();</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table users add column last_login timestamp default now();</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Wallets ADD COLUMN withdrawal_limit DECIMAL(10,2) DEFAULT 1000.00;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table wallets add column withdrawal_limit decimal(10,2) default 1000.00;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>ALTER TABLE Cards ADD COLUMN card_holder_name VARCHAR(50) NOT NULL;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>alter table cards add column card_holder_name varchar(50) not null;</stat>